(global["webpackJsonp"] = global["webpackJsonp"] || []).push([["components/uni-icons/uni-icons"],{

/***/ 49:
/*!**********************************************************************************!*\
  !*** D:/LiJiaqiFiles/codes/MYGITHUB/bruceLee/components/uni-icons/uni-icons.vue ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _uni_icons_vue_vue_type_template_id_e080e622_scoped_true___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./uni-icons.vue?vue&type=template&id=e080e622&scoped=true& */ 50);\n/* harmony import */ var _uni_icons_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./uni-icons.vue?vue&type=script&lang=js& */ 52);\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _uni_icons_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _uni_icons_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));\n/* harmony import */ var _uni_icons_vue_vue_type_style_index_0_id_e080e622_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./uni-icons.vue?vue&type=style&index=0&id=e080e622&scoped=true&lang=css& */ 55);\n/* harmony import */ var _C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/vue-loader/lib/runtime/componentNormalizer.js */ 15);\n\n\n\n\n\n\n/* normalize component */\n\nvar component = Object(_C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(\n  _uni_icons_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n  _uni_icons_vue_vue_type_template_id_e080e622_scoped_true___WEBPACK_IMPORTED_MODULE_0__[\"render\"],\n  _uni_icons_vue_vue_type_template_id_e080e622_scoped_true___WEBPACK_IMPORTED_MODULE_0__[\"staticRenderFns\"],\n  false,\n  null,\n  \"e080e622\",\n  null\n  \n)\n\n/* hot reload */\nif (false) { var api; }\ncomponent.options.__file = \"D:/LiJiaqiFiles/codes/MYGITHUB/bruceLee/components/uni-icons/uni-icons.vue\"\n/* harmony default export */ __webpack_exports__[\"default\"] = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFvRztBQUN2QztBQUNMO0FBQ3FDOzs7QUFHN0Y7QUFDMkk7QUFDM0ksZ0JBQWdCLHdKQUFVO0FBQzFCLEVBQUUsK0VBQU07QUFDUixFQUFFLGdHQUFNO0FBQ1IsRUFBRSx5R0FBZTtBQUNqQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBLElBQUksS0FBVSxFQUFFLFlBaUJmO0FBQ0Q7QUFDZSxnRiIsImZpbGUiOiI0OS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0gZnJvbSBcIi4vdW5pLWljb25zLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD1lMDgwZTYyMiZzY29wZWQ9dHJ1ZSZcIlxuaW1wb3J0IHNjcmlwdCBmcm9tIFwiLi91bmktaWNvbnMudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiXG5leHBvcnQgKiBmcm9tIFwiLi91bmktaWNvbnMudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiXG5pbXBvcnQgc3R5bGUwIGZyb20gXCIuL3VuaS1pY29ucy52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZpZD1lMDgwZTYyMiZzY29wZWQ9dHJ1ZSZsYW5nPWNzcyZcIlxuXG5cbi8qIG5vcm1hbGl6ZSBjb21wb25lbnQgKi9cbmltcG9ydCBub3JtYWxpemVyIGZyb20gXCIhQzpcXFxcUHJvZ3JhbSBGaWxlc1xcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFx2dWUtbG9hZGVyXFxcXGxpYlxcXFxydW50aW1lXFxcXGNvbXBvbmVudE5vcm1hbGl6ZXIuanNcIlxudmFyIGNvbXBvbmVudCA9IG5vcm1hbGl6ZXIoXG4gIHNjcmlwdCxcbiAgcmVuZGVyLFxuICBzdGF0aWNSZW5kZXJGbnMsXG4gIGZhbHNlLFxuICBudWxsLFxuICBcImUwODBlNjIyXCIsXG4gIG51bGxcbiAgXG4pXG5cbi8qIGhvdCByZWxvYWQgKi9cbmlmIChtb2R1bGUuaG90KSB7XG4gIHZhciBhcGkgPSByZXF1aXJlKFwiQzpcXFxcUHJvZ3JhbSBGaWxlc1xcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFx2dWUtaG90LXJlbG9hZC1hcGlcXFxcZGlzdFxcXFxpbmRleC5qc1wiKVxuICBhcGkuaW5zdGFsbChyZXF1aXJlKCd2dWUnKSlcbiAgaWYgKGFwaS5jb21wYXRpYmxlKSB7XG4gICAgbW9kdWxlLmhvdC5hY2NlcHQoKVxuICAgIGlmICghbW9kdWxlLmhvdC5kYXRhKSB7XG4gICAgICBhcGkuY3JlYXRlUmVjb3JkKCdlMDgwZTYyMicsIGNvbXBvbmVudC5vcHRpb25zKVxuICAgIH0gZWxzZSB7XG4gICAgICBhcGkucmVsb2FkKCdlMDgwZTYyMicsIGNvbXBvbmVudC5vcHRpb25zKVxuICAgIH1cbiAgICBtb2R1bGUuaG90LmFjY2VwdChcIi4vdW5pLWljb25zLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD1lMDgwZTYyMiZzY29wZWQ9dHJ1ZSZcIiwgZnVuY3Rpb24gKCkge1xuICAgICAgYXBpLnJlcmVuZGVyKCdlMDgwZTYyMicsIHtcbiAgICAgICAgcmVuZGVyOiByZW5kZXIsXG4gICAgICAgIHN0YXRpY1JlbmRlckZuczogc3RhdGljUmVuZGVyRm5zXG4gICAgICB9KVxuICAgIH0pXG4gIH1cbn1cbmNvbXBvbmVudC5vcHRpb25zLl9fZmlsZSA9IFwiRDovTGlKaWFxaUZpbGVzL2NvZGVzL01ZR0lUSFVCL2JydWNlTGVlL2NvbXBvbmVudHMvdW5pLWljb25zL3VuaS1pY29ucy52dWVcIlxuZXhwb3J0IGRlZmF1bHQgY29tcG9uZW50LmV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///49\n");

/***/ }),

/***/ 50:
/*!*****************************************************************************************************************************!*\
  !*** D:/LiJiaqiFiles/codes/MYGITHUB/bruceLee/components/uni-icons/uni-icons.vue?vue&type=template&id=e080e622&scoped=true& ***!
  \*****************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_hbuilderx_packages_webpack_uni_nvue_loader_lib_templateLoader_js_vue_loader_options_C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_17_0_C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_template_js_C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_uni_icons_vue_vue_type_template_id_e080e622_scoped_true___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!./node_modules/@dcloudio/vue-cli-plugin-hbuilderx/packages/webpack-uni-nvue-loader/lib/templateLoader.js??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--17-0!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/template.js!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-custom-block-loader??ref--0-1!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./uni-icons.vue?vue&type=template&id=e080e622&scoped=true& */ 51);\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return _C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_hbuilderx_packages_webpack_uni_nvue_loader_lib_templateLoader_js_vue_loader_options_C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_17_0_C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_template_js_C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_uni_icons_vue_vue_type_template_id_e080e622_scoped_true___WEBPACK_IMPORTED_MODULE_0__[\"render\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"staticRenderFns\", function() { return _C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_hbuilderx_packages_webpack_uni_nvue_loader_lib_templateLoader_js_vue_loader_options_C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_17_0_C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_template_js_C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_uni_icons_vue_vue_type_template_id_e080e622_scoped_true___WEBPACK_IMPORTED_MODULE_0__[\"staticRenderFns\"]; });\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSIsImZpbGUiOiI1MC5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gXCItIUM6XFxcXFByb2dyYW0gRmlsZXNcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcQGRjbG91ZGlvXFxcXHZ1ZS1jbGktcGx1Z2luLWhidWlsZGVyeFxcXFxwYWNrYWdlc1xcXFx3ZWJwYWNrLXVuaS1udnVlLWxvYWRlclxcXFxsaWJcXFxcdGVtcGxhdGVMb2FkZXIuanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyFDOlxcXFxQcm9ncmFtIEZpbGVzXFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXEBkY2xvdWRpb1xcXFx2dWUtY2xpLXBsdWdpbi11bmlcXFxccGFja2FnZXNcXFxcd2VicGFjay1wcmVwcm9jZXNzLWxvYWRlclxcXFxpbmRleC5qcz8/cmVmLS0xNy0wIUM6XFxcXFByb2dyYW0gRmlsZXNcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcQGRjbG91ZGlvXFxcXHdlYnBhY2stdW5pLW1wLWxvYWRlclxcXFxsaWJcXFxcdGVtcGxhdGUuanMhQzpcXFxcUHJvZ3JhbSBGaWxlc1xcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFx2dWUtbG9hZGVyXFxcXGxpYlxcXFxpbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIUM6XFxcXFByb2dyYW0gRmlsZXNcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcQGRjbG91ZGlvXFxcXHZ1ZS1jbGktcGx1Z2luLXVuaVxcXFxwYWNrYWdlc1xcXFx3ZWJwYWNrLWN1c3RvbS1ibG9jay1sb2FkZXJcXFxcaW5kZXguanM/P3JlZi0tMC0xIUM6XFxcXFByb2dyYW0gRmlsZXNcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcQGRjbG91ZGlvXFxcXHdlYnBhY2stdW5pLW1wLWxvYWRlclxcXFxsaWJcXFxcc3R5bGUuanMhLi91bmktaWNvbnMudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPWUwODBlNjIyJnNjb3BlZD10cnVlJlwiIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///50\n");

/***/ }),

/***/ 51:

  !*** ./node_modules/@dcloudio/vue-cli-plugin-hbuilderx/packages/webpack-uni-nvue-loader/lib/templateLoader.js??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--17-0!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/template.js!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-custom-block-loader??ref--0-1!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!D:/LiJiaqiFiles/codes/MYGITHUB/bruceLee/components/uni-icons/uni-icons.vue?vue&type=template&id=e080e622&scoped=true& ***!
  \****************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return render; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"staticRenderFns\", function() { return staticRenderFns; });\nvar render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjUxLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkge1xuICB2YXIgX3ZtID0gdGhpc1xuICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnRcbiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oXG59XG52YXIgc3RhdGljUmVuZGVyRm5zID0gW11cbnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZVxuXG5leHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///51\n");

/***/ }),

/***/ 52:
/*!***********************************************************************************************************!*\
  !*** D:/LiJiaqiFiles/codes/MYGITHUB/bruceLee/components/uni-icons/uni-icons.vue?vue&type=script&lang=js& ***!
  \***********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_12_1_C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_script_js_C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_uni_icons_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!./node_modules/babel-loader/lib!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--12-1!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-custom-block-loader??ref--0-1!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./uni-icons.vue?vue&type=script&lang=js& */ 53);\n/* harmony import */ var _C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_12_1_C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_script_js_C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_uni_icons_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_12_1_C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_script_js_C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_uni_icons_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_12_1_C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_script_js_C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_uni_icons_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_12_1_C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_script_js_C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_uni_icons_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));\n /* harmony default export */ __webpack_exports__[\"default\"] = (_C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_12_1_C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_script_js_C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_uni_icons_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQSt4QixDQUFnQiwweUJBQUcsRUFBQyIsImZpbGUiOiI1Mi5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb2QgZnJvbSBcIi0hQzpcXFxcUHJvZ3JhbSBGaWxlc1xcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxiYWJlbC1sb2FkZXJcXFxcbGliXFxcXGluZGV4LmpzIUM6XFxcXFByb2dyYW0gRmlsZXNcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcQGRjbG91ZGlvXFxcXHZ1ZS1jbGktcGx1Z2luLXVuaVxcXFxwYWNrYWdlc1xcXFx3ZWJwYWNrLXByZXByb2Nlc3MtbG9hZGVyXFxcXGluZGV4LmpzPz9yZWYtLTEyLTEhQzpcXFxcUHJvZ3JhbSBGaWxlc1xcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcd2VicGFjay11bmktbXAtbG9hZGVyXFxcXGxpYlxcXFxzY3JpcHQuanMhQzpcXFxcUHJvZ3JhbSBGaWxlc1xcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFx2dWUtbG9hZGVyXFxcXGxpYlxcXFxpbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIUM6XFxcXFByb2dyYW0gRmlsZXNcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcQGRjbG91ZGlvXFxcXHZ1ZS1jbGktcGx1Z2luLXVuaVxcXFxwYWNrYWdlc1xcXFx3ZWJwYWNrLWN1c3RvbS1ibG9jay1sb2FkZXJcXFxcaW5kZXguanM/P3JlZi0tMC0xIUM6XFxcXFByb2dyYW0gRmlsZXNcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcQGRjbG91ZGlvXFxcXHdlYnBhY2stdW5pLW1wLWxvYWRlclxcXFxsaWJcXFxcc3R5bGUuanMhLi91bmktaWNvbnMudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiOyBleHBvcnQgZGVmYXVsdCBtb2Q7IGV4cG9ydCAqIGZyb20gXCItIUM6XFxcXFByb2dyYW0gRmlsZXNcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcYmFiZWwtbG9hZGVyXFxcXGxpYlxcXFxpbmRleC5qcyFDOlxcXFxQcm9ncmFtIEZpbGVzXFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXEBkY2xvdWRpb1xcXFx2dWUtY2xpLXBsdWdpbi11bmlcXFxccGFja2FnZXNcXFxcd2VicGFjay1wcmVwcm9jZXNzLWxvYWRlclxcXFxpbmRleC5qcz8/cmVmLS0xMi0xIUM6XFxcXFByb2dyYW0gRmlsZXNcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcQGRjbG91ZGlvXFxcXHdlYnBhY2stdW5pLW1wLWxvYWRlclxcXFxsaWJcXFxcc2NyaXB0LmpzIUM6XFxcXFByb2dyYW0gRmlsZXNcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcdnVlLWxvYWRlclxcXFxsaWJcXFxcaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyFDOlxcXFxQcm9ncmFtIEZpbGVzXFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXEBkY2xvdWRpb1xcXFx2dWUtY2xpLXBsdWdpbi11bmlcXFxccGFja2FnZXNcXFxcd2VicGFjay1jdXN0b20tYmxvY2stbG9hZGVyXFxcXGluZGV4LmpzPz9yZWYtLTAtMSFDOlxcXFxQcm9ncmFtIEZpbGVzXFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXEBkY2xvdWRpb1xcXFx3ZWJwYWNrLXVuaS1tcC1sb2FkZXJcXFxcbGliXFxcXHN0eWxlLmpzIS4vdW5pLWljb25zLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///52\n");

/***/ }),

/***/ 53:
/*!***********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--12-1!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-custom-block-loader??ref--0-1!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!D:/LiJiaqiFiles/codes/MYGITHUB/bruceLee/components/uni-icons/uni-icons.vue?vue&type=script&lang=js& ***!
  \***********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;\n\n\n\n\nvar _icons = _interopRequireDefault(__webpack_require__(/*! ./icons.js */ 54));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };} //\n//\n//\n//\nvar _default =\n\n\n\n{\n  name: 'UniIcons',\n  props: {\n    type: {\n      type: String,\n      default: '' },\n\n    color: {\n      type: String,\n      default: '#333333' },\n\n    size: {\n      type: [Number, String],\n      default: 16 } },\n\n\n  data: function data() {\n    return {\n      icons: _icons.default };\n\n  },\n  methods: {\n    _onClick: function _onClick() {\n      this.$emit('click');\n    } } };exports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vY29tcG9uZW50cy91bmktaWNvbnMvdW5pLWljb25zLnZ1ZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUtBLCtFOzs7Ozs7OztBQVFBO0FBQ0Esa0JBREE7QUFFQTtBQUNBO0FBQ0Esa0JBREE7QUFFQSxpQkFGQSxFQURBOztBQUtBO0FBQ0Esa0JBREE7QUFFQSx3QkFGQSxFQUxBOztBQVNBO0FBQ0EsNEJBREE7QUFFQSxpQkFGQSxFQVRBLEVBRkE7OztBQWdCQSxNQWhCQSxrQkFnQkE7QUFDQTtBQUNBLDJCQURBOztBQUdBLEdBcEJBO0FBcUJBO0FBQ0EsWUFEQSxzQkFDQTtBQUNBO0FBQ0EsS0FIQSxFQXJCQSxFIiwiZmlsZSI6IjUzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiPHRlbXBsYXRlPlxyXG5cdDx0ZXh0IDpzdHlsZT1cInsgY29sb3I6IGNvbG9yLCAnZm9udC1zaXplJzogc2l6ZSArICdweCcgfVwiIGNsYXNzPVwidW5pLWljb25zXCIgQGNsaWNrPVwiX29uQ2xpY2tcIj57e2ljb25zW3R5cGVdfX08L3RleHQ+XHJcbjwvdGVtcGxhdGU+XHJcblxyXG48c2NyaXB0PlxyXG5cdGltcG9ydCBpY29ucyBmcm9tICcuL2ljb25zLmpzJztcclxuXHQvLyAjaWZkZWYgQVBQLU5WVUVcclxuXHR2YXIgZG9tTW9kdWxlID0gd2VleC5yZXF1aXJlTW9kdWxlKCdkb20nKTtcclxuXHRkb21Nb2R1bGUuYWRkUnVsZSgnZm9udEZhY2UnLCB7XHJcblx0XHQnZm9udEZhbWlseSc6IFwidW5paWNvbnNcIixcclxuXHRcdCdzcmMnOiBcInVybCgnZGF0YTpmb250L3RydWV0eXBlO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LEFBRUFBQUFRQVFBQUJBQUFSa1pVVFlqNDNzc0FBSGJZQUFBQUhFZEVSVVlBSndCbUFBQjJ1QUFBQUI1UFV5OHlXV2xjcWdBQUFZZ0FBQUJnWTIxaGNHQmhiQlVBQUFLMEFBQUNRbU4yZENBTXBmNDBBQUFQS0FBQUFDUm1jR2R0TVBlZWxRQUFCUGdBQUFtV1oyRnpjQUFBQUJBQUFIYXdBQUFBQ0dkc2VXWnNmZ2ZaQUFBUUVBQUFZUXhvWldGa0ZvZjYvd0FBQVF3QUFBQTJhR2hsWVFkK0F5WUFBQUZFQUFBQUpHaHRkSGdrZUJ1WUFBQUI2QUFBQU1wc2IyTmhQRWtuTGdBQUQwd0FBQURDYldGNGNBSWpBM0lBQUFGb0FBQUFJRzVoYldYV09UdFVBQUJ4SEFBQUFkUndiM04wVEpFNGlnQUFjdkFBQUFPL2NISmxjS1c1dm1ZQUFBNlFBQUFBbFFBQkFBQUFBUUFBQ1YvT09WOFBQUFVBSHdRQUFBQUFBTm1xVzdrQUFBQUEyYXBjQ1FBQS95QUVBQU1nQUFBQUNBQUNBQUFBQUFBQUFBRUFBQU1nL3lBQVhBUUFBQUFBQUFRQUFBRUFBQUFBQUFBQUFBQUFBQUFBQUFBRkFBRUFBQUJnQVhvQURBQUFBQUFBQWdCR0FGUUFiQUFBQVFRQm9nQUFBQUFBQkFQL0FaQUFCZ0FBQXBrQ3pBQUFBSThDbVFMTUFBQUI2d0F6QVFrQUFBSUFCZ01BQUFBQUFBQUFBQUFCRUFBQUFBQUFBQUFBQUFBQVVFWkZSQUdBQUIzbUVnTXMveXdBWEFNZ0FPQUFBQUFCQUFBQUFBTVlBczBBQUFBZ0FBRUJkZ0FpQUFBQUFBRlZBQUFENlFBc0JBQUFZQURBQU1BQVlBREFBTUFBb0FDQUFJQUFZQUNnQUlBQWdBQmdBTE1BUUFCQUFBVUFWd0JlQUlBQkFBRDBBUUFBOUFFQUFFQUFWZ0NnQU9BQXdBREFBRkVBZmdDQUFHQUFRQUJnQUdBQVlBQStBRkVBWUFCQUFHQUFZQUEwQUdBQVBnRkFBUUFBZ0FCQUFBQUFKUUNCQVFBQlFBRkFBU3dBZ0FCZ0FJQUF3QUJnQUdBQXdBREJBUUFBZ0FDQUFHQUFZQURCQUVBQVJBQkFBQmNCWHdBVEFNQUF3QUZBQVVBQlFBRkFBTUFBd0FFZUFGOEFWUUJBQUFBQUFBQURBQUFBQXdBQUFCd0FBUUFBQUFBQlBBQURBQUVBQUFBY0FBUUJJQUFBQUVRQVFBQUZBQVFBQUFBZEFIamhBdUV5NGdQaU0rSms0d1BqTStOZzQyVGtDZVFSNUJQa05PUTU1RVBrWnVSbzVITGxDT1V3NVRMbE5lVTM1V0RsWStWbDVXamxpZVdRNWhMLy93QUFBQUFBSFFCNDRRRGhNT0lBNGpEaVlPTUE0ekxqWU9OajVBRGtFT1FUNURUa04rUkE1R0RrYU9SdzVRRGxNT1V5NVRUbE4rVmc1V0xsWmVWbjVZRGxrT1lTLy84QUFmL2svNHNmQkI3WEhnb2QzaDJ5SFJjYzZSeTlITHNjSUJ3YUhCa2IrUnYzRy9FYjFSdlVHODBiUUJzWkd4Z2JGeHNXR3U0YTdScnNHdXNhMUJyT0drMEFBUUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUJCZ0FBQVFBQUFBQUFBQUFCQWdBQUFBSUFBQUFBQUFBQUFBQUFBQUFBQUFBQkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUF3QUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFzQUFzc0NCZ1ppMndBU3dnWkNDd3dGQ3dCQ1phc0FSRlcxZ2hJeUViaWxnZ3NGQlFXQ0d3UUZrYklMQTRVRmdoc0RoWldTQ3dDa1ZoWkxBb1VGZ2hzQXBGSUxBd1VGZ2hzREJaR3lDd3dGQllJR1lnaW9waElMQUtVRmhnR3lDd0lGQllJYkFLWUJzZ3NEWlFXQ0d3Tm1BYllGbFpXUnV3QUN0WldTT3dBRkJZWlZsWkxiQUNMQ0JGSUxBRUpXRmtJTEFGUTFCWXNBVWpRckFHSTBJYklTRlpzQUZnTGJBRExDTWhJeUVnWkxFRllrSWdzQVlqUXJJS0FBSXFJU0N3QmtNZ2lpQ0tzQUFyc1RBRkpZcFJXR0JRRzJGU1dWZ2pXU0Vnc0VCVFdMQUFLeHNoc0VCWkk3QUFVRmhsV1Myd0JDeXdDQ05Dc0FjalFyQUFJMEt3QUVPd0IwTlJXTEFJUXl1eUFBRUFRMkJDc0JabEhGa3RzQVVzc0FCRElFVWdzQUpGWTdBQlJXSmdSQzJ3Qml5d0FFTWdSU0N3QUNzanNRUUVKV0FnUllvallTQmtJTEFnVUZnaHNBQWJzREJRV0xBZ0c3QkFXVmtqc0FCUVdHVlpzQU1sSTJGRVJDMndCeXl4QlFWRnNBRmhSQzJ3Q0N5d0FXQWdJTEFLUTBxd0FGQllJTEFLSTBKWnNBdERTckFBVWxnZ3NBc2pRbGt0c0Frc0lMZ0VBR0lndUFRQVk0b2pZYkFNUTJBZ2ltQWdzQXdqUWlNdHNBb3NTMVJZc1FjQlJGa2tzQTFsSTNndHNBc3NTMUZZUzFOWXNRY0JSRmtiSVZra3NCTmxJM2d0c0F3c3NRQU5RMVZZc1EwTlE3QUJZVUt3Q1N0WnNBQkRzQUlsUXJJQUFRQkRZRUt4Q2dJbFFyRUxBaVZDc0FFV0l5Q3dBeVZRV0xBQVE3QUVKVUtLaWlDS0kyR3dDQ29oSTdBQllTQ0tJMkd3Q0NvaEc3QUFRN0FDSlVLd0FpVmhzQWdxSVZtd0NrTkhzQXREUjJDd2dHSWdzQUpGWTdBQlJXSmdzUUFBRXlORXNBRkRzQUErc2dFQkFVTmdRaTJ3RFN5eEFBVkZWRmdBc0EwalFpQmdzQUZodFE0T0FRQU1BRUpDaW1DeERBUXJzR3NyR3lKWkxiQU9MTEVBRFNzdHNBOHNzUUVOS3kyd0VDeXhBZzByTGJBUkxMRUREU3N0c0JJc3NRUU5LeTJ3RXl5eEJRMHJMYkFVTExFR0RTc3RzQlVzc1FjTkt5MndGaXl4Q0EwckxiQVhMTEVKRFNzdHNCZ3NzQWNyc1FBRlJWUllBTEFOSTBJZ1lMQUJZYlVPRGdFQURBQkNRb3Bnc1F3RUs3QnJLeHNpV1Myd0dTeXhBQmdyTGJBYUxMRUJHQ3N0c0Jzc3NRSVlLeTJ3SEN5eEF4Z3JMYkFkTExFRUdDc3RzQjRzc1FVWUt5MndIeXl4QmhnckxiQWdMTEVIR0NzdHNDRXNzUWdZS3kyd0lpeXhDUmdyTGJBakxDQmdzQTVnSUVNanNBRmdRN0FDSmJBQ0pWRllJeUE4c0FGZ0k3QVNaUndiSVNGWkxiQWtMTEFqSzdBaktpMndKU3dnSUVjZ0lMQUNSV093QVVWaVlDTmhPQ01naWxWWUlFY2dJTEFDUldPd0FVVmlZQ05oT0JzaFdTMndKaXl4QUFWRlZGZ0FzQUVXc0NVcXNBRVZNQnNpV1Myd0p5eXdCeXV4QUFWRlZGZ0FzQUVXc0NVcXNBRVZNQnNpV1Myd0tDd2dOYkFCWUMyd0tTd0FzQU5GWTdBQlJXS3dBQ3V3QWtWanNBRkZZckFBSzdBQUZyUUFBQUFBQUVRK0l6aXhLQUVWS2kyd0tpd2dQQ0JISUxBQ1JXT3dBVVZpWUxBQVEyRTRMYkFyTEM0WFBDMndMQ3dnUENCSElMQUNSV093QVVWaVlMQUFRMkd3QVVOak9DMndMU3l4QWdBV0pTQXVJRWV3QUNOQ3NBSWxTWXFLUnlOSEkyRWdXR0liSVZtd0FTTkNzaXdCQVJVVUtpMndMaXl3QUJhd0JDV3dCQ1ZISTBjalliQUdSU3RsaWk0aklDQThpamd0c0M4c3NBQVdzQVFsc0FRbElDNUhJMGNqWVNDd0JDTkNzQVpGS3lDd1lGQllJTEJBVVZpekFpQURJQnV6QWlZREdsbENRaU1nc0FsRElJb2pSeU5ISTJFalJtQ3dCRU93Z0dKZ0lMQUFLeUNLaW1FZ3NBSkRZR1Fqc0FORFlXUlFXTEFDUTJFYnNBTkRZRm13QXlXd2dHSmhJeUFnc0FRbUkwWmhPQnNqc0FsRFJyQUNKYkFKUTBjalJ5TmhZQ0N3QkVPd2dHSmdJeUN3QUNzanNBUkRZTEFBSzdBRkpXR3dCU1d3Z0dLd0JDWmhJTEFFSldCa0k3QURKV0JrVUZnaEd5TWhXU01nSUxBRUppTkdZVGhaTGJBd0xMQUFGaUFnSUxBRkppQXVSeU5ISTJFalBEZ3RzREVzc0FBV0lMQUpJMElnSUNCR0kwZXdBQ3NqWVRndHNESXNzQUFXc0FNbHNBSWxSeU5ISTJHd0FGUllMaUE4SXlFYnNBSWxzQUlsUnlOSEkyRWdzQVVsc0FRbFJ5TkhJMkd3QmlXd0JTVkpzQUlsWWJBQlJXTWpJRmhpR3lGWlk3QUJSV0pnSXk0aklDQThpamdqSVZrdHNETXNzQUFXSUxBSlF5QXVSeU5ISTJFZ1lMQWdZR2F3Z0dJaklDQThpamd0c0RRc0l5QXVSckFDSlVaU1dDQThXUzZ4SkFFVUt5MndOU3dqSUM1R3NBSWxSbEJZSUR4WkxyRWtBUlFyTGJBMkxDTWdMa2F3QWlWR1VsZ2dQRmtqSUM1R3NBSWxSbEJZSUR4WkxyRWtBUlFyTGJBM0xMQXVLeU1nTGthd0FpVkdVbGdnUEZrdXNTUUJGQ3N0c0Rnc3NDOHJpaUFnUExBRUkwS0tPQ01nTGthd0FpVkdVbGdnUEZrdXNTUUJGQ3V3QkVNdXNDUXJMYkE1TExBQUZyQUVKYkFFSmlBdVJ5TkhJMkd3QmtVckl5QThJQzRqT0xFa0FSUXJMYkE2TExFSkJDVkNzQUFXc0FRbHNBUWxJQzVISTBjallTQ3dCQ05Dc0FaRkt5Q3dZRkJZSUxCQVVWaXpBaUFESUJ1ekFpWURHbGxDUWlNZ1I3QUVRN0NBWW1BZ3NBQXJJSXFLWVNDd0FrTmdaQ093QTBOaFpGQllzQUpEWVJ1d0EwTmdXYkFESmJDQVltR3dBaVZHWVRnaklEd2pPQnNoSUNCR0kwZXdBQ3NqWVRnaFdiRWtBUlFyTGJBN0xMQXVLeTZ4SkFFVUt5MndQQ3l3THlzaEl5QWdQTEFFSTBJak9MRWtBUlFyc0FSRExyQWtLeTJ3UFN5d0FCVWdSN0FBSTBLeUFBRUJGUlFUTHJBcUtpMndQaXl3QUJVZ1I3QUFJMEt5QUFFQkZSUVRMckFxS2kyd1B5eXhBQUVVRTdBcktpMndRQ3l3TFNvdHNFRXNzQUFXUlNNZ0xpQkdpaU5oT0xFa0FSUXJMYkJDTExBSkkwS3dRU3N0c0VNc3NnQUFPaXN0c0VRc3NnQUJPaXN0c0VVc3NnRUFPaXN0c0VZc3NnRUJPaXN0c0Vjc3NnQUFPeXN0c0Vnc3NnQUJPeXN0c0Vrc3NnRUFPeXN0c0Vvc3NnRUJPeXN0c0Vzc3NnQUFOeXN0c0V3c3NnQUJOeXN0c0Uwc3NnRUFOeXN0c0U0c3NnRUJOeXN0c0U4c3NnQUFPU3N0c0ZBc3NnQUJPU3N0c0ZFc3NnRUFPU3N0c0ZJc3NnRUJPU3N0c0ZNc3NnQUFQQ3N0c0ZRc3NnQUJQQ3N0c0ZVc3NnRUFQQ3N0c0ZZc3NnRUJQQ3N0c0Zjc3NnQUFPQ3N0c0Znc3NnQUJPQ3N0c0Zrc3NnRUFPQ3N0c0Zvc3NnRUJPQ3N0c0Zzc3NEQXJMckVrQVJRckxiQmNMTEF3SzdBMEt5MndYU3l3TUN1d05Tc3RzRjRzc0FBV3NEQXJzRFlyTGJCZkxMQXhLeTZ4SkFFVUt5MndZQ3l3TVN1d05Dc3RzR0Vzc0RFcnNEVXJMYkJpTExBeEs3QTJLeTJ3WXl5d01pc3VzU1FCRkNzdHNHUXNzRElyc0RRckxiQmxMTEF5SzdBMUt5MndaaXl3TWl1d05pc3RzR2Nzc0RNckxyRWtBUlFyTGJCb0xMQXpLN0EwS3kyd2FTeXdNeXV3TlNzdHNHb3NzRE1yc0RZckxiQnJMQ3V3Q0dXd0F5UlFlTEFCRlRBdEFBQkx1QURJVWxpeEFRR09XYmtJQUFnQVl5Q3dBU05FSUxBREkzQ3dEa1VnSUV1NEFBNVJTN0FHVTFwWXNEUWJzQ2haWUdZZ2lsVllzQUlsWWJBQlJXTWpZckFDSTBTekNna0ZCQ3V6Q2dzRkJDdXpEZzhGQkN0WnNnUW9DVVZTUkxNS0RRWUVLN0VHQVVTeEpBR0lVVml3UUloWXNRWURSTEVtQVloUldMZ0VBSWhZc1FZQlJGbFpXVm00QWYrRnNBU05zUVVBUkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQU1nQXlBeGovNFFNZy95QURHUC9oQXlEL0lBQUFBQ2dBS0FBb0FXUUNDZ08wQllvR0RnYWlCNGdJZ0FqSUNYWUo4QXA2Q3JRTEdBdHNEUGdOM0E1MEQxd1J5aEl5RXpBVG5oUWFGSElVdkJWQUZlSVhIQmQ4R0VvWWtCaldHVElaakJub0dtQWFvaHNDRzFRYmxCdnFIQ2djZWh5aUhPQWREQjFxSGFRZDZoNElIa1llbmg3WUh6Z2dtaURrSVF3aEpDRThJVndodmlJY0pHWWtpQ1QwSllZbUFDWjRKM1ludGlqRUtRNHBlaW02S3NRc0VDdytMTHd0U0MzZUxmWXVEaTRtTGo0dWlDN1FMeFl2WEM5NEw1b3dCakNHQUFBQUFnQWlBQUFCTWdLcUFBTUFCd0FwUUNZQUFBQURBZ0FEVndBQ0FRRUNTd0FDQWdGUEJBRUJBZ0ZEQUFBSEJnVUVBQU1BQXhFRkR5c3pFU0VSSnpNUkl5SUJFTzdNekFLcS9WWWlBbVlBQUFBRkFDei80UU84QXhnQUZnQXdBRG9BVWdCZUFYZExzQk5RV0VCS0FnRUFEUTROQUE1bUFBTU9BUTREWGdBQkNBZ0JYQkFCQ1FnS0JnbGVFUUVNQmdRR0RGNEFDd1FMYVE4QkNBQUdEQWdHV0FBS0J3VUNCQXNLQkZrU0FRNE9EVkVBRFEwS0RrSWJTN0FYVUZoQVN3SUJBQTBPRFFBT1pnQUREZ0VPQTE0QUFRZ0lBVndRQVFrSUNnZ0pDbVlSQVF3R0JBWU1YZ0FMQkF0cER3RUlBQVlNQ0FaWUFBb0hCUUlFQ3dvRVdSSUJEZzROVVFBTkRRb09RaHRMc0JoUVdFQk1BZ0VBRFE0TkFBNW1BQU1PQVE0RFhnQUJDQWdCWEJBQkNRZ0tDQWtLWmhFQkRBWUVCZ3dFWmdBTEJBdHBEd0VJQUFZTUNBWllBQW9IQlFJRUN3b0VXUklCRGc0TlVRQU5EUW9PUWh0QVRnSUJBQTBPRFFBT1pnQUREZ0VPQXdGbUFBRUlEZ0VJWkJBQkNRZ0tDQWtLWmhFQkRBWUVCZ3dFWmdBTEJBdHBEd0VJQUFZTUNBWllBQW9IQlFJRUN3b0VXUklCRGc0TlVRQU5EUW9PUWxsWldVQW9VMU03T3pJeEZ4ZFRYbE5lVzFnN1VqdFNTME0zTlRFNk1qb1hNQmN3VVJFeEdCRW9GVUFURmlzQkJpc0JJZzRDSFFFaE5UUW1OVFF1QWlzQkZTRUZGUlFXRkE0Q0l3WW1Ld0VuSVFjckFTSW5JaTRDUFFFWElnWVVGak15TmpRbUZ3WUhEZ01lQVRzR01qWW5MZ0VuSmljQk5UUStBanNCTWhZZEFRRVpHeHBURWlVY0VnT1FBUW9ZSng2Ri9rb0NvZ0VWSHlNT0RoOE9JQzMrU1N3ZEloUVpHU0FUQ0hjTUVoSU1EUklTakFnR0JRc0VBZ1FQRGlWRFVWQkFKQmNXQ1FVSkJRVUcvcVFGRHhvVnZCOHBBaDhCREJrbkdrd3BFQndFRFNBYkVtR0lOQmM2T2lVWENRRUJnSUFCRXhzZ0RxYy9FUm9SRVJvUmZCb1dFeVFPRUEwSUdCb05JeEVURkFGMzVBc1lFd3dkSnVNQUFBSUFZUCtBQTZBQ3dBQUhBRmNBU0VCRlNrbERPVGcySnlZY0dSY1dEQVFEVHc4Q0FRUUNRQUFFQXdFREJBRm1BQUFGQVFJREFBSlpBQU1FQVFOTkFBTURBVkVBQVFNQlJRa0lURXN3TFFoWENWY1RFQVlRS3dBZ0JoQVdJRFlRSlRJZUFoVVVCeVluTGdFMU5EYzFOajhEUGdFM05qYzJOell2QVRVbU56WW1KeVluSXdZSERnRVhGZ2NVQnhVT0FSY2VBUmNXRnhZVk1CVVVCaFFQQVJRakRnRUhKalUwUGdRQ3JQNm85UFFCV1BUK1lFMk9aanhZVVdrRUFnRUJBUUlDQWdFQ0FnMEZFd2dIQ0FFRUNnUU9FeWhOSTB3b0ZBNEVDZ1FCQkFFRUJRNElCQTRJQVFFQ0FTbHdIRmtiTVVkVFl3TEE5UDZvOVBRQldORThabzVOaW1vaEh3RUdEZ01EQmdNREJnWUdBd1VESFNJV0xDTVVBZ0VWT1JNNkdqTUZCVE1hT2hNNUZRRUJBUW9UR2hrZ0NTRWVFQ0FJQXdVQ0FRRUJEQ2dNYW9zMFkxTkhNUnNBQUFBQUF3REEvK0FEUUFKZ0FBQUFVd0RBQVRaTHNBdFFXRUFjazVLRkFBUUJDNTZhbFlSNkJRQUJxYWR6UWtBL0VRb0lDZ0FEUUJ0THNBeFFXRUFjazVLRkFBUUJDNTZhbFlSNkJRQUJxYWR6UWtBL0VRb0lCd0FEUUJ0QUhKT1NoUUFFQVF1ZW1wV0VlZ1VBQWFtbmMwSkFQeEVLQ0FvQUEwQlpXVXV3QzFCWVFEVURBUUVMQUFzQkFHWUVBUUFLQ3dBS1pBQUtCd3NLQjJRSkNBSUhCZ3NIQm1RQUFnQUxBUUlMV1F3QkJnWUZVQUFGQlFzRlFodExzQXhRV0VBdkF3RUJDd0FMQVFCbUJBRUFCd3NBQjJRS0NRZ0RCd1lMQndaa0FBSUFDd0VDQzFrTUFRWUdCVkFBQlFVTEJVSWJRRFVEQVFFTEFBc0JBR1lFQVFBS0N3QUtaQUFLQndzS0IyUUpDQUlIQmdzSEJtUUFBZ0FMQVFJTFdRd0JCZ1lGVUFBRkJRc0ZRbGxaUUI1VlZJdUtaV1JpWVY5ZVhWeFV3RlhBVGswNU9DOHVKeVVmSGhNU0RRNHJDUUV1QVNjbUp5NEJQd0UyTno0RE5UY3lQZ0UzUGdFMU5DNERJemMrQVRjMkppTWlEZ0VWSGdFZkFTSUhGQllYSGdNWE14WVhGaDhEQmdjT0FRY09CQWNHRlNFMExnTUhJVFkzTmpjK0FUY3lOakkrQVRJK0FUSTNOamMySnowQ05DWTlBeWN1QVNjbUx3RXVBaWNtSnlZK0FUYzFKaWNtTnpZeUZ4WUhEZ0lITVFZVkhnRUhCZ2NVRGdFVkJ3NENCdzRCRHdFZEFRWWRBUlFHRlJRWEhnSVhGaGNlQVJjV0Z4NENGd0dWQVVJUVJBTWVDZ01CQVFFTUJnSUVCQU1CQWdVSkF3RUxBd01EQWdFREFnWUJBVkJHTDBZZ0FRWUNBd3NCQ3dFQ0JRUUZBUUlIQndNRkJ3TUJBUUlGR0FzR0V4RVRFZ2hwQW9BU0Z5RVU0djd0QlF3V0lBa1pFUUVGQXdRREJBTUVBd0lwRUF3QkFRVURDZ01GQndFQkNBa0JCQVFDQWdjQkNRRUJIU0J5SUIwQkFRVURBUUVCQ3dNRUJRa0pBUUlFQlFFRENnTUZBUUVNQnh3UEJ3Z1lFUmtKSVJVRUJRVUNBWTMrdXdZTEFRWU1CQ2tTRXhNUkJSQVJEd1VGQVF3TEJ5WUxCUWNFQWdFSkJpd2FObEVvUENNYUtna0lFd3NrQ1FZS0JRSUJMaEVIQ1E4RlJBc0RCUW9EQVFNREJBUURKVU1TSVJVVUNFUUhDQkFMQkFVQ0FRRUJBUUVCQ1JRT01nZ0pCd1FGQWdNQ0NBY0ZFZ2dPS2djRUJRUURFeElNQ0FrRERCc3dLUjBoSVIwcEZTWU5Bd1VHQWhJTkVoTURCQVVFQndrV0ZRUUlFQWNIQ0FJREJBa0VEQVl5RGdrT0JRRUNCQUlGQkFzUUF3UUZBd0FBQkFEQS8rQURRQUpnQUFzQURBQmZBTXdCY2t1d0MxQllRQnlmbnBFTUJBY0VxcWFoa0lZRkJnZTFzMzlPVEVzZEZnZ1FCZ05BRzB1d0RGQllRQnlmbnBFTUJBY0VxcWFoa0lZRkJnZTFzMzlPVEVzZEZnZ05CZ05BRzBBY241NlJEQVFIQktxbW9aQ0dCUVlIdGJOL1RreExIUllJRUFZRFFGbFpTN0FMVUZoQVJ3a0JCd1FHQkFjR1pnb0JCaEFFQmhCa0FCQU5CQkFOWkE4T0FnME1CQTBNWkFBSUFCRUJDQkZaQWdFQUJRRURCQUFEVndBQkFBUUhBUVJYRWdFTURBdFFBQXNMQ3d0Q0cwdXdERkJZUUVFSkFRY0VCZ1FIQm1ZS0FRWU5CQVlOWkJBUERnTU5EQVFOREdRQUNBQVJBUWdSV1FJQkFBVUJBd1FBQTFjQUFRQUVCd0VFVnhJQkRBd0xVQUFMQ3dzTFFodEFSd2tCQndRR0JBY0daZ29CQmhBRUJoQmtBQkFOQkJBTlpBOE9BZzBNQkEwTVpBQUlBQkVCQ0JGWkFnRUFCUUVEQkFBRFZ3QUJBQVFIQVFSWEVnRU1EQXRRQUFzTEN3dENXVmxBSkdGZ2w1WnhjRzV0YTJwcGFHRE1ZY3hhV1VWRU96b3pNU3NxSHg0UkVSRVJFUkFURkNzQkl6VWpGU01WTXhVek5UTUZBUzRCSnlZbkxnRS9BVFkzUGdNMU56SStBVGMrQVRVMExnTWpOejRCTnpZbUl5SU9BUlVlQVI4QklnY1VGaGNlQXhjekZoY1dId01HQnc0QkJ3NEVCd1lWSVRRdUF3Y2hOamMyTno0Qk56STJNajRCTWo0Qk1qYzJOelluUFFJMEpqMERKeTRCSnlZdkFTNENKeVluSmo0Qk56VW1KeVkzTmpJWEZnY09BZ2N4QmhVZUFRY0dCeFFPQVJVSERnSUhEZ0VQQVIwQkJoMEJGQVlWRkJjZUFoY1dGeDRCRnhZWEhnSVhBMEF5SERJeUhETCtWUUZDRUVRREhnb0RBUUVCREFZQ0JBUURBUUlGQ1FNQkN3TURBd0lCQXdJR0FRRlFSaTlHSUFFR0FnTUxBUXNCQWdVRUJRRUNCd2NEQlFjREFRRUNCUmdMQmhNUkV4SUlhUUtBRWhjaEZPTCs3UVVNRmlBSkdSRUJCUU1FQXdRREJBTUNLUkFNQVFFRkF3b0RCUWNCQVFnSkFRUUVBZ0lIQVFrQkFSMGdjaUFkQVFFRkF3RUJBUXNEQkFVSkNRRUNCQVVCQXdvREJRRUJEQWNjRHdjSUdCRVpDU0VWQkFVRkFnSHVNakljTWpKRi9yc0dDd0VHREFRcEVoTVRFUVVRRVE4RkJRRU1Dd2NtQ3dVSEJBSUJDUVlzR2paUktEd2pHaW9KQ0JNTEpBa0dDZ1VDQVM0UkJ3a1BCVVFMQXdVS0F3RURBd1FFQXlWREVpRVZGQWhFQndnUUN3UUZBZ0VCQVFFQkFRa1VEaklJQ1FjRUJRSURBZ2dIQlJJSURpb0hCQVVFQXhNU0RBZ0pBd3diTUNrZElTRWRLUlVtRFFNRkJnSVNEUklUQXdRRkJBY0pGaFVFQ0JBSEJ3Z0NBd1FKQkF3R01nNEpEZ1VCQWdRQ0JRUUxFQU1FQlFNQUFBSUFZUCtBQTZBQ3dBQUhBRVFBTWtBdlFSc2FDd1FDQXdGQUFBQUFBd0lBQTFrRUFRSUJBUUpOQkFFQ0FnRlJBQUVDQVVVSkNDY2tDRVFKUkJNUUJSQXJBQ0FHRUJZZ05oQUJJaVluUGdFM1BnRTFOQ2NtSnlZbkpqOEJOVFltSnlZK0FqYzJOek1XRng0QkJ3WVhNQmNlQVFjT0FRY09CUlVVRmhjV0Z3NENBcXorcVBUMEFWajAvbUJXbVRVY2NDZ0VBZ2dPQkJNSkJ3Z0JBZ1FFQWdJR0Rnb29UQ05OS0JRT0JBb0VBUVFCQkFVUEJ3SUdCd2dGQkFJRGFWRWpXbTBDd1BUK3FQVDBBVmo5MTBoQURDZ01BUVlPSUJBZUlSVXRJeFFCQWdjeEZnY1pHaDhPTXdVRk14bzZFemtWQXdvVEdoa2dDUXNZRkJBT0VRZ09CZ0VmSVNzOUlRQUFBQUVBd1AvZ0EwQUNZQUJTQURkQU5FRS9QaEFKQlFVQUFVQURBUUVDQUFJQkFHWUVBUUFGQWdBRlpBQUNBZ1ZQQUFVRkN3VkNUVXc0Tnk0dEppUWVIUklSQmc0ckpTNEJKeVluTGdFL0FUWTNQZ00xTnpJK0FUYytBVFUwTGdNak56NEJOelltSXlJT0FSVWVBUjhCSWdjVUZoY2VBeGN6RmhjV0h3TUdCdzRCQnc0RUJ3WVZJVFF1QXdMWEVFUURIZ29EQVFFQkRBWUNCQVFEQVFJRkNRTUJDd01EQXdJQkF3SUdBUUZRUmk5R0lBRUdBZ01MQVFzQkFnVUVCUUVDQndjREJRY0RBUUVDQlJnTEJoTVJFeElJYVFLQUVoY2hGRWdHQ3dFR0RBUXBFaE1URVFVUUVROEZCUUVNQ3djbUN3VUhCQUlCQ1FZc0dqWlJLRHdqR2lvSkNCTUxKQWtHQ2dVQ0FTNFJCd2tQQlVRTEF3VUtBd0VEQXdRRUF5VkRFaUVWRkFnQUFBQUFBZ0RBLytBRFFBSmdBQXNBWGdEQVFBcE5TMG9jRlFVTEJnRkFTN0FMVUZoQUxnQUlBUUFJWEFrQkJ3UUdBQWRlQ2dFR0N3UUdDMlFDQVFBRkFRTUVBQU5ZQUFFQUJBY0JCRmNBQ3dzTEMwSWJTN0FNVUZoQUxRQUlBUWhvQ1FFSEJBWUFCMTRLQVFZTEJBWUxaQUlCQUFVQkF3UUFBMWdBQVFBRUJ3RUVWd0FMQ3dzTFFodEFMZ0FJQVFob0NRRUhCQVlFQndabUNnRUdDd1FHQzJRQ0FRQUZBUU1FQUFOWUFBRUFCQWNCQkZjQUN3c0xDMEpaV1VBVVdWaEVRem81TWpBcUtSNGRFUkVSRVJFUURCUXJBU00xSXhVakZUTVZNelV6QXk0Qkp5WW5MZ0UvQVRZM1BnTTFOekkrQVRjK0FUVTBMZ01qTno0Qk56WW1JeUlPQVJVZUFSOEJJZ2NVRmhjZUF4Y3pGaGNXSHdNR0J3NEJCdzRFQndZVklUUXVBd05BTWh3eU1od3lhUkJFQXg0S0F3RUJBUXdHQWdRRUF3RUNCUWtEQVFzREF3TUNBUU1DQmdFQlVFWXZSaUFCQmdJREN3RUxBUUlGQkFVQkFnY0hBd1VIQXdFQkFnVVlDd1lURVJNU0NHa0NnQklYSVJRQjdqSXlIREl5L25ZR0N3RUdEQVFwRWhNVEVRVVFFUThGQlFFTUN3Y21Dd1VIQkFJQkNRWXNHalpSS0R3akdpb0pDQk1MSkFrR0NnVUNBUzRSQndrUEJVUUxBd1VLQXdFREF3UUVBeVZERWlFVkZBZ0FBQUlBb1AvQUEzY0NnQUJKQUl3QVhFQlpZZ0VHQjNsM0VoQUVBQVlDUUFBREFnY0NBd2RtQUFZSEFBY0dBR1lBQWdBSEJnSUhXUUFBQUFrQkFBbFpBQUVBQ0FVQkNGa0FCUVFFQlUwQUJRVUVVUUFFQlFSRmhZT0FmbVZqWVdCUFRVSkFMU3dxS0NRaUNoQXJKUzRCSXlJT0FRY0dJeUltTHdFbUx3RW1Md0V1QXk4QkxnSTFORDRDTnpZbkppOEJKaU1pQndZakJ3NENCdzRCRkI0QkZ4NEJGeDRCRng0Qk16SStBamMySnlZSEJnY0dJeUluTGdFbkxnWTJOelkzTURjeU5UWXpNaFlmQVI0QkJ3WVhIZ0lmQVI0QkZ4WVhGaDhCRmg4QkZqTXlOamMyTXpJZUFoY1dCd1lEUUJ0bkpRWU1DZ1F3Q2dRS0N3SWxGZ1FCQWdRR0JnMFFEQUVLQ0FnQ0Jna0hJUjRRTVFJZEpod2tBUUVCRGhjUEJBUUVDQlFRSTBnekxEbzJOV0VrRmhZaklCSTJLd1lkSkNZS0ZVQm9ORGtyR1NnbElTTVRCQU1FQ1NFQ0FSMFREQlVMQWk0akZTQUNBUW9MREFFWEZRc0JBZ01CQXhZbkFod1JEUjhmQmdvUEt5a2pDaHNHQklFYk93SUVBaDhIQ2dJZkdBTUNBd01HQncwVERRRUxDZ3dFQXdnTERna3NQeUU3QXlRWEFRRUpGaGdNRFJZaUpETWRRR0UxTGpBbkppb0NDaG9XUVRjR2FTc0VBVW9tTHkwWkx6STFQek1tR0E0Y0ZRRUJFZ3dOQWpsS0hDd1lDUk1PRGdFWkZ3c0JBd0lCQkJjaUFoZ1BGQVFSR0JvS0d4WVJBQUFEQUlBQUlBT0FBaUFBQXdBR0FCTUFQRUE1RWhFT0RRd0pDQVFJQXdJQlFBUUJBUUFDQXdFQ1Z3VUJBd0FBQTBzRkFRTURBRThBQUFNQVF3Y0hBQUFIRXdjVEJnVUFBd0FERVFZUEt4TVJJUkVCSlNFQkVSY0hGemNYTnhjM0p6Y1JnQU1BL29EK3VnS00vVnJtaUFTZVlHQ2VCSWptQWlEK0FBSUEvdWo0L2tBQnJLK2JCSXRKU1lzRW02LytWQUFDQUlELzRBT0FBbUFBSndCVkFHcEFaelF5SVFNRUFCUUJBUUpLQVFnQlRoZ0NEQWsvQVFjTUJVQUFCQUFDQUFRQ1pnVURBZ0lCQUFJQlpBc0tBZ2dCQ1FFSUNXWUFDUXdCQ1F4a0FBWUFBQVFHQUZrQUFRQU1Cd0VNV1FBSEJ3c0hRbEZQVFV0SlNFWkZSVVErUENrb0VSSVJJU1lRRFJRckFESWVBUlVVQndZaklpY2lJeWNqSmljaUJ5TUhEZ0VQQVQ0RE5UUW5KaWNtSnlZMU5EWWtJZzRCRlJRWEhnSVhKalV4RmhVVUJ3WVdGek15UHdJMlB3RXpJelkzTWhjVk16SVZGak15UGdFMEpnR2h2cU5lWTJXV1ZEY0JBZ0VDRHc0UkVBRUVCUXNDVHdzTEJRRU5BZ0VEQVRWZUFXclFzV2M5QVFNQ0FRSUhKQUlKQ0FZREJBTmxBUW9KQVFFTEN3c0tBZ0U5V21pd1ptY0NRRXFBUzI5TVR4TUJCQUVHQWdFRUFTTWhKQk1GQWhZVEF3RUVBVU5QUzM5cVU0NVVXa3dCQkFRQkF3RUxEQUp5Qmd3Q0FRRXNBUU1FQXdFREFRRVVUWXFuamdBQUFBQURBR0QvZ0FPZ0FzQUFDUUFSQUJnQW5yVVVBUVlGQVVCTHNBcFFXRUE2QUFFQUNBQUJDR1lBQmdVRkJsMEFBZ0FBQVFJQVZ3d0JDQUFMQkFnTFZ3QUVBQU1KQkFOWENnRUpCUVVKU3dvQkNRa0ZUd2NCQlFrRlF4dEFPUUFCQUFnQUFRaG1BQVlGQm1rQUFnQUFBUUlBVnd3QkNBQUxCQWdMVndBRUFBTUpCQU5YQ2dFSkJRVUpTd29CQ1FrRlR3Y0JCUWtGUTFsQUZnb0tHQmNXRlJNU0NoRUtFUkVSRWhFUkVSRVFEUllyRXlFVk16VWhFVE0xSXpjUklSY3pOVE1SQXlNVkp5RVJJWUFDQUNEOXdPREE0QUZGZ0J0Z0lHQnUvczRDQUFLZ3dPRCtRQ0NnL2tDQWdBSEEvbUJ0YlFHQUFBQUFBUUNnLzhBRGR3S0FBRWtBTmtBekVoQUNBQU1CUUFBQ0F3Sm9BQU1BQTJnQUFRQUVBQUVFWmdBQUFRUUFUUUFBQUFSUkFBUUFCRVZDUUMwc0tpZ2tJZ1VRS3lVdUFTTWlEZ0VIQmlNaUppOEJKaThCSmk4QkxnTXZBUzRDTlRRK0FqYzJKeVl2QVNZaklnY0dJd2NPQWdjT0FSUWVBUmNlQVJjZUFSY2VBVE15UGdJM05pY21BMEFiWnlVR0RBb0VNQW9FQ2dzQ0pSWUVBUUlFQmdZTkVBd0JDZ2dJQWdZSkJ5RWVFREVDSFNZY0pBRUJBUTRYRHdRRUJBZ1VFQ05JTXl3Nk5qVmhKQllXSXlBU05pc0dnUnM3QWdRQ0h3Y0tBaDhZQXdJREF3WUhEUk1OQVFzS0RBUURDQXNPQ1N3L0lUc0RKQmNCQVFrV0dBd05GaUlrTXgxQVlUVXVNQ2NtS2dJS0doWkJOd1lBQUFBQUFnQ0FBQ0FEZ0FJZ0FBd0FEd0FyUUNnUEN3b0hCZ1VDQVFnQUFRRkFBQUVBQUFGTEFBRUJBRThDQVFBQkFFTUFBQTROQUF3QURBTU9LeVVSQlJjSEp3Y25CeWMzSlJFQklRRURnUDc2aUFTZVlHQ2VCSWorK2dMdi9TRUJjQ0FCNU1lYkJJdEpTWXNFbThmK0hBSUEvdWdBQUFBQkFJRC80QU9BQW1BQUxRQkJRRDRpREFvREFnQW1BUVlERndFQkJnTkFCUVFDQWdBREFBSURaZ0FEQmdBREJtUUFBQUFHQVFBR1dRQUJBUXNCUWlrbkpTTWhJQjRkSFJ3V0ZCQUhEeXNBSWc0QkZSUVhIZ0lYSmpVeEZoVVVCd1lXRnpNeVB3STJQd0V6SXpZM01oY1ZNeklWRmpNeVBnRTBKZ0pvMExGblBRRURBZ0VDQnlRQ0NRZ0dBd1FEWlFFS0NRRUJDd3NMQ2dJQlBWcG9zR1puQW1CVGpsUmFUQUVFQkFFREFRc01BbklHREFJQkFTd0JBd1FEQVFNQkFSUk5pcWVPQUFBQUFBSUFZUCtBQTZBQ3dBQUZBQTBBYlV1d0NsQllRQ2tBQVFZREJnRURaZ0FFQXdNRVhRQUFBQUlHQUFKWEJ3RUdBUU1HU3djQkJnWURUd1VCQXdZRFF4dEFLQUFCQmdNR0FRTm1BQVFEQkdrQUFBQUNCZ0FDVndjQkJnRURCa3NIQVFZR0EwOEZBUU1HQTBOWlFBNEdCZ1lOQmcwUkVSSVJFUkFJRkNzQklSRXpOU0VGRVNFWE16VXpFUUtnL2NEZ0FXRCt3QUZGZ0J0Z0FzRCtRT0FnL2tDQWdBSEFBQUFBQUFjQXMvL2hBeWdDWndBM0FFWUFXQUJtQUhFQWp3QzdBUUJBSVprQkN3a1pGQk1EQUFkMkFRUUFCUUVNQTB3cEFnSU1CVUIrQVFVbEFRMENQMHV3QzFCWVFGUUFDUWdMQ0FrTFpnQUtDd0VMQ2dGbUFBQUhCQUVBWGc4QkJBMEhCQTFrQUEwREJ3MERaQUFNQXdJRERBSm1EZ0VDQW1jQUNBQUxDZ2dMV1FBQkJRTUJUUVlCQlFBSEFBVUhXUUFCQVFOUkFBTUJBMFViUUZVQUNRZ0xDQWtMWmdBS0N3RUxDZ0ZtQUFBSEJBY0FCR1lQQVFRTkJ3UU5aQUFOQXdjTkEyUUFEQU1DQXd3Q1pnNEJBZ0puQUFnQUN3b0lDMWtBQVFVREFVMEdBUVVBQndBRkIxa0FBUUVEVVFBREFRTkZXVUFtYzNJNU9MVzBzckdrbzZDZm1KZVVrb1NEZ0g5OWZIS1BjNDlCUHpoR09VWWVIUkVRRUE0ckFTNENOajhCTmljdUFRNEJEd0VPQVNJbUp6VW1QZ0kzTkM0Q0JnY09CQlVPQVIwQkhnUVhGajRDTnpZbkpnTUdMZ0kxTkRZM05oWVZGQWNHSnc0REZ4VVVIZ0VYRmpZM1BnRXVBUWNHSmpVME5qYzJIZ0lWRkFZM0JpWW5KalkzTmhZWEZqY3lQZ0UzTlRZdUJBOEJJZ1lWRkRNMkhnTU9BUlVVRnhZbkxnRUdJZzRCQnlNUEFRWVZGQjRCTXpZM05qSWVBeGNXQnc0Q0ZSUVdNalkzTXo0QkxnTUNoUWNJQVFFQkFSZ2RDaUFnSFFrS0JRZ0dBd0VCQVFFQ0FRTU1GU1VaR1RNbklCQVhGd1FpTHo4NklTZFhUMElQSkVBUTZ5VkZNaDV0VFU5c1FqVllIU2dRQ0FFQkRnMHZVaG9NQWhJelBnOFVFdzRJRGdrR0ZTOEZDd0lEQWdVR0N3SUc5QVFIQlFFQ0J4QVZGaElGQmdjS0VSQVdEZ1lEQVFFT0Fnc0pFeEVPRHdZRkFRRUJFZ2NMQndFVkF3NFZHUmtaQ1JNTEFRRUREaFVNQVFFSkFSQVpJU0lCTGdFR0JnWUNBaklsREFrSENnVUZBZ0lCQXdRRENBY01CQTRYR2c0QkN3c3JMeXdiQVNoUEZCUXNSU3NmRGdNRUVpZENLbU0wRGY3bUFoVW5PU0ZCWHdVRVRFRktOeXY3QlNBbkpnME5CUTRnQ0I0WUtSUThOeUswQWhNUEVCc0NBUVVKRFFnUUdVRUZBUVlGRUFRRkFRWU50QVVJQmdJZUxSa1JCQUVCQVF3SkZnWUhDUllQRkFjQ0V3SUIvZ01EQVFNQ0FRRUJCaGdKRGdrQkJnRUNDeEFlRXpjeUFnWVFCdzBQQ2hBcVNqY3VIeFFBQUFZQVFQK2tBOEFDbXdBT0FCa0FQQUJIQUU4QWN3Q0pRSVpTQVFRTFpsNENEUUJmT2pFREJnMERRRGswQWdZOUNnRUhDQXNJQnd0bUVRRUxCQWdMQkdRUUFnOERBQUVOQVFBTlpnNEJEUVlCRFFaa0FBWUdad0FNQ1FFSUJ3d0lXUVVCQkFFQkJFMEZBUVFFQVZFREFRRUVBVVZSVUJBUEFRQnRhbWxvVmxSUWMxRnpUVXhKU0VOQlBqMHdMaUlmSGgwV0ZROFpFQmtHQkFBT0FRNFNEaXNsSWlZME5qTXlIZ01WRkE0Qkl5SXVBVFUwTmpJV0ZBWUZOQzRCSnlZckFTSU9CaFVVRng0Qk16STNGekFYSGdFK0FUVW5QZ0VBSWlZME5qTXlIZ0VWRkRZeUZoUUdJaVkwRnpJWExnRWpJZzRERlJRV0Z3Y1VCaFFlQVQ4QkhnRXpNRHNDTGdFMU5ENEJBdzRRRnhjUUJnd0tCd1FMRWRNS0Vnc1hJQmNYQVdwRWRVY0dCUWtkTmpJc0poNFZDd2dYbFdGQk9qNEJBZ1VFQXhJc012MVVJQmNYRUFzU0NyMGhGaFloRnRvR0N4RzBkelZoVHpzaFBUWVlBUVVKQ2xnY095QURCQU1FQkZDSTRSY2hGd1FJQ1F3SENoSUxDeElLRVJjWElSYzRQMnRDQkFFS0Vob2hKeW93R1IwZFQyZ1pLZ0VCQVFFSEJrSWlYZ0ZFRnlBWENoSUxFRGNYSUJjWElFRUJab2djTTBWVkxVQnZKMWtCQkFvREF3UTlDZ29QSFE5SGVFWUFBQWdBUVA5aEE4RUM0Z0FIQUJBQUZBQVlBQjBBSmdBdkFEY0Faa0JqTUNBVEF3SUVOaUVDQVFJM0hRd0JCQUFCTFJ3Q0F3QXNKeG9YQkFVREJVQUFBUUlBQWdFQVpnQUFBd0lBQTJRSUFRUUdBUUlCQkFKWEJ3RURCUVVEU3djQkF3TUZVUUFGQXdWRkh4NFZGUkVSS2lnZUpoOG1GUmdWR0JFVUVSUVNGUWtRS3lVQkJoVVVGeUVtQVNFV0Z3RStBVFUwSnlZbkJ3RVdGejhCRVRZM0p3TWlCeEVCTGdNREZqTXlOamNSQmdjQkRnUUhGd0ZkL3ZjVUdBRVBCZ0pJL3ZFRkJRRUpDZ28xUklLLy9tNUVnTC9iZjBDLzAwcEdBUk1RSHlFaWxFQkRKa2dpQlFYK3B4Z3VLU1FmREw2Y0FRbEFSRXBHQmdFYkJRYis5eDlDSWt1SWdFREEvbHAvUDc3RS9vTkVnYjhCeVJqKzhRRVRCUWNGQS95VEZBd01BUTRGQkFJdkRTQW1LaThadmdBQUFBQUZBQVgvUWdQN0F3QUFJUUEwQUVBQVVBQmdBTUZBRGdnQkFnVVdBUUVDQWtBUUFRRTlTN0FMVUZoQUtRb0JBQUFEQkFBRFdRMElEQVlFQkFrSEFnVUNCQVZaQ3dFQ0FRRUNUUXNCQWdJQlVRQUJBZ0ZGRzB1d0ZsQllRQ0lOQ0F3R0JBUUpCd0lGQWdRRldRc0JBZ0FCQWdGVkFBTURBRkVLQVFBQUNnTkNHMEFwQ2dFQUFBTUVBQU5aRFFnTUJnUUVDUWNDQlFJRUJWa0xBUUlCQVFKTkN3RUNBZ0ZSQUFFQ0FVVlpXVUFtVWxGQ1FTTWlBUUJiV1ZGZ1VtQktTRUZRUWxBOE96WTFMU3NpTkNNMEdoZ0FJUUVoRGc0ckFTSU9BaFVVRmhjV0RnUVBBVDRFTng0Qk16SStBalUwTGdFRElpNEJOVFErQXpNeUhnSVZGQTRCQWlJR0ZSUWVBVEkrQVRVMEpTSU9BaFVVRmpNeVBnSTFOQ1loSWdZVkZCNERNekkrQVRRdUFRSUZaNzJLVW1sYkFRZ09FeElRQlFVSUhWQkdVQmdhTnh4bnVvWlBodWVLZE1GMEsxQm9na1JWbTI5Q2NMNVBQU29VSVNjaUZQN09EeG9URENvZUR4c1VEQ3NCc1I4cEJ3MFNGZ3dVSVJRVUlRTUFSSFNnV0dXeVBCY3RKQ0VZRVFVRUFRWVRGaVFVQlFWRWRLQllkY2h6L1BSVG0yRTZibGxESlRwaGhVbGhtbFFCcHljZkZTTVZGU01WSHljS0Voc1BJQzBNRlJ3UUh5Y25IdzBYRXc0SUZTTXFJQkVBQUFFQVYvOXVBNmtDMFFGNUFhSkJqUUZpQUlZQWRBQnlBSEVBYmdCdEFHd0Fhd0JxQUdrQVlBQWhBQlFBRXdBU0FCRUFFQUFNQUFzQUNnQUZBQVFBQXdBQ0FBRUFBQUFiQUFzQUFBRkhBVVlCUlFBREFBSUFDd0ZnQVYwQlhBRmJBVm9CV1FGWUFVb0FxQUNuQUowQWtBQ1BBSTRBalFDTUFCQUFEUUFDQUpzQW1nQ1pBSlFBa3dDU0FBWUFBUUFOQVM0QkxRRXFBTFVBdEFDekFBWUFDUUFCQVNjQkpnRWxBU1FCSXdFaUFTRUJJQUVmQVI0QkhRRWNBUnNCR2dFWkFSZ0JGZ0VWQVJRQkV3RVNBUkVCRUFFUEFRNEJEUUVNQU8wQXpBRExBTWtBeUFESEFNWUF4QUREQU1JQXdRREFBTDhBdmdDOUFMd0FLd0FGQUFrQkNnRG9BT2NBMHdBRUFBTUFCUUFIQUVBQlJBQ0hBQUlBQ3dDY0FKRUFBZ0FOQVFzQUFRQUZBQU1BUDBCRkRBRUxBQUlBQ3dKbUFBSU5BQUlOWkFBTkFRQU5BV1FBQVFrQUFRbGtDZ0VKQlFBSkJXUUVBUU1GQndVREIyWUlBUWNIWndBQUN3VUFTd0FBQUFWUEJnRUZBQVZEUVI0QlZ3RlVBVU1CUWdGQkFUOEJMQUVyQVNrQktBRDlBUG9BK0FEM0FPd0E2d0RxQU9rQTJ3RGFBTmtBMkFDbUFLVUFtQUNWQURrQU53QU9BQTRyRXk4Q05UOEZOVDhITlQ4aU93RWZNUlVIRlE4REhRRWZFUlVQRFNzQ0x3d2pEd3dmRFJVWEJ4MEJCeFVQRHlNSEl5OE5JeWNqSnc4Skl3OEJLd0l2RkRVM05UYzlBVDhQTXo4Qk16VXZFU3NCTlNNUEFSVVBEU3NDTHdnMVB4ZlJBZ0VCQWdFREFnUUZBUUVDQWdJQ0FnTUJBZ01FQWdNREJBUUVCUVlEQXdjSEJ3a0pDUXNJQ0FrS0NRc0xDd3NNQ3cwTkdRMG5EUTBPREEwTkRRME1EQXdMQ3drRkJBa0lCd2NHQndVRkJnUUhCQU1EQWdJQ0JBTUNBUUlCQWdVREFnUURBZ0lDQVFFQkFRTUNBZ01NQ1FRR0JRWUdCd1FEQXdNQ0F3SURBUUVCQWdRQkFnSUNBd0lEQWdRREFnTURCQUlDQXdJRUJBUURCQVVGQVFFQ0FnSUVCUWNHQmdjSEF3VUtBUUVGRmdrSkNRZ0VBZ01EQVFJQkFRSUNCQU1EQXdZR0J3Z0pCQVFLQ2dzTERBc2xEZ3dORFE0T0RRME9EUWNHQkFRTERBY0lCUWNLQ3djR0VBZ0lEQWdJQ0FvbkZoWUxDd29LQ2drSkNBZ0dCd0lEQWdJQ0FRSUJBUUVCQWdFREFnRUVBd1FDQlFNRkJRVUdCZ2NIQWdFQkJBb0dDQWNJQ1FRRUJBTUZBd1FEQXdJQkFRRURBUUVCQlFJRUF3VUVCUVVHQmdVSEJ3RUNBUUlDQWdJQkFRSUJBUUVDQVFNREF3TUVCUVVGQndjSEJnY0lCQVVHQndzSUFVc0ZCd1FPQmdZSEJ3Z0hCUVVIQndrREJBUUNFd29MRFE0SENRY0lDZ2dKQ1FVRUNnb0pDZ2tLQ2djR0J3VUZCUVVFQXdRREFnSUVBUUlCQXdNREJBUUZCZ1VIQndZRUF3Y0lCd2dJQ0FrSUNRZ1JDUWdKQ0FjSkR3ME1DaEFDQXdnRkJnWUhDQWdJQkFZRUJBWUZDZ1VHQWdFRkVRMElDZ29MREE0SkNBa0lDUWdQRUE0VEJ3d0xDZ1FFQkFRQ0JBTUNBUUlEQVFFREFnUUdCZ1VHQ2dzQkFnTURDdzhSQ1FvS0NnVUZDZ0VCQXdzRkJRY0dBd1FFQkFRRUJBUURBd01EQWdNRkJRTUNCUU1FQXdRQkFRTUNBZ0lDQVFFQ0FRSUVBZ1FGQkFJQ0FnRUJBUVVFQlFZREF3WUNBZ01CQVFJQ0FnRUNBd0lFQXdRRUJRSURBZ01EQXdZREF3TUVCQU1IQkFVRUJRSURCUUlDQXdFQ0FnSUNBUUVCQVFFQ0FnZ0ZCd2NLQ2dZR0J3Y0hDQWtKQ0FzQkFRSUNBZ01JQlFRRkJnUUZCUU1FQWdJREFRWUVCQVVGQ3djV0VBZ0pDUWdLQ2drS0NRc0pDd2tLQ0FnSUJBVUdCUW9HQUFBQUJBQmVBQ0FEb2dJZ0FCTUFLQUFzQURFQU4wQTBNVEF2TGl3cktpa0lBZ01CUUFRQkFBQURBZ0FEV1FBQ0FRRUNUUUFDQWdGUkFBRUNBVVVDQUNZakdSWUxDQUFUQWhNRkRpc0JJU0lPQVJVUkZCWXpJVEkyTlJFMExnTVRGQVlqSVNJdUJUVVJORFl6QlRJV0ZSY1ZGeEVIRVNjMU53SmYva1lTSVJRckhBRzZIQ2NIREJBVUZSTU8va1lFQ0FjSEJRUUNGZzhCdWc0VFhzUWlnSUFDSUJFZUV2NklIQ3NxSFFGNEN4UVFEQWIrUnc4V0FnUUZCd2NJQkFGNERSSUJFUTFwcTJzQmdEeis5ME9FUXdBQUFBWUFnQUFBQTRBQ1FBQWZBRWtBVVFCWkFGMEFaUURmUzdBb1VGaEFVZ0FQQ3c0SEQxNEFFQTRTRGhBU1pnQUJDUUVJQXdFSVdRQURBQWNEU3dRQ0V3TUFDZ0VIQ3dBSFdRQUxBQTRRQ3c1WkFCSUFFUTBTRVZrQURRQU1CZzBNV1FBR0JRVUdUUUFHQmdWU0FBVUdCVVliUUZNQUR3c09DdzhPWmdBUURoSU9FQkptQUFFSkFRZ0RBUWhaQUFNQUJ3TkxCQUlUQXdBS0FRY0xBQWRaQUFzQURoQUxEbGtBRWdBUkRSSVJXUUFOQUF3R0RReFpBQVlGQlFaTkFBWUdCVklBQlFZRlJsbEFMQUVBWldSaFlGMWNXMXBYVmxOU1QwNUxTa1pFT2pnM05pOHRKaU1hRnhJUUR3NE5EQWdGQUI4Qkh4UU9Ld0VqSmljdUFTc0JJZ1lIQmdjak5TTVZJeUlHRlJFVUZqTWhNalkxRVRRbUV4UU9BU01oSWlZMUVUUStBanNCTno0Qk56WS9BVE13T3dFZUFoY2VBeDhCTXpJZUFSVWtJZ1lVRmpJMk5BWWlKalEyTWhZVU56TVZJd1FVRmpJMk5DWWlBME43QXdZd0pCQ3hFQ011Q0FRYlJCc2JLQ2thQW9BYUl5TURCdzRJL1lBTkZnWUpEUWVJQ1FRUEF5WU5ETEVCQVFFREJRTUZEeGdTQ2dtS0NRMEgvdWVPWkdTT1pIRjBVVkYwVVRVaUl2OEFKVFlsSlRZQjRBTUhOU0VmTkFnRklDQWtHZjZnR3lnb0d3RmdHaVArWXdvUENoWU5BV0FHQ3djRkJnVVRCQ29NQ0FFQ0F3TUZFUndVQ3dZSERnZ0NaSTVrWkk3U1VYUlJVWFRnSW1rMkpTVTJKUUFEQVFEL1lBTUFBdUFBQ3dBWEFERUFUVUJLREFzQ0JRTUNBd1VDWmdBQUFBTUZBQU5aQUFJQUFRUUNBVmtBQkFvQkJnY0VCbGtKQVFjSUNBZExDUUVIQndoUEFBZ0hDRU1ZR0JneEdERXVMU3dyRVJFVEV5Y1ZGeFVRRFJjckFDSUdGUkVVRmpJMk5SRTBBeFFHSWlZMUVUUTJNaFlWRnhVVURnRWpJaVk5QVNNVkZCWVhGU01WSVRVak5UNEJQUUVDUVlKZFhZSmRJRXBvU2twb1NtQTdaanRhZ2lhTFpaSUJRb3BqaHdMZ1lrWCt5MFZpWWtVQk5VWCtoamhQVHpnQk5UaFBUemlabnp4a080QmJuNTlsa3dkK0pDUitCNU5sbndBQUJBRDAvMkFEREFMZ0FCSUFKQUFzQURrQVJrQkRGaFFUREFvR0JnTUVBVUFZQ0FJRFBRQUFBQUVDQUFGWkFBSUFCUVFDQlZrR0FRUURBd1JOQmdFRUJBTlJBQU1FQTBVdUxUUXpMVGt1T1NvcEppVWhJQkFIRHlzQUlnWVZGQjhDR3dFM05qOEJQZ0kxTkFjVkJnOEJDd0VtSnk0Qk5UUTJNaFlWRkNZaUJoUVdNalkwQnlJbU5UUStBVEllQVJRT0FRSnYzcDBUQVFQMTlRRUJBUUVHQ1FReUFRRUMxdGdCQVFnS2lzU0t0MnBMUzJwTGdDYzNHU3d5TEJrWkxBTGdtMjR6TWdNRy9mY0NDUUlEQVFNUUlTSVJiOGdCQVFNRS9qa0J5d01CRmk0WFlZaUlZUzYzUzJwTFMycVROeWNaTEJrWkxESXNHUUFDQVFEL1lBTUFBdUFBQ3dBbEFFRkFQZ29KQWdNQkFBRURBR1lBQVFBQUFnRUFXUUFDQ0FFRUJRSUVXUWNCQlFZR0JVc0hBUVVGQms4QUJnVUdRd3dNRENVTUpSRVJFUkVURXlrVkVBc1hLeVF5TmpVUk5DWWlCaFVSRkNVVkZBNEJJeUltUFFFakZSUVdGeFVqRlNFMUl6VStBVDBCQWIrQ1hWMkNYUUY4TzJZN1dvSW1pMldTQVVLS1k0ZGRZa1VCTlVWaVlrWCt5MFhobnp4a080QmJuNTlsa3dkK0pDUitCNU5sbndBQUFBSUE5UDlnQXd3QzRBQVNBQjhBSzBBb0RBb0lCZ1FCUFFNQkFRSUJhUUFBQWdJQVRRQUFBQUpSQUFJQUFrVVVFeG9aRXg4VUh4QUVEeXNBSWdZVkZCOENHd0UzTmo4QlBnSTFOQVVpSmpVMFBnRXlIZ0VVRGdFQ2I5NmRFd0VEOWZVQkFRRUJCZ2tFL3ZRbk54a3NNaXdaR1N3QzRKdHVNeklEQnYzM0Fna0NBd0VERUNFaUVXL0ROeWNaTEJrWkxESXNHUUFGQVFEL1lBTXdBdUFBQXdBS0FCVUFIUUExQUY5QVhBY0JBZ0VjR3hRR0JBQUNJUUVFQUNBQkF3UUVRQVVCQWdFQUFRSUFaZ0FCQ2dFQUJBRUFXUUFFQmdFREJ3UURXUWtCQndnSUIwc0pBUWNIQ0U4QUNBY0lRd1VFTlRRek1qRXdMeTRyS2lRaUh4NFlGeEFPQkFvRkNnc09Ld0UzQVFjbE1qY0RGUlFXTnhFMEppTWlEZ0VIQVRZM05TTVZGQWNYTmdjMk55Y0dJeUl1QXowQkl4VVVGaGNWSXhVaE5TTUJFUndDQXh6KzdDVWc0MTNmWEVJWkx5WVBBUklKWWlJaUZERHFNaTBUTFRNalF6WXBGeWFMWlpJQlFvb0MwQkQ4a0JEOUVRR0I2MFZpcHdFMVJXSVFIUlArTFJvYW41OUFOU0pEcXdNWElCWVdLVFZESTZDZlpaTUhmaVFrQUFBREFFRC9vQVBBQXFBQUJ3QVhBRG9Ba0VBTE1RRUJCem93QWdNRkFrQkxzQmhRV0VBd0FBWUJBQUVHQUdZQUJBQUZCUVJlQ0FFQ0FBY0JBZ2RaQUFFQUFBUUJBRmtBQlFNREJVMEFCUVVEVWdBREJRTkdHMEF4QUFZQkFBRUdBR1lBQkFBRkFBUUZaZ2dCQWdBSEFRSUhXUUFCQUFBRUFRQlpBQVVEQXdWTkFBVUZBMUlBQXdVRFJsbEFGQW9JTmpNdUxDVWpHeGtTRHdnWENoY1RFQWtRS3dBeU5qUW1JZ1lVQVNFaUJoVVJGQll6SVRJMk5SRTBKZ01tSXlJR0R3RU9CQ01pSnk0Q0x3RW1JeUlIQXhFK0FUTWhNaDRCRlJNQ3VGQTRPRkE0QVFqODhCY2hJUmNERUJjaEllVUxEd2NMQnlZQ0JBVUVCUU1OQ1FFREF3RnNEUlFVRHYwQ0Rnb0N6QVlNQndFQllEaFFPRGhRQVFnaEdQMXlHQ0VoR0FLT0dDSCtkUXdHQlNBQ0FnTUJBUWdCQWdRQmRBOFAvczhDQ1FvTkJnc0gvZmNBQUFBSUFGYi9QUU8zQXNrQUtRQTJBRlVBWXdCeEFJQUFrUUNkQUxKQXIzSUJCd3hOQVFZSGNBRUxDVGczSUJNRUFnVk1SVVFaQkFBQ0tnRUJBQVpBVlZST0F3UU1QZ0FHQndrSEJnbG1BQVVPQWc0RkFtWUFBZ0FPQWdCa0FBQUJEZ0FCWkFBQkFXY0FEQUFMQkF3TFdRQUpBQW9EQ1FwWkFBUUFBdzBFQTFrU0FRMEFFQWdORUZrUkFRY0FDQThIQ0ZrQUR3NE9EMDBBRHc4T1VRQU9EdzVGZ29GWFZwaVdrNUtLaUlHUmdwRi9mbmQyYld4bFpGMWNWbU5YWTFGUVNVaEFQakl3SXlJZEhCY1ZFdzRyQVNjUEFTY21Ed0VPQVJVUkZCNEROajhCRnhZek1qOEJGaGNXTWpjMk54Y1dNalkzTmpVUk5BRXVBVFUwUGdFek1oWVZGQVkzSno0Qk5UUXVBU01pQmhVVUZ3Y25MZ0VqQmc4QkVUY1hGakkyUHdFWEJTSUdGUkVVRmpJMk5SRTBMZ0VYSWc0Q0hRRVVGakkyUFFFbU54VVVIZ0V5UGdFOUFUUXVBU01HQXlJT0FoVVVGak15UGdJMU5DNEJCaUltTkRZek1oNENGUlFEcWJjTDI4a0hCOU1HQmdJRUJBWUdBODNLQXdRRUF4NHZRd1VVQldRc1RnTUdCUUlIL3Z3MlhDZERLRDFXWGFrekJnVXhWREpNYXlZV3lRSURBZ1FEdXNIS0FnVUZBdHlpL2FvSUN3c1BDd1VJekFRSEJRTUxEd3NEeEFVSUNna0ZCUWtGRHpBT0dSSUxLQndPR1JNTEV4OEdHaE1URFFjTENRVUNueW9CWkZRREExSUNDUWI5dkFNR0JRTUNBUUZRVlFFQ0RWNW1DQWlYYmhJQkFnSUdDQUpGRHZ6VlZiVXFKMFFuVmp3cXRab01FUndNTVZVeGJFc3BVZ3BVQVFFQkFVZ0NIRXhWQVFFQlpDVTFDd2Yra0FnTEN3Z0JjQVVJQlVjREJRY0RqUWNMQ3dlTkQxSzZCUWtFQkFrRnVnVUlCUVArblFzU0dRNGNLQW9UR1E0U0lCSmtFeG9UQlFrTUJnMEFBQUFBQXdDZy8rQURnQUtnQUFrQUVnQWpBRUZBUGg0U0VRME1CUUlHRGdrSUF3UUJBa0FBQlFZRmFBQUdBZ1pvQUFRQkFBRUVBR1lBQWdBQkJBSUJWd0FBQUFOUEFBTURDd05DRWljWUVSRVJFQWNWS3lrQkVTRTNJUkVoRVFjRkp3RW5BUlV6QVNjM0p5NENJeUlQQVRNZkFUYytBVFUwQXVEOTRBR2dJUDRnQW1BZy92c1RBVllXL3BoQUFXa1hSaGtDQndjRUN3Z1pBUllxR0FRRUFnQWcvY0FCd0NDWUV3RlhGLzZZUVFGb0YwQVpBd01DQ0JnWEtoa0VDZ1VNQUFBQUJnRGcvNkFESUFLZ0FDQUFMd0JDQUVZQVNnQk9BTGhBQzBBNU9EQWVFQVlJQ3dGQVM3QVVVRmhBUVFBS0F3d0RDbDRPQVF3TkF3d05aQThCRFFzRERRdGtBQXNJQ0F0Y0FBRUFCZ0FCQmxrSEFnSUFDUVVDQXdvQUExY0FDQVFFQ0UwQUNBZ0VVZ0FFQ0FSR0cwQkRBQW9EREFNS0RHWU9BUXdOQXd3TlpBOEJEUXNERFF0a0FBc0lBd3NJWkFBQkFBWUFBUVpaQndJQ0FBa0ZBZ01LQUFOWEFBZ0VCQWhOQUFnSUJGSUFCQWdFUmxsQUdVNU5URXRLU1VoSFJrVkVRMEpCTkJZMUdqTVJGVE1RRUJjckFTTTFOQ1lyQVNJT0FoMEJJeFV6RXhRV015RXlQZ2MxRXpNbE5ENENPd0V5SGdNZEFTTUJGUlFHSXlFaUppOEJMZ1E5QVFNaEJ6TVJJeE1qQXpNREl4TXpBeUNnSWhtTEN4WVFDYUFxTHlNWUFSb0ZDd2tKQ0FZRkJBSXVLZjU5QlFnTEJZc0ZDUWNHQThZQkRoRU0vdVlEQmdNRUF3UURBZ0V3QWJQb0hCeU9IUlllemgwVkhnSTlLQmtpQ1JBV0RDZ2QvYnNaSWdJREJnWUlDQW9LQmdKRlJRWUxDQVVEQmdjSkJTajlud0VORVFFQ0FnSUVCUVVHQXdFQ1JFRCtIZ0hpL2g0QjR2NGVBQUFBQUFJQXdQK2dBMEFDNEFBTEFCUUFQMEE4RkJFUUR3NE5EQWNEUGdBR0FBRUFCZ0ZtQndVQ0F3SUJBQVlEQUZjQUFRUUVBVXNBQVFFRVVBQUVBUVJFQUFBVEVnQUxBQXNSRVJFUkVRZ1RLd0VWTXhFaEVUTTFJUkVoRVNVbk54Y0hKeEVqRVFKQTRQM0E0UDhBQW9EK1FoZVZsUmR1SUFJQUlQM2dBaUFnL2FBQ1lEUVhsWlVYYmY0YUFlWUFBZ0RBLzZBRFFBS2dBQXNBRkFBK1FEc1VFUkFQRGcwTUJ3RUFBVUFBQmdNR2FBY0ZBZ01DQVFBQkF3QlhBQUVFQkFGTEFBRUJCRkFBQkFFRVJBQUFFeElBQ3dBTEVSRVJFUkVJRXlzQkZUTVJJUkV6TlNFUklSRUZCeGMzSndjUkl4RUNRT0Q5d09EL0FBS0Eva0lYbFpVWGJpQUNBQ0Q5NEFJZ0lQMmdBbURaRjVXVkYyMEI1djRhQUFBREFGSC9jUU92QXNBQURnQWRBQ2tBSjBBa0tTZ25KaVVrSXlJaElCOGVEQUU5QUFBQkFRQk5BQUFBQVZFQUFRQUJSUmtZRWdJUEt3RXVBU0lHQnc0QkhnSStBaVlERGdFdUFqWTNQZ0V5RmhjV0VBTUhKd2NYQnhjM0Z6Y25Od01tUEp1ZW16eFFPVG1nMXRhZ09UbG9TY1hGa2pRMFNUZVBrSTgzYjlXb3FCaW9xQmlvcUJpcHFRSkdQRDQrUEZEVzFxQTVPYURXMXY0Y1NUUTBrc1hGU1RZNU9UWncvc1FCWHFpbkY2aW9GNmVvR0tpb0FBQUFBZ0IrQUFBRGdBSmdBQk1BSWdCQlFENFdDZ0lEQkJzWEVoQUpCUUFCQWtBVkN3SUNQZ0FBQVFCcEFBSUZBUVFEQWdSWkFBTUJBUU5OQUFNREFWRUFBUU1CUlJRVUZDSVVJaHNVRmhBR0VpczdBVGMyTno0Q054VUpBUlVHQndZWE1CVXdBVFVOQVRVaUJnY21QZ1dBRlNaS1Rod3JRQ1lCZ1A2QXQyaGpBZ0dnQVNqKzJJeXZSUUVCREJnNFQ0TStkeU1NRHd3Qm9BRUFBUUNoQ0doa3BRWUJZSUhCd29KY2R3Y1pSa0JPT0NjQUFBQUFBZ0NBQUFBRGdBSmdBQjhBS2dBNlFEY2xEQUlEQkNRZ0RRQUVBZ0VDUUNZTEFnQStBQUlCQW1rQUFBQUVBd0FFV1FBREFRRURUUUFEQXdGUkFBRURBVVVVSEJZVUdRVVRLeVV3TlRRdUFpY3VBU2MxQ1FFMUhnRVhIZ0VmQVRNd1BRY25MZ0VqRlMwQkZTQVhGZ09BQXhBc0l6V0xYdjZBQVlBM1RDb3JTaU1tRlNCRnI0eisyQUVvQVFSWkkwQUdHaXBSVVNNMU53U2gvd0QvQUtBQ0V4TVVUamcrQndjSUJ3Y0lCZ2dUZDF5Q3dzR0J0RWtBQUFNQVlQK0FBNkFDd0FBVkFCMEFMZ0JkUUZvTkFRSUlDd0VFQVFKQURBRUJBVDhKQVFRQkFBRUVBR1lBQlFBSUFnVUlXUUFDQUFFRUFnRlpBQUFBQXdjQUExa0tBUWNHQmdkTkNnRUhCd1pSQUFZSEJrVWZIZ0FBSnlZZUxoOHVHeG9YRmdBVkFCVVRGQlVpQ3hJckFSUUdJeUl1QVRRK0FUTVZOeWNWSWdZVUZqSTJOUUlnQmhBV0lEWVFBU0l1QVRVMFBnSXlIZ0lVRGdJQzJINWFPMk02T21NN3dNQnFscGJVbGxUK3FQVDBBVmowL21CbnNHWThabzZham1ZOFBHYU9BU0JhZmpwamRtTTZiMitBV0piVWxwVnJBYUQwL3FqMDlBRlkvZGRtc0dkTmptWThQR2FPbW81bVBBQUFBQUlBUVArQUE4QUN3QUFKQUJNQUxrQXJFQUlDQUQ0VERRd0xDZ2tJQndZRkNnSTlBUUVBQWdJQVN3RUJBQUFDVHdNQkFnQUNReElhRWhBRUVpc0JJUXNCSVFVREpRVURGeWNITnljaE54Y2hCd1BBL3FscGFmNnBBUmh0QVJVQkZXNHUxZFZWMkFFR1VsSUJCdGdCZ2dFKy9zTEUvc0xGeFFFKzZKaVk5WlgzOTVVQUFBTUFZUCtBQTZBQ3dBQUhBQm9BSmdCSFFFUUFBQUFEQkFBRFdRa0JCUWdCQmdjRkJsY0FCQUFIQWdRSFZ3b0JBZ0VCQWswS0FRSUNBVkVBQVFJQlJRa0lKaVVrSXlJaElCOGVIUndiRUE0SUdna2FFeEFMRUNzQUlBWVFGaUEyRUFFaUxnRTBQZ0V6TWg0RUZSUU9BZ01qRlNNVk14VXpOVE0xSXdLcy9xajA5QUZZOVA1Z1o3Qm1ackJuTkdOVFJ6RWJQR2FPUFNIdjd5SHc4QUxBOVA2bzlQUUJXUDNYWnJET3NHWWJNVWRUWXpSTmptWThBbjN3SWUvdklRQUFBQU1BWVArQUE2QUN3QUFIQUJnQUhBQThRRGtBQkFNRkF3UUZaZ0FGQWdNRkFtUUFBQUFEQkFBRFdRWUJBZ0VCQWswR0FRSUNBVklBQVFJQlJna0lIQnNhR1JFUUNCZ0pHQk1RQnhBckFDQUdFQllnTmhBQklpNEJOVFErQWpJZUFoUU9BZ0VoRlNFQ3JQNm85UFFCV1BUK1lHZXdaanhtanBxT1pqdzhabzcrc3dJQS9nQUN3UFQrcVBUMEFWajkxMmF3WjAyT1pqdzhabzZham1ZOEFZMGlBQUFBQWdCZy80QURvQUxBQUFjQUdBQXBRQ1lBQUFBREFnQURXUVFCQWdFQkFrMEVBUUlDQVZFQUFRSUJSUWtJRVJBSUdBa1lFeEFGRUNzQUlBWVFGaUEyRUFFaUxnRTFORDRDTWg0Q0ZBNENBcXorcVBUMEFWajAvbUJuc0dZOFpvNmFqbVk4UEdhT0FzRDAvcWowOUFGWS9kZG1zR2ROam1ZOFBHYU9tbzVtUEFBQ0FENy9YZ1BDQXVJQUVRQXJBQ3BBSndRQkFBQURBZ0FEV1FBQ0FRRUNUUUFDQWdGUkFBRUNBVVVDQUNZakdSWU1DUUFSQWhFRkRpc0JJU0lPQWhVUkZCWXpJVEkyTlJFMEpoTVVEZ0lqSVNJdUJUVVJORFl6SVRJZUF4VURXLzFLRlNZY0VEd3JBcllyUER3UENBNFRDdjA4QmdzS0NRY0ZBeDRWQXNRSUVBd0tCUUxpRUJ3bUZmMUtLenc4S3dLMkt6ejgzQW9URGdnREJRY0pDZ3NHQXNRVkhnVUtEQkFJQUFBQUFnQlIvM0VEcndMQUFBNEFHZ0FaUUJZYUdSZ1hGaFVVRXhJUkVBOE1BRDBBQUFCZkVnRVBLd0V1QVNJR0J3NEJIZ0krQWlZREJ5Y0hKemNuTnhjM0Z3Y0RKanlibnBzOFVEazVvTmJXb0RrNXRoaW9xQmlvcUJpb3FCaXBBa1k4UGo0OFVOYldvRGs1b05iVy9vSVlxS2NYcUtnWHA2Z1lxQUFBQUFJQVlQK0FBNkFDd0FBSEFCd0FRMEJBRGdFREFCQUJCZ1FDUUE4QkJBRS9BQVlFQlFRR0JXWUFBQUFEQkFBRFdRQUVBQVVDQkFWWkFBSUJBUUpOQUFJQ0FWRUFBUUlCUlJJVkZCTVRFeEFIRlNzQUlBWVFGaUEyRUFBaUpqUTJNelVYQnpVaURnRVZGQll5TmpVekZBS3MvcWowOUFGWTlQN0sxSmFXYXNEQU8yTTZmN04rS0FMQTlQNm85UFFCV1A1VWx0U1dXSUJ2Ynpwak8xbC9mbHBxQUFBQUFRQkEvNEFEd0FMQUFBa0FHRUFWQWdFQVBna0lCd1lGQlFBOUFRRUFBRjhTRUFJUUt3RWhDd0VoQlFNbEJRTUR3UDZwYVduK3FRRVliUUVWQVJWdUFZSUJQdjdDeFA3Q3hjVUJQZ0FBQUFBQ0FHRC9nQU9nQXNBQUJ3QVRBRFpBTXdjQkJRWUNCZ1VDWmdRQkFnTUdBZ05rQUFBQUJnVUFCbGNBQXdFQkEwc0FBd01CVWdBQkF3RkdFUkVSRVJFVEV4QUlGaXNBSUFZUUZpQTJFQWNqRlNNMUl6VXpOVE1WTXdLcy9xajA5QUZZOUtEd0l1N3VJdkFDd1BUK3FQVDBBVmkrN3U0aThQQUFBQUFBQWdCZy80QURvQUxBQUFjQUN3QWhRQjRBQUFBREFnQURWd0FDQVFFQ1N3QUNBZ0ZSQUFFQ0FVVVJFeE1RQkJJckFDQUdFQllnTmhBSElUVWhBcXorcVBUMEFWajBvUDRBQWdBQ3dQVCtxUFQwQVZpK0lnQUFBQU1BTlA5VEE4MEM3QUFIQUJnQUtnQTVRRFlBQVFRQUJBRUFaZ0FBQlFRQUJXUUFBd1lCQkFFREJGa0FCUUlDQlUwQUJRVUNVZ0FDQlFKR0doa2pJUmtxR2lvWEZSTVNCeElyQUJRV01qWTBKaUlGRkE0Q0lpNENORDRDTWg0Q0FTSU9BaFVVSGdFek1qNENOVFF1QVFFdWZLNTdlNjRDSTBoOHFyeXJlMGxKZTZ1OHFueEkvalJSbEd0QWE3aHRVWlJyUDJ1NEFYZXZlM3V2ZTlOZHEzdEpTWHVydTZ0N1NVbDdxd0V5UUdxVVVteTRhejlybEZGdHVHc0FBZ0JnLzRBRG9BTEFBQWNBRWdBblFDUVNFUkFQRGdVQ0FBRkFBQUFDQUdnQUFnRUJBazBBQWdJQlVnQUJBZ0ZHSkJNUUF4RXJBQ0FHRUJZZ05oQUJCaU1pSmk4Qk54YzNGd0tzL3FqMDlBRlk5UDRnQ1FrRUNnUndKRjc2SXdMQTlQNm85UFFCV1A3QkNRVUVjQ05lK3lRQUFBQUNBRDcvWGdQQ0F1SUFGQUFjQUNwQUp4d2JHaGtZRmdZQkFBRkFBZ0VBQVFFQVRRSUJBQUFCVVFBQkFBRkZBZ0FLQndBVUFoUUREaXNCSVNJR0ZSRVVGak1oTWpZMUVUUXVCUUVuQnljM0Z3RVhBMXY5U2lzOFBDc0N0aXM4QlFzT0VoUVgva1FGQmNvZ3J3RmpJQUxpUEN2OVNpczhQQ3NDdGd3WEZSRU9Dd1g5YndVRnlpQ3ZBV01nQUFFQlFBQmdBc0FCNEFBTEFBYXpDQUFCSmlzQkJ5Y0hGd2NYTnhjM0p6Y0NxS2lvR0tpb0dLaW9HS21wQWVDcHFCZW9xQmVucUJlcHFBQUFBQUVCQUFBZ0F3QUNlQUFVQURsQU5nZ0JCQUlCUUFjQkFnRS9CZ0VCUGdBRUFnTUNCQU5tQUFFQUFnUUJBbGtBQXdBQUEwMEFBd01BVVFBQUF3QkZFaFVVRXhBRkV5c2tJaVkwTmpNMUZ3YzFJZzRCRlJRV01qWTFNeFFDYXRTV2xtckF3RHRqT24remZpZ2dsdFNXV0lCdmJ6cGpPMWwvZmxwcUFBQUJBSUQvb0FRQUFxQUFKZ0E0UURVYkdnb0pDQWNHQlFRSkFnRUJRQVFCQUFBQkFnQUJXUUFDQXdNQ1RRQUNBZ05SQUFNQ0EwVUJBQjhkRnhVUURnQW1BU1lGRGlzQk1oNEJGVGNYQnljM0Z6UXVBaU1pRGdFVUhnRXpNajRCTnhjT0FTTWlMZ0UxTkQ0Q0FnQm9zV2R1RW8yRkVtWTVZSVJKWWFWZ1lLVmhUWXRqR0JrbnlIMW9zV2M5WjQ0Q29HYXhhR2tTaUlnU2FVbUVZRGhncGNLbFlENXVSd2Qwa21leGFFNk9aejBBQUFJQVFQK0FBOEFDd0FBSkFBOEFLa0FuQ2djQ0FENFBEZzBFQXdJQkFBZ0NQUUVCQUFJQ0FFc0JBUUFBQWs4QUFnQUNReElTRlFNUkt5VURKUVVESlNFTEFTRWxGeUVIRnljQldHMEJGUUVWYlFFWS9xbHBhZjZwQWNCU0FRYllWZFcrL3NMRnhRRSt4QUUrL3NMVTlwWDFsd0FBQWdBQS95QUVBQU1nQUJRQUt3QThRRGtBQlFFQ0FRVUNaZ0FDQkFFQ0JHUUFCQWNCQXdRRFZRQUJBUUJSQmdFQUFBb0JRaFlWQVFBbUpTRWZGU3NXS3c4T0NnZ0FGQUVVQ0E0ckFTSU9BZ2MrQWpNeUVoVVVGakkyTlRRdUFRTXlQZ00zRGdNaklnSTFOQ1lpQmhVVUhnRUNBR2U3aVZJREEzQytiNnowT0ZBNGlleUxVcHQ4WHpZQ0FrUnZtRk9zOURoUU9JbnNBeUJQaHJsbWQ4bDAvdnE2S0RnNEtJdnNpZndBTWwxNm1WSlpvblJGQVFhNktEZzRLSXZzaVFBQURBQWwvMFFEMndMNkFBOEFIUUF1QUR3QVRnQmZBSEFBZ0FDVkFLY0F0QUREQUcxQWFwV0JjQU1CQUU0OUFnWUJMaDRDQlFhMUFRa0tsZ0VDQ1FWQUFBb0ZDUVVLQ1dZQUNRSUZDUUprQ3dFQUFBRUdBQUZaQ0FFR0J3RUZDZ1lGV1FRQkFnTURBazBFQVFJQ0ExRUFBd0lEUlFFQXVMZVlsenM0TkRFcktDTWdIUndYRmhFUUNna0FEd0VQREE0ckFUSWVBeDBCRkFZaUpqMEJORFlUTWhZZEFSUUdJaVk5QVRRMk13RVVCaXNCSWk0Qk5UUTJPd0V5SGdFVklSUUdLd0VpSmpVME5qc0JNaFlsRmhRR0R3RUdKaWNtTmo4QlBnRWVBUmNCRmdZUEFRNEJMZ0VuSmpZL0FUWVdGd0VlQVE4QkRnRW5MZ0UvQVQ0Q0ZoY0JIZ0VQQVE0Qkp5NEJOajhCUGdFWEF6NEJIZ0VmQVJZR0J3WW1Md0V1QVQ0RE53RTJNaFlmQVJZR0J3NEJMZ0V2QVNZMk53RStBUjhCSGdFT0FTOEJMZ0VCUGdFeUh3RWVBUTRCTHdFdUFUY0NBQVVKQndZREVoZ1NFZ3dNRWhJWUVoSU1BZHNTREg0SURnZ1NESDRJRGdqOUJCSU1mZ3dTRWd4K0RCSUN2QVFJQjIwS0dBY0dCd3B0Qmd3S0NnUDlhZ1lHQzIwRkRBc0pBd2NIQzJ3TEdBWUI2QXNHQmo4R0dBb0xCd2MvQXdrTERBWCtnZ3NHQmo4R0dBc0hDQUVEUHdjWUNsMEdEQXNKQXo4R0Jnc0tHQWMvQWdJQkFnTUdBd0YvQnc4T0JEOEdCZ3NGREFzSkF6OEhCd3Y5MUFZWUNtMExCZ3dZQzJ3TEJ3S2NCUTRQQjIwTEJnd1lDMjBLQndZQytnTUZDQWtGZlEwUkVRMTlEUkg5QkJFTmZnd1NFZ3grRFJFQklRd1JDQTBJRFJFSURRa01FUkVNRFJFUjRRZ1BEZ1EvQmdZTEN4Z0dQd01CQXdjRi9vSUxHQVkvQXdFREJ3VUxHQVkvQmdjS0Fpd0dHQXR0Q3dZR0JoZ0xiUVVIQXdFRC9Xb0dHQXR0Q3dZR0JBNFFCMjBMQmdZQ2xnTUJBd2NGYlFzWUJnWUdDMjBEQ0FnSEJ3WUMvV29FQ0FkdEN4Z0dBd0VEQndWdEN4Z0dBZWdMQmdZL0JoZ1dCZ1kvQmhqK2pRY0lCRDhHR0JZR0JqOEdHQXNBQWdDQi82QURnUUtnQUE4QUlBQXRRQ29PQVFJREFnRkFEd0FDQVQwQUFBQUNBd0FDV1FBREFRRURUUUFEQXdGUkFBRURBVVVvR0NNbUJCSXJCU2MyTlRRdUFTTWlCaFFXTXpJM0Z3RXVBVFUwTmpJV0ZSUU9CQ01pQTRIalExS01VbjZ5c241clZPTDluaVlwbitHZ0V5TTBQVVVrY1RIaVZHdFNqVkd5L0xORTR3RVBKbVEyY2FDZmNTVkZQVFFqRXdBQUFBRUJBQUFnQXdBQ0lBQUxBQ1ZBSWdBRUF3RUVTd1VCQXdJQkFBRURBRmNBQkFRQlR3QUJCQUZERVJFUkVSRVFCaFFyQVNNVkl6VWpOVE0xTXhVekF3RHdJdTd1SXZBQkR1N3VJdkR3QUFBQUFRRkEvK0FDd0FKZ0FBVUFCck1EQVFFbUt3RTNDUUVuQVFGQVFRRS8vc0ZCQVA4Q0gwSCt3UDdBUVFEL0FBQUFBUUZBLytBQ3dBSmdBQVVBQnJNREFRRW1Ld0VuQ1FFM0F3TEFRZjdCQVQ5Qi93SWZRZjdBL3NCQkFQOEFBQUFBQVFFc0FJUUN5d0c5QUFvQUVrQVBDZ2tJQndZRkFENEFBQUJmSVFFUEt5VUdJeUltTHdFM0Z6Y1hBY0FKQ1FRS0JIQWtYdm9qalFrRkJIQWpYdnNrQUFRQWdQK2dBNEFDb0FBSUFCRUFHd0FmQUV4QVNSMGNHeG9ZRnhZVEVSQVBDQUVOQkFjQlFBQUJCd0UvR1JJQ0JqNEFCZ0FIQkFZSFZ3QUVBQUVEQkFGWEJRRURBQUFEU3dVQkF3TUFUd0lCQUFNQVF4a1dFUkVTRVJFU0NCWXJDUUVSTXhFekVUTVJBeU1SSVJFakVTVUZBUWMxSXhVSEZRa0JOU1VITlRNQ0FQN0E0TURnSUtEL0FLQUJJQUVnL3VEQWdFQUJnQUdBL2FCQVFBSkEvd0QrWUFFQS93QUJvUDZBQVFEL0FBRng1dVlCYjVwYXdETXBBVFArelNtQU00WUFBQUFEQUdEL2dBT2dBc0FBR1FBaEFDVUFQa0E3SWdFRUFDVUJBUVFDUUFBRUFBRUFCQUZtQUFJRkFRQUVBZ0JaQUFFREF3Rk5BQUVCQTFFQUF3RURSUUVBSkNNZkhoc2FFQTRBR1FFWkJnNHJBVEllQVJjZUFSUUdCdzRFSXlJdUFTY3VBVFErQXlBR0VCWWdOaEFuQlNFUkFnQXpZVmNrTmpvNk5oWXhOVGs3SHpOaFZ5UTJPanB0aS9uK3FQVDBBVmowNFA1QkFQOENueG95SkRlTG1vczNGU1FiRXdrYU1pUTNpNXFNYkRvaDlQNm85UFFCV0JUQS93QUFBQVFBZ1ArZ0E0QUNvQUFTQUI0QXBnRTNBVzVMc0NaUVdFQmhBQWNBSFFVSEhWa0pBUVVmR3dJYUJnVWFXUWdCQmg0QkhBQUdIRmtoQVFBQUF3UUFBMWtLSWdJRUlBRVpFZ1FaV1JnQkVoRUJDd0lTQzFrQUFnQUJGQUlCV1JZQkZBOEJEUk1VRFZrQUZRQU9GUTVWRndFVEV3eFJFQUVNREFzTVFodEFad0FIQUIwRkJ4MVpDUUVGSHhzQ0dnWUZHbGtJQVFZZUFSd0FCaHhaSVFFQUFBTUVBQU5aQ2lJQ0JDQUJHUklFR1ZrWUFSSVJBUXNDRWd0WkFBSUFBUlFDQVZrV0FSUVBBUTBURkExWkZ3RVRFQUVNRlJNTVdRQVZEZzRWVFFBVkZRNVJBQTRWRGtWWlFVd0FJUUFmQUFFQUFBRTJBVE1CSXdFaUFSNEJIQUVRQVEwQkJnRUVBUDhBL1FEOEFQc0E3d0RzQU9jQTVBRFpBTmNBMHdEUkFNc0F5QURCQUw4QXZBQzZBS3dBcVFDZkFKd0FrZ0NSQUk0QWpBQ0hBSVFBZndCOUFIa0Fkd0JxQUdjQVdnQlhBRXdBU2dCR0FFUUFQQUE1QURRQU1nQXRBQ3NBSHdDbUFDRUFwZ0FhQUJrQUZBQVRBQTBBREFBQUFCSUFBUUFTQUNNQURpc0JJZzRDQndZVkZCNEJGeFl5TmpVMEp5WUNJaVkxTkQ0Qk1oNEJGUlEzSXlJbU5UUS9BVFkwTHdFbUl5SVBBUTRDSXlJbVBRRTBKaXNCSWdZZEFSUU9BeU1pSmk4QkppTWlEd0VHRkI4QkZoVVVEZ0VyQVNJT0FnOEJEZ01kQVJRV093RXlIZ0VWRkE0QkR3RUdGQjhCRmpNeVB3RStBVE15RmgwQkZCWTdBVEkyUFFFME5qTXlId0VXTWo4Qk5qUXZBU1kxTkRZN0FUSTJQUUkwTGdFWEZSUXJBU0lIRGdJVkZCNEJId0VXRHdFR0l5SXZBU1lqSWdZZEFSUU9BaXNCSWlZOUFUUW5KaU1pQmc4QkJpTWlMd0VtTkQ4Qk5qVTBKeVlyQVNJbVBRRTBOanNCTWpjMk5UUW1Md0VtTkQ4Qk5qTXdNekllQVI4QkZqTXlQZ0UzTmowQk5Ec0JNaDRCSFFFVUh3RWVCRE15UHdFK0FUSVdId0VlQVJVVUR3RUdGUlFlQVJjV093RXlGUUlDRkNVaUlBMDREUmtTT0o5eE9UZ05oVjBxU2xkS0s2OGVFeHNQRkE0T0xRNFZGUTRUQkFzTkJoTWRIQlE4RlIwRkNBd09DQWtSQnhNT0ZSVU9MUTRPRXc4TUZRd2ZCQWtJQ0FNR0F3UURBaDRVSHd3VkRBTUhCUk1PRGkwTkZoUVBFd1lSQ2hNY0hSUTlGQjRiRXhRT0V3NHFEaTBPRGhRUEd4TWVGQnNNRmdJUEhpQVhCd29HQmdzSUV3ME5MQVVJQ0FRVEdDRWZMd01GQmdROEJ3c1hHQjhRSGdzU0JRZ0lCQzBGQlJJYUZ4WWhId2NMQ3djZklCY1dEUXdTQlFVc0JRZ0RBZ01EQVJNWElRc1RFZ2NZRVQwRUNBUVlDQVFKQ1FvS0JpRVlFZ0lIQndjQ0xRSURCUk1aQlFvSUZpRWVEd0hnQnc4VkRUaFFHakFzRWpod1VFODVPUDZnWGtJclNpc3JTaXRDa2hzVEZBMFREeWtPTEE0T0VnVUhCQnNUSGhRZUhoUWZCdzRMQ0FVSUJ4TU9EaXdPS1E4U0RoUU1GZ3dDQXdRREJnTUhDQWtGUEJVZERCWU1Cd3dLQlJJUEtRNHNEZzRUQndnYkV4NFZIUjBWSGhNYkVCTU9EaTBPS1E4VERSUVRIQndVSHg0T0Z3MVFIaEFZQnhJVUN3b1ZFZ2NUREF3dEJRVVNHaTBoSGdRSEJBTUtDQjRnRnhjTkRCTUZCUzBGRGdVU0dDRWdGeGNMQmowSEN4Y1hJQkFlQ3hJRkRnVXRCQUVDQVJNWkJRb0hGeUFmRWdVSUJSOGZHQVlEQlFRREFSa1NBd0lDQWkwQ0JnUUhCUk1YSVFzVEVRZ1hFZ0FBQXdEQS8rQURRQUpnQUFNQUJnQUpBQXEzQ0FjR0JRTUNBeVlyRXg4QkNRSURFd0Vud09sekFTVCtpQUU0NXVMK3RxWUJMV2ZtQW9EK2J3Rk0vZzhCOWY3R1NRQUVBR0QvZ0FPZ0FzQUFCd0FSQUJrQUtnQlJRRTRBQndBS0FRY0tXUUFCQUFBQ0FRQlpBQUlBQXdRQ0ExY0xCZ0lFQUFVSkJBVlhEQUVKQ0FnSlRRd0JDUWtJVVFBSUNRaEZHeG9JQ0NNaUdpb2JLaGNXRXhJSUVRZ1JFUkVSRWhNU0RSUXJBQlFXTWpZMEppSVRFU01WTXhVakZUTTFFaUFHRUJZZ05oQUJJaTRCTlRRK0FqSWVBaFFPQWdIUEZ5SVhGeUk2WUNBZ2dHeitxUFQwQVZqMC9tQm5zR1k4Wm82YWptWThQR2FPQWRraUZ4Y2lGLzZBQVFBUThCQVFBbEQwL3FqMDlBRlkvZGRtc0dkTmptWThQR2FPbW81bVBBQUVBR0QvZ0FPZ0FzQUFCd0FZQURNQVFBQmVRRnNBQlFZSEJnVUhaZ0FIQ0FZSENHUUFBQUFEQkFBRFdRc0JCQUFHQlFRR1dRd0JDQUFKQWdnSldRb0JBZ0VCQWswS0FRSUNBVkVBQVFJQlJUVTBHaGtKQ0RrNE5FQTFRQ3NxSVI4ZUhSa3pHak1SRUFnWUNSZ1RFQTBRS3dBZ0JoQVdJRFlRQVNJdUFUVTBQZ0l5SGdJVURnSURJZzRCRlRNbU16SVdGUlFHQnc0Q0J6TStBVGMrQVRVMEpnTWlCaFFXTWpZMU5DNERBcXorcVBUMEFWajAvbUJuc0dZOFpvNmFqbVk4UEdhT1JpczhJQ1lDWVNReUZSSVhHUXNCSmdFTklCb2FSakVQRXhRY0ZBUUdDQXNDd1BUK3FQVDBBVmo5MTJhd1owMk9aanc4Wm82YWptWThBbGtiT0NsZExTTVdKUkVWSmlrZEtpRWZHQzRmTWp2K2l4TWNGQlFPQlFzSUJnTUFBQUFBQlFEQS80QURRQUxBQUFzQUV3QVhBQ2tBTVFCWVFGVW5JQUlKQ2dGQUFBQUFCQUVBQkZrRkRBTURBUUFIQ0FFSFZ3QUlBQXNLQ0F0WkFBb0FDUVlLQ1ZrQUJnSUNCa3NBQmdZQ1R3QUNCZ0pEQUFBdkxpc3FKQ01iR2hjV0ZSUVRFZzhPQUFzQUN4RVRFdzBSS3dFMU5DWWlCaDBCSXhFaEVTVTBOaklXSFFFaEFTRVJJUWMwSmlJR0ZSUVdGeFVVRmpJMlBRRStBUVlpSmpRMk1oWVVBdEI2ckhwd0FvRCtFR2VTWi82Z0FkRDl3QUpBNENVMkpSc1ZDUTRKRlJzekdoTVRHaE1CWUpCV2VucFdrUDRnQWVDUVNXZG5TWkQrUUFHZ29Cc2xKUnNXSXdWU0J3a0pCMUlGSXdvVEdoTVRHZ0FBQUFZQXdRRGdBMEFCWUFBSEFBOEFIZ0FuQUM4QU53QkZRRUlLRFFZREFnZ01CQU1BQVFJQVdRa0ZBZ0VEQXdGTkNRVUNBUUVEVVFzSEFnTUJBMFVnSHhFUU5UUXhNQzBzS1Nna0l4OG5JQ2NZRmhBZUVSNFRFeE1RRGhJckFESVdGQVlpSmpRMklnWVVGakkyTkNVeUhnRVZGQVlqSWk0Q05UUTJOeUlHRkJZeU5qUW1CRElXRkFZaUpqUTJJZ1lVRmpJMk5BSHhIaFVWSGhVL05pVWxOaVgrd1FvUUNoVVBCdzRKQmhVUEd5VWxOU1ltQWRZZUZSVWVGVDgySlNVMkpRRkVGUjRWRlI0eEpUWWxKVFlKQ2hBS0R4VUdDUTRIRHhVY0pUWWxKVFlsSEJVZUZSVWVNU1UySlNVMkFBQUFBQUlCQVAvZ0F3QUNZQUF3QUVzQklVdXdDMUJZUUI0dkZ3SUpBMHMrQWdvQlBRRUZDREVCQndVdEtnSUdCd1ZBR3dFSEFUOGJTN0FNVUZoQUhpOFhBZ2tEU3o0Q0NnSTlBUVVJTVFFSEJTMHFBZ1lIQlVBYkFRY0JQeHRBSGk4WEFna0RTejRDQ2dFOUFRVUlNUUVIQlMwcUFnWUhCVUFiQVFjQlAxbFpTN0FMVUZoQUx3QUFDUUVKQUFGbUFBTUFDUUFEQ1ZrQ0FRRUFDZ2dCQ2xrQUNBQUZCd2dGV1FBSEFBWUVCd1paQUFRRUN3UkNHMHV3REZCWVFDOEJBUUFKQWdrQUFtWUFBd0FKQUFNSldRQUNBQW9JQWdwWkFBZ0FCUWNJQlZrQUJ3QUdCQWNHV1FBRUJBc0VRaHRBTHdBQUNRRUpBQUZtQUFNQUNRQURDVmtDQVFFQUNnZ0JDbGtBQ0FBRkJ3Z0ZXUUFIQUFZRUJ3WlpBQVFFQ3dSQ1dWbEFEMHBJUWtBa0xEUWpGaWt4RWhBTEZ5c0JJZzRFSXlJdUFTOEJKaWN1QWlNaURnRVBBUmtCTXhFK0FUTXlIZ0VYRmpNeVBnTTNQZ0UzRVRVR0F3WWpJaWN1QWlNaURnRUhFVDRCTXpJWEhnUXpNamNDNEFJU0NCRU1Ed2NPR2g0Skd4SUhIQ0V6RmlwQUVnVUhJQTB6S0JNcU5RNWFNUWdSRWdzVUF3b1BCd3dVTnhZdVZ3MDNMUlVZS2hzTERUTW9MVk1HSnhJZ0hBNFhPQUpBQXdFQkFRRUNCUUlHQkFFR0J3WUxDQU1GL3JmKzVBRWZCUWdJRHdNVEFRSUJBZ0VCQWdFQk9pRUMvc01IRWdNUENRUUZBd0VUQlFnU0FRa0RCZ0lIQUFBQ0FJRC9vQU9BQXFBQUNBQVNBRFZBTWhJUkR3NE5DZ2dCQUFrQkF3RkFFQWtDQXo0QUFRTUFBd0VBWmdBREFRQURTd0FEQXdCUEFnRUFBd0JERkJFUkVnUVNLd2tCRVRNUk14RXpFUUVITlNNVkJ4VUpBVFVDQVA3QTRNRGcvc0RBZ0VBQmdBR0FBa0QvQVA1Z0FRRC9BQUdnQVdDYVdzQXpLUUV6L3MwcEFBSUFnUCtnQTRBQ29BQ0JBSTRBcExhSWh3SUhBQUZBUzdBbVVGaEFNUUFEQUE4QUF3OVpCaEFDQUEwQkJ3NEFCMWtFQVFJTEFRa0lBZ2xaQUE0QUNnNEtWUVVCQVFFSVVRd0JDQWdMQ0VJYlFEY0FBd0FQQUFNUFdRWVFBZ0FOQVFjT0FBZFpBQTRKQ2c1TkJBRUNDd0VKQ0FJSldRVUJBUXdCQ0FvQkNGa0FEZzRLVVFBS0RncEZXVUFtQWdDTWk0V0VlM2hyYW1kbFgxeFhWVkZQUlVJOE9Td3FKU01iR0JNUkRRd0FnUUtCRVE0ckFTTWlKalUwUHdFMk5DOEJKaUlQQVE0Qkl5SW1QUUUwSmlzQklnNEJIUUVVRGdJaklpNEJMd0VtSXlJUEFRWVVId0VlQXhVVUJpc0JJZzRCSFFFVUZqc0JNaFlWRkE4QkJoUWZBUll6TWo4QlBnRXpNaFlkQVJRV093RXlOajBCTkQ0Qk16SWZBUll5UHdFK0FUUW1Md0VtTlRRK0FUc0JNalk5QWpZbUJ4UUdJaVkxTVRRK0FUSWVBUU5SSGhNYkR4UU9EaTBPS2c0VEJ4RUtFeHdkRkQwTkZnMElEUkVKQnd3S0JSTU9GUlVPTFE0T0V3UUZCQUliRWg4TkZ3NGVGQjhTR3c4VERnNHREUllVRHhNR0Vna1RIQjBVUFJRZERSVU5FdzhURGlrUExBY0lDQWNURHd3VkRCOFVHZ0VidzE2RlhTcEtWMG9yQVc4Y0V4TU9FdzRwRHl3T0RoTUhDQnNTSHhRZURoY05Id2tRRFFjREJ3VVREZzRzRGlrUEVnUUlDQWtGRXh3TkZnNDhGUndjRXhRT0VnOHBEaXdPRGhNSENCc1RIaFFlSFJVZURCVU5FQklPRGl3SEV4SVRCeE1ORkEwVkRSd1VIeDRWSEU5Q1hsNUNLMG9ySzBvQUFBTUFZUCtBQTZBQ3dBQUhBQkVBR3dBM1FEUUFBQUFDQXdBQ1dRQURBQWNHQXdkWEFBWUlBUVVFQmdWWEFBUUJBUVJMQUFRRUFWRUFBUVFCUlJFUkVSRVVGQk1URUFrWEt3QWdCaEFXSURZUUpESVdGUlFHSWlZMU5CTWpOVE0xSXpVekVUTUNyUDZvOVBRQldQVCtSaUlYRnlJWGNZQWdJR0FnQXNEMC9xajA5QUZZSkJjUkVCZ1lFQkgraHhEd0VQOEFBQUFEQUdEL2dBT2dBc0FBQndBVUFDNEFTRUJGQUFVSEJnY0ZCbVlBQmdRSEJnUmtBQUFBQndVQUIxa0FCQUFEQWdRRFdnZ0JBZ0VCQWswSUFRSUNBVklBQVFJQlJna0lLaWduSmlVakdSZ05EQWdVQ1JRVEVBa1FLd0FnQmhBV0lEWVFBU0ltTkRZeUZoVVVEZ00zRGdFSEl6UStBamMrQVRVMEppTWlGeU0yTXpJV0ZSUUdBcXorcVBUMEFWajAvbWtQRXhNZEZBUUdDQXMrSUEwQkpnY09GaEVTRlRJa1lRSW1BWVl6UmhvQ3dQVCtxUFQwQVZqK2VCUWNFeE1PQmdvSUJ3UG5JQ0VxRmlFZkd4QVJKaFVqTFYxOE96SWVMd0FEQU1FQTRBTkFBV0FBQndBUUFCZ0FLMEFvQkFZQ0F3QUJBUUJOQkFZQ0F3QUFBVkVGQXdJQkFBRkZDUWdXRlJJUkRRd0lFQWtRRXhBSEVDc0FJZ1lVRmpJMk5DVWlCaFFXTWpZMEppQWlCaFFXTWpZMEFoczJKU1UySmY3Qkd5VWxOU1ltQWdBMkpTVTJKUUZnSlRZbEpUWWxKVFlsSlRZbEpUWWxKVFlBQUF3QVFQL1FBOEFDY0FBSEFBOEFGd0FmQUNjQUx3QTFBRHNBUXdCTEFGTUFXd0VFUzdBaFVGaEFZZ0FDQUFKb0FBTUJDZ0VEQ21ZQUNnZ0JDZ2hrQUFzSkJna0xCbVlBQmdRSkJnUmtBQWNGQjJrWUZ3SVVGZ0VWQVJRVlZ3QUFBQUVEQUFGWkR3RU1EZ0VOQ1F3TldBQUlBQWtMQ0FsWkV3RVFFZ0VSQlJBUldBQUVCQVZSQUFVRkN3VkNHMEJuQUFJQUFtZ0FBd0VLQVFNS1pnQUtDQUVLQ0dRQUN3a0dDUXNHWmdBR0JBa0dCR1FBQndVSGFSZ1hBaFFXQVJVQkZCVlhBQUFBQVFNQUFWa1BBUXdPQVEwSkRBMVlBQWdBQ1FzSUNWa0FCQkFGQkUwVEFSQVNBUkVGRUJGWUFBUUVCVkVBQlFRRlJWbEFMVlJVVkZ0VVcxcFpUMDVOVEVwSlNFYy9QajA4T3pvNU9ETXlNVEF0TENrb0pTUVRFeE1URXhNVEV4QVpGeXNBTWhZVUJpSW1ORFlpQmhRV01qWTBBaklXRkFZaUpqUTJJZ1lVRmpJMk5BQXlGaFFHSWlZME5pSUdGQll5TmpRWElSVWhOalFpRkJjak5UTUJNeFVqTmpVMEpnY1VGaFVoTlNFR0V6TVZJelkxTkNZbkJoVVVGaFVoTlFLekdoTVRHaE02TkNZbU5DWk5HaE1UR2hNNk5DWW1OQ2IrTXhvVEV4b1RPalFtSmpRbUh3SWgvZDhCd0FHaG9RSStvYUVCQWI4Qi9kOENJUUcvb2FFQkFiNEJBZjNmQWxBVEdoTVRHak1tTkNZbU5QM21FeG9URXhvekpqUW1KalFCRmhNYUV4TWFNeVkwSmlZMENpQUlFQkFJSVA3d0lBZ0lCQWdNQkFnRUlBZ0NLQ0FJQ0FRSUJBZ0lCQWdFSUFBSkFFUUFJQU84QXNzQUZRQW5BRE1BUkFCUUFGMEFjUUIrQUl3QkVrdXdDbEJZUUY0WEFRd0xBd29NWGdBTkFnb0xEVjRBQndBSUFRY0lXUUFCRWdFQUNRRUFXUUFKRlFFR0N3a0dXUUFERXdFQ0RRTUNXUUFMRmdFS0R3c0tXUUFQR1FFUUJROFFXUUFGRkFFRUVRVUVXUUFSRGc0UlRRQVJFUTVSR0FFT0VRNUZHMEJnRndFTUN3TUxEQU5tQUEwQ0NnSU5DbVlBQndBSUFRY0lXUUFCRWdFQUNRRUFXUUFKRlFFR0N3a0dXUUFERXdFQ0RRTUNXUUFMRmdFS0R3c0tXUUFQR1FFUUJROFFXUUFGRkFFRUVRVUVXUUFSRGc0UlRRQVJFUTVSR0FFT0VRNUZXVUJHZ0g5emNsOWVVbEUxTkNvb0dCWUNBSVNEZjR5QWpIbDRjbjV6Zm1sblhuRmZjVmhYVVYxU1hVeExSa1U5T3pSRU5VUXdMU2d6S2pNaEhoWW5HQ2NPQ3dBVkFoVWFEaXNCSVNJdUJUVTBOak1oTWg0REZSUUdCeUVpTGdJMU5EWXpJVEllQWhVVUJnY2hJaVkwTmpNaE1oWVVCZ0VpSmpVMFBnSXpNaDRCRlJRT0FpWWlEZ0VVSGdFeVBnRTBKZ01pSmpVMFBnRXlIZ0VVRGdFbklnNEJGUlFlQXpNeVBnRTFOQzREQXlJbU5UUStBVEllQVJRT0FTY2lCaFFXTWpZMU5DNEVBNXI5M1FRSEJ3WUZBd0lVRGdJakJRc0lCZ1FVRHYzZEJnMEpCaFFPQWlNSERBa0dGQTc5M1E0VUZBNENJdzRVRlAwREt6d1JHeVlWR3pBYkVCd21DeE1QQ1FrUEV4QUpDUmtyUEJ3dk56QWJHekFiQ2c4SkF3WUpDZ1lKRUFrRUJnZ0xCU3M4SEM4M01Cc2JNQnNPRkJRY0ZBTUVCZ2dKQWtJQ0F3VUdCd2NFRGhRREJna0tCZzRVN3dZSkRBY09GQVVKRFFjT0ZPOFVIUlFVSFJRQm1qd3FGU1liRVJ3dkhCVWxIQkNJQ1E4VEVBa0pFQk1QL3BJOEtod3ZIQnd2TnpBYmlBa1BDZ1VMQ0FZRUNSQUpCZ29KQmdQK2lUd3FIQzhjSEM4M01CdUpGQjBVRkE0RkNRY0hCQU1BQXdCQS8rRUR2d0puQUFNQUJ3QUxBQ1pBSXdBQ0FBTUFBZ05YQUFBQUFRUUFBVmNBQkFRRlR3QUZCUXNGUWhFUkVSRVJFQVlVS3hNaEZTRVJJUlVoRVNFVklVQURmL3lCQTMvOGdRTi8vSUVCUERBQld6RDkyUzhBQUFBRUFCZi9pQVBwQXJnQUJRQWlBRGtBUHdBOVFEby9QajA4T3pvNUxTd2pJaUVmSGhRVEJnVUVBd0lCQUJjQ0FRRkFBQUFBQVFJQUFWa0FBZ01EQWswQUFnSURVUUFEQWdORkx4NFhMUVFTS3dFSEp3Y1hOeWN3UFFFdUF5TWlEZ0lIRno0Qk1oNEJGeFVVQmdjWE5qVXhCdzRCSWk0Qk5UUTJOeWNHSFFNZUFqTXlOamNCQnhjM0Z6Y0QwMU5WRldwcFVRRkJiWmRTTjJsY1RSc2NNckRNckdVQkFRRWdBbEF5c015dFpRRUJJQUlDYjdwdGJzQTIvUnhwRmxOVEZnRWdVMU1XYW1rWUFRSlRsV3hBSFRaTk1CQlpaMlNzWmc0R0RnY0VGUmE0V1dka3JXWUtGQW9FRlJZQ0JBTnN1R3R3WUFGSWFSZFRVeGNBQUFBQkFWLy9ud0tnQXFBQVNRQkxRRWc2QVFBRlJ4OEtBd0lEQWtBQUJRQUZhQWNCQUFNQWFBQURBZ05vQUFJQUJBRUNCRmtBQVFZR0FVMEFBUUVHVWdBR0FRWkdBUUJEUVRjMkxTc2xJeDBiQ0FjQVNRRkpDQTRyQVNJT0FSVVJGQVlpSmpjd0VUUTJOellYSGdFVkVSUU9BZ2NHSXlJbU5UQVJOQ1lqSWc0QkZRTVVGak1XTno0Q05STTBKeVlpQndZSE1CMERCaFl6RmpjMk5SRTJKZ0tKQmdzR1JWdEZBUklRSXlNUUVRSUNCQUlHQ0FrTkRRa0hDZ1lCS1J3ZEZBWUpCQUU0R3o4YU9BRUJZRUJETGk4QkRRSHFCZ3NHL25vOVFVTTlBZFlYSXdrVkZRb2pGLzQvQmdvSUNBTUhGaE1CV2dvTkJnc0cvcWNxTHdFWkNCUVhEUUhCU3lJUUR5RkxlSTE5VkZGZUFTOHdUd0dGQ2c0QUF3QVQvL1lEN1FKSkFCY0FJd0F4QUpwTHNBOVFXRUFpQndFRUFnVUNCRjRBQlFNREJWd0FBUVlCQWdRQkFsa0FBd01BVWdBQUFBc0FRaHRMc0JoUVdFQWtCd0VFQWdVQ0JBVm1BQVVEQWdVRFpBQUJCZ0VDQkFFQ1dRQURBd0JTQUFBQUN3QkNHMEFwQndFRUFnVUNCQVZtQUFVREFnVURaQUFCQmdFQ0JBRUNXUUFEQUFBRFRRQURBd0JTQUFBREFFWlpXVUFVSlNRWkdDc3FKREVsTVNBZkdDTVpJeWttQ0JBckFSUU9CQ01pTGdNMFBnTXpNaGNXRnhZbElnNENGUlFXTWpZMEpnY2lEZ0VWRkJZeU5qVTBMZ0lEN1NFOFdtcUdSbEdkZFZzdkwxdDJuRkhJbldNZENQNFRNRmhBSll2Rmk0dGpLVVlvV0g1WUdDZzRBU0FZUGtNL014OHJSRkJOUEUxUVJDcHdSMHNXNGlaQ1dqRmxqbzdLamxncFNDcEFXMXRBSURrcUdBQUFBUURBQUdBRFFBSGdBQVVBQnJNQ0FBRW1LeVUzQ1FFWEFRTVpKLzdBL3NBbkFSbGdLUUZYL3FrcEFTMEFBQUFBQVFEQUFHQURRQUhnQUFVQUJyTUNBQUVtS3dFWENRRTNBUU1aSi83QS9zQW5BUmtCNENuK3FRRlhLZjdUQUFBQUFRRkEvK0FDd0FKZ0FBVUFCck1EQVFFbUt3RW5DUUUzQVFMQUtmNnBBVmNwL3RNQ09TZit3UDdBSndFWkFBQUFBUUZBLytBQ3dBSmdBQVVBQnJNREFRRW1Ld0UzQ1FFbkFRRkFLUUZYL3FrcEFTMENPU2Yrd1A3QUp3RVpBQUFBQVFGQS8rQUN3QUpnQUNFQUpVQWlHUmdUQ3dRRkFBSUJRQUFBQWdFQ0FBRm1BQUlDQVZFQUFRRUxBVUlzRlJFREVTc0JCaUl2QVJFVUJpSW1OUkVIQmljbU5EYzJOell6TWhZZkFSNEJId0VlQVJVVUFyc0VEUVdWQ1E0SmxRd0tCUVd1QWdZRkF3VUJBZ0ZZTENzREFnR2tCQVNGL2NjSENRa0hBam1FQ3dvRkRnU2ZBUVVDQVFJQlVDZ25BZ1lEQndBQUFBRUJRUC9nQXNBQ1lBQWdBQ1JBSVJnVEN3UUVBZ0FCUUFBQUFRSUJBQUptQUFFQkFsRUFBZ0lMQWtJc0ZSRURFU3NsSmlJUEFSRTBKaUlHRlJFbkpnY0dGQmNXRnhZek1qWTNQZ0UvQVQ0Qk5UUUN1d1FOQlpVSkRnbVZEQW9GQmE0Q0JnVUVCZ0VCV0N3ckF3S2NCQVNGQWprSENRa0gvY2VFQ3dvRkRnU2ZBUVVEQWdGUUtDY0NCZ01IQUFBQUFBRUF3QUJnQTBBQjRBQWRBQ3BBSnhZU0FnQUJBVUFBQWdFQ2FBQURBQU5wQUFFQUFBRk5BQUVCQUZJQUFBRUFSaHdVSXlNRUVpc2xOaThCSVRJMk5DWWpJVGMySnlZaUJ3WUhCaFVVRng0Qkh3RVdNellCZkFvS2hRSTVCd2tKQi8zSGhBc0tCUTRFbndFRkJRRlFLQ2NFQndkbENneVZDUTRKbFF3S0JRV3VBZ1lGQndRQldDd3JCUUVBQVFEQUFHQURRQUhoQUI0QUpVQWlGeE1DQUFFQlFBQUNBQUpwQUFFQUFBRk5BQUVCQUZFQUFBRUFSUjBjSXlNREVDc2xKajhCSVNJbU5EWXpJU2NtTno0QkZoY1dGeFlWRkFjT0FROEJCaU1tQW9RS0NvWDl4d2NKQ1FjQ09ZUUxDZ01KQ0FPZkFRVUZBVkFvSndRSEIyVUtESlVKRGdtVkRBb0RBd0lFcmdJR0JRY0VBVmdzS3dVQkFBQUJBUjcvcHdMYUFuOEFCZ0FXUUJNQUFRQTlBQUVBQVdnQ0FRQUFYeEVSRVFNUkt3VVRJeEVqRVNNQi9ONlJtNUJaQVNnQnNQNVFBQUVBWC85N0E2RUN2UUFMQUFBSkFnY0pBUmNKQVRjSkFRTnQvcEwrbERRQmJmNlROQUZzQVc0MC9wRUJid0s5L3BJQmJEUCtsUDZVTXdGcy9wSXpBVzRCYlFBQUJBQlYvM0VEcWdMSUFCTUFKd0ErQUVRQUFBVUdMZ0UwTno0Qk5DWW5KalErQVJjZUFSUUdKdzRCSmpRM1BnRTBKaWNtTkRZV0Z4NEJGQVlESnlNaUppY1JQZ0UzTXpjK0FSNEJGUkVVRGdFbUp6Y1JCeU1STXdNd0NCZ1FDVEkyTlRJSkVCZ0pPajQvckFnWUVRZ1lHUmdYQ0JFWUNCOGdJdUhJcHhjaEFRRWhGNmZGRGg4ZUVCQWJIdzRmMUxxNEZBa0JFaGdKTklhWGhUUUpHQklCQ1R5Y3NKeFNDQUVTRndrWlBrVStHUWtYRVFFSUlWTmNVLzdnZ2lFWUFia1hJUUdUQ2dNUEd4RDlIQkFhRHdFSU1BTGtuLzVIQUFBQUJRQkEvM3dEd0FLOEFBc0FId0F6QUVnQVhRQUFKU0VpSmpRMk15RXlGaFFHQXlNaUpqUTJPd0V5TmowQk5EWXlGaDBCRGdFRkl5NEJKelUwTmpJV0hRRVVGanNCTWhZVUJnTWlKajBCUGdFM016SVdGQVlyQVNJR0hRRVVCaUVpSmowQk5DWXJBU0ltTkRZN0FSNEJGeFVVQmdPZy9NQU9FaElPQTBBT0VoSnV3QTRTRWc3QURoSVNIQklCTnYzM29DazJBUkljRWhJT29BNFNFdTRPRWdFMkthQU9FaElPb0E0U0VnTHlEaElTRHNBT0VoSU93Q2syQVJMOEVod1NFaHdTL29BU0hCSVNEcUFPRWhJT29DazJBUUUyS2FBT0VoSU9vQTRTRWh3U0FpQVNEcUFwTmdFU0hCSVNEcUFPRWhJT29BNFNFaHdTQVRZcG9BNFNBQUFBREFDV0FBRUFBQUFBQUFFQUNBQVNBQUVBQUFBQUFBSUFBQUFoQUFFQUFBQUFBQU1BRmdCVUFBRUFBQUFBQUFRQUNRQ0RBQUVBQUFBQUFBVUFNQUR2QUFFQUFBQUFBQVlBQ1FFMEFBTUFBUVFKQUFFQUVBQUFBQU1BQVFRSkFBSUFCQUFiQUFNQUFRUUpBQU1BTUFBaUFBTUFBUVFKQUFRQUZnQnJBQU1BQVFRSkFBVUFZQUNOQUFNQUFRUUpBQVlBRWdFZ0FIVUFiZ0JwQUdrQVl3QnZBRzRBY3dBQWRXNXBhV052Ym5NQVhqaUp4QUFBQUFCMUFHNEFhUUJwQUdNQWJ3QnVBSE1BSUY0NGljUUFPZ0JXQUdVQWNnQnpBR2tBYndCdUFDQUFNUUF1QURBQU1BQUFkVzVwYVdOdmJuTWdPbFpsY25OcGIyNGdNUzR3TUFBQWRRQnVBR2tBYVFCakFHOEFiZ0J6QUNCZU9JbkVBQUIxYm1scFkyOXVjeUFBQUZZQVpRQnlBSE1BYVFCdkFHNEFJQUF4QUM0QU1BQXdBQ0FBVXdCbEFIQUFkQUJsQUcwQVlnQmxBSElBSUFBeUFEQUFMQUFnQURJQU1BQXhBRGtBTEFBZ0FHa0FiZ0JwQUhRQWFRQmhBR3dBSUFCeUFHVUFiQUJsQUdFQWN3QmxBQUJXWlhKemFXOXVJREV1TURBZ1UyVndkR1Z0WW1WeUlESXdMQ0F5TURFNUxDQnBibWwwYVdGc0lISmxiR1ZoYzJVQUFIVUFiZ0JwQUdrQVl3QnZBRzRBY3dBdEFBQjFibWxwWTI5dWN5MEFBQUlBQUFBQUFBRC9Id0F5QUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQVlBQUFBQUVBQWdCYkFRSUJBd0VFQVFVQkJnRUhBUWdCQ1FFS0FRc0JEQUVOQVE0QkR3RVFBUkVCRWdFVEFSUUJGUUVXQVJjQkdBRVpBUm9CR3dFY0FSMEJIZ0VmQVNBQklRRWlBU01CSkFFbEFTWUJKd0VvQVNrQktnRXJBU3dCTFFFdUFTOEJNQUV4QVRJQk13RTBBVFVCTmdFM0FUZ0JPUUU2QVRzQlBBRTlBVDRCUHdGQUFVRUJRZ0ZEQVVRQlJRRkdBVWNCU0FGSkFVb0JTd0ZNQVUwQlRnRlBBVkFCVVFGU0FWTUJWQUZWQVZZQlZ3RllBVmtCV2dGYkFWd0JYUWQxYm1sRk1UQXdCM1Z1YVVVeE1ERUhkVzVwUlRFd01nZDFibWxGTVRNd0IzVnVhVVV4TXpFSGRXNXBSVEV6TWdkMWJtbEZNakF3QjNWdWFVVXlNREVIZFc1cFJUSXdNZ2QxYm1sRk1qQXpCM1Z1YVVVeU16QUhkVzVwUlRJek1RZDFibWxGTWpNeUIzVnVhVVV5TXpNSGRXNXBSVEkyTUFkMWJtbEZNall4QjNWdWFVVXlOaklIZFc1cFJUSTJNd2QxYm1sRk1qWTBCM1Z1YVVVek1EQUhkVzVwUlRNd01RZDFibWxGTXpBeUIzVnVhVVV6TURNSGRXNXBSVE16TWdkMWJtbEZNek16QjNWdWFVVXpOakFIZFc1cFJUTTJNd2QxYm1sRk16WTBCM1Z1YVVVME1EQUhkVzVwUlRRd01RZDFibWxGTkRBeUIzVnVhVVUwTURNSGRXNXBSVFF3TkFkMWJtbEZOREExQjNWdWFVVTBNRFlIZFc1cFJUUXdOd2QxYm1sRk5EQTRCM1Z1YVVVME1Ea0hkVzVwUlRReE1BZDFibWxGTkRFeEIzVnVhVVUwTVRNSGRXNXBSVFF6TkFkMWJtbEZORE0zQjNWdWFVVTBNemdIZFc1cFJUUXpPUWQxYm1sRk5EUXdCM1Z1YVVVME5ERUhkVzVwUlRRME1nZDFibWxGTkRRekIzVnVhVVUwTmpBSGRXNXBSVFEyTVFkMWJtbEZORFl5QjNWdWFVVTBOak1IZFc1cFJUUTJOQWQxYm1sRk5EWTFCM1Z1YVVVME5qWUhkVzVwUlRRMk9BZDFibWxGTkRjd0IzVnVhVVUwTnpFSGRXNXBSVFEzTWdkMWJtbEZOVEF3QjNWdWFVVTFNREVIZFc1cFJUVXdNZ2QxYm1sRk5UQXpCM1Z1YVVVMU1EUUhkVzVwUlRVd05RZDFibWxGTlRBMkIzVnVhVVUxTURjSGRXNXBSVFV3T0FkMWJtbEZOVE13QjNWdWFVVTFNeklIZFc1cFJUVXpOQWQxYm1sRk5UTTFCM1Z1YVVVMU16Y0hkVzVwUlRVMk1BZDFibWxGTlRZeUIzVnVhVVUxTmpNSGRXNXBSVFUyTlFkMWJtbEZOVFkzQjNWdWFVVTFOamdIZFc1cFJUVTRNQWQxYm1sRk5UZ3hCM1Z1YVVVMU9ESUhkVzVwUlRVNE13ZDFibWxGTlRnMEIzVnVhVVUxT0RVSGRXNXBSVFU0TmdkMWJtbEZOVGczQjNWdWFVVTFPRGdIZFc1cFJUVTRPUVJGZFhKdkIzVnVhVVUyTVRJQUFBRUFBZi8vQUE4QUFRQUFBQXdBQUFBV0FBQUFBZ0FCQUFFQVh3QUJBQVFBQUFBQ0FBQUFBQUFBQUFFQUFBQUExYVFuQ0FBQUFBRFpxbHU1QUFBQUFObXFYQWs9JylcIlxyXG5cdH0pO1xyXG5cdC8vICNlbmRpZlxyXG5cdGV4cG9ydCBkZWZhdWx0IHtcclxuXHRcdG5hbWU6ICdVbmlJY29ucycsXHJcblx0XHRwcm9wczoge1xyXG5cdFx0XHR0eXBlOiB7XHJcblx0XHRcdFx0dHlwZTogU3RyaW5nLFxyXG5cdFx0XHRcdGRlZmF1bHQ6ICcnXHJcblx0XHRcdH0sXHJcblx0XHRcdGNvbG9yOiB7XHJcblx0XHRcdFx0dHlwZTogU3RyaW5nLFxyXG5cdFx0XHRcdGRlZmF1bHQ6ICcjMzMzMzMzJ1xyXG5cdFx0XHR9LFxyXG5cdFx0XHRzaXplOiB7XHJcblx0XHRcdFx0dHlwZTogW051bWJlciwgU3RyaW5nXSxcclxuXHRcdFx0XHRkZWZhdWx0OiAxNlxyXG5cdFx0XHR9XHJcblx0XHR9LFxyXG5cdFx0ZGF0YSgpIHtcclxuXHRcdFx0cmV0dXJuIHtcclxuXHRcdFx0XHRpY29uczogaWNvbnNcclxuXHRcdFx0fVxyXG5cdFx0fSxcclxuXHRcdG1ldGhvZHM6IHtcclxuXHRcdFx0X29uQ2xpY2soKSB7XHJcblx0XHRcdFx0dGhpcy4kZW1pdCgnY2xpY2snKVxyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0fVxyXG48L3NjcmlwdD5cclxuXHJcbjxzdHlsZSBzY29wZWQ+XHJcblx0LyogI2lmbmRlZiBBUFAtTlZVRSAqL1xyXG5cdEBmb250LWZhY2Uge1xyXG5cdFx0Zm9udC1mYW1pbHk6IHVuaWljb25zO1xyXG5cdFx0c3JjOiB1cmwoJ2RhdGE6Zm9udC90cnVldHlwZTtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxBQUVBQUFBUUFRQUFCQUFBUmtaVVRZajQzc3NBQUhiWUFBQUFIRWRFUlVZQUp3Qm1BQUIydUFBQUFCNVBVeTh5V1dsY3FnQUFBWWdBQUFCZ1kyMWhjR0JoYkJVQUFBSzBBQUFDUW1OMmRDQU1wZjQwQUFBUEtBQUFBQ1JtY0dkdE1QZWVsUUFBQlBnQUFBbVdaMkZ6Y0FBQUFCQUFBSGF3QUFBQUNHZHNlV1pzZmdmWkFBQVFFQUFBWVF4b1pXRmtGb2Y2L3dBQUFRd0FBQUEyYUdobFlRZCtBeVlBQUFGRUFBQUFKR2h0ZEhna2VCdVlBQUFCNkFBQUFNcHNiMk5oUEVrbkxnQUFEMHdBQUFEQ2JXRjRjQUlqQTNJQUFBRm9BQUFBSUc1aGJXWFdPVHRVQUFCeEhBQUFBZFJ3YjNOMFRKRTRpZ0FBY3ZBQUFBTy9jSEpsY0tXNXZtWUFBQTZRQUFBQWxRQUJBQUFBQVFBQUNWL09PVjhQUFBVQUh3UUFBQUFBQU5tcVc3a0FBQUFBMmFwY0NRQUEveUFFQUFNZ0FBQUFDQUFDQUFBQUFBQUFBQUVBQUFNZy95QUFYQVFBQUFBQUFBUUFBQUVBQUFBQUFBQUFBQUFBQUFBQUFBQUZBQUVBQUFCZ0FYb0FEQUFBQUFBQUFnQkdBRlFBYkFBQUFRUUJvZ0FBQUFBQUJBUC9BWkFBQmdBQUFwa0N6QUFBQUk4Q21RTE1BQUFCNndBekFRa0FBQUlBQmdNQUFBQUFBQUFBQUFBQkVBQUFBQUFBQUFBQUFBQUFVRVpGUkFHQUFCM21FZ01zL3l3QVhBTWdBT0FBQUFBQkFBQUFBQU1ZQXMwQUFBQWdBQUVCZGdBaUFBQUFBQUZWQUFBRDZRQXNCQUFBWUFEQUFNQUFZQURBQU1BQW9BQ0FBSUFBWUFDZ0FJQUFnQUJnQUxNQVFBQkFBQVVBVndCZUFJQUJBQUQwQVFBQTlBRUFBRUFBVmdDZ0FPQUF3QURBQUZFQWZnQ0FBR0FBUUFCZ0FHQUFZQUErQUZFQVlBQkFBR0FBWUFBMEFHQUFQZ0ZBQVFBQWdBQkFBQUFBSlFDQkFRQUJRQUZBQVN3QWdBQmdBSUFBd0FCZ0FHQUF3QURCQVFBQWdBQ0FBR0FBWUFEQkFFQUFSQUJBQUJjQlh3QVRBTUFBd0FGQUFVQUJRQUZBQU1BQXdBRWVBRjhBVlFCQUFBQUFBQUFEQUFBQUF3QUFBQndBQVFBQUFBQUJQQUFEQUFFQUFBQWNBQVFCSUFBQUFFUUFRQUFGQUFRQUFBQWRBSGpoQXVFeTRnUGlNK0prNHdQak0rTmc0MlRrQ2VRUjVCUGtOT1E1NUVQa1p1Um81SExsQ09VdzVUTGxOZVUzNVdEbFkrVmw1V2psaWVXUTVoTC8vd0FBQUFBQUhRQjQ0UURoTU9JQTRqRGlZT01BNHpMallPTmo1QURrRU9RVDVEVGtOK1JBNUdEa2FPUnc1UURsTU9VeTVUVGxOK1ZnNVdMbFplVm41WURsa09ZUy8vOEFBZi9rLzRzZkJCN1hIZ29kM2gyeUhSY2M2Unk5SExzY0lCd2FIQmtiK1J2M0cvRWIxUnZVRzgwYlFCc1pHeGdiRnhzV0d1NGE3UnJzR3VzYTFCck9HazBBQVFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFCQmdBQUFRQUFBQUFBQUFBQkFnQUFBQUlBQUFBQUFBQUFBQUFBQUFBQUFBQUJBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBd0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBc0FBc3NDQmdaaTJ3QVN3Z1pDQ3d3RkN3QkNaYXNBUkZXMWdoSXlFYmlsZ2dzRkJRV0NHd1FGa2JJTEE0VUZnaHNEaFpXU0N3Q2tWaFpMQW9VRmdoc0FwRklMQXdVRmdoc0RCWkd5Q3d3RkJZSUdZZ2lvcGhJTEFLVUZoZ0d5Q3dJRkJZSWJBS1lCc2dzRFpRV0NHd05tQWJZRmxaV1J1d0FDdFpXU093QUZCWVpWbFpMYkFDTENCRklMQUVKV0ZrSUxBRlExQllzQVVqUXJBR0kwSWJJU0Zac0FGZ0xiQURMQ01oSXlFZ1pMRUZZa0lnc0FZalFySUtBQUlxSVNDd0JrTWdpaUNLc0FBcnNUQUZKWXBSV0dCUUcyRlNXVmdqV1NFZ3NFQlRXTEFBS3hzaHNFQlpJN0FBVUZobFdTMndCQ3l3Q0NOQ3NBY2pRckFBSTBLd0FFT3dCME5SV0xBSVF5dXlBQUVBUTJCQ3NCWmxIRmt0c0FVc3NBQkRJRVVnc0FKRlk3QUJSV0pnUkMyd0JpeXdBRU1nUlNDd0FDc2pzUVFFSldBZ1JZb2pZU0JrSUxBZ1VGZ2hzQUFic0RCUVdMQWdHN0JBV1ZranNBQlFXR1Zac0FNbEkyRkVSQzJ3Qnl5eEJRVkZzQUZoUkMyd0NDeXdBV0FnSUxBS1EwcXdBRkJZSUxBS0kwSlpzQXREU3JBQVVsZ2dzQXNqUWxrdHNBa3NJTGdFQUdJZ3VBUUFZNG9qWWJBTVEyQWdpbUFnc0F3alFpTXRzQW9zUzFSWXNRY0JSRmtrc0ExbEkzZ3RzQXNzUzFGWVMxTllzUWNCUkZrYklWa2tzQk5sSTNndHNBd3NzUUFOUTFWWXNRME5RN0FCWVVLd0NTdFpzQUJEc0FJbFFySUFBUUJEWUVLeENnSWxRckVMQWlWQ3NBRVdJeUN3QXlWUVdMQUFRN0FFSlVLS2lpQ0tJMkd3Q0NvaEk3QUJZU0NLSTJHd0NDb2hHN0FBUTdBQ0pVS3dBaVZoc0FncUlWbXdDa05Ic0F0RFIyQ3dnR0lnc0FKRlk3QUJSV0pnc1FBQUV5TkVzQUZEc0FBK3NnRUJBVU5nUWkyd0RTeXhBQVZGVkZnQXNBMGpRaUJnc0FGaHRRNE9BUUFNQUVKQ2ltQ3hEQVFyc0dzckd5SlpMYkFPTExFQURTc3RzQThzc1FFTkt5MndFQ3l4QWcwckxiQVJMTEVERFNzdHNCSXNzUVFOS3kyd0V5eXhCUTByTGJBVUxMRUdEU3N0c0JVc3NRY05LeTJ3Rml5eENBMHJMYkFYTExFSkRTc3RzQmdzc0FjcnNRQUZSVlJZQUxBTkkwSWdZTEFCWWJVT0RnRUFEQUJDUW9wZ3NRd0VLN0JyS3hzaVdTMndHU3l4QUJnckxiQWFMTEVCR0NzdHNCc3NzUUlZS3kyd0hDeXhBeGdyTGJBZExMRUVHQ3N0c0I0c3NRVVlLeTJ3SHl5eEJoZ3JMYkFnTExFSEdDc3RzQ0Vzc1FnWUt5MndJaXl4Q1JnckxiQWpMQ0Jnc0E1Z0lFTWpzQUZnUTdBQ0piQUNKVkZZSXlBOHNBRmdJN0FTWlJ3YklTRlpMYkFrTExBaks3QWpLaTJ3SlN3Z0lFY2dJTEFDUldPd0FVVmlZQ05oT0NNZ2lsVllJRWNnSUxBQ1JXT3dBVVZpWUNOaE9Cc2hXUzJ3Sml5eEFBVkZWRmdBc0FFV3NDVXFzQUVWTUJzaVdTMndKeXl3Qnl1eEFBVkZWRmdBc0FFV3NDVXFzQUVWTUJzaVdTMndLQ3dnTmJBQllDMndLU3dBc0FORlk3QUJSV0t3QUN1d0FrVmpzQUZGWXJBQUs3QUFGclFBQUFBQUFFUStJeml4S0FFVktpMndLaXdnUENCSElMQUNSV093QVVWaVlMQUFRMkU0TGJBckxDNFhQQzJ3TEN3Z1BDQkhJTEFDUldPd0FVVmlZTEFBUTJHd0FVTmpPQzJ3TFN5eEFnQVdKU0F1SUVld0FDTkNzQUlsU1lxS1J5TkhJMkVnV0dJYklWbXdBU05Dc2l3QkFSVVVLaTJ3TGl5d0FCYXdCQ1d3QkNWSEkwY2pZYkFHUlN0bGlpNGpJQ0E4aWpndHNDOHNzQUFXc0FRbHNBUWxJQzVISTBjallTQ3dCQ05Dc0FaRkt5Q3dZRkJZSUxCQVVWaXpBaUFESUJ1ekFpWURHbGxDUWlNZ3NBbERJSW9qUnlOSEkyRWpSbUN3QkVPd2dHSmdJTEFBS3lDS2ltRWdzQUpEWUdRanNBTkRZV1JRV0xBQ1EyRWJzQU5EWUZtd0F5V3dnR0poSXlBZ3NBUW1JMFpoT0JzanNBbERSckFDSmJBSlEwY2pSeU5oWUNDd0JFT3dnR0pnSXlDd0FDc2pzQVJEWUxBQUs3QUZKV0d3QlNXd2dHS3dCQ1poSUxBRUpXQmtJN0FESldCa1VGZ2hHeU1oV1NNZ0lMQUVKaU5HWVRoWkxiQXdMTEFBRmlBZ0lMQUZKaUF1UnlOSEkyRWpQRGd0c0RFc3NBQVdJTEFKSTBJZ0lDQkdJMGV3QUNzallUZ3RzRElzc0FBV3NBTWxzQUlsUnlOSEkyR3dBRlJZTGlBOEl5RWJzQUlsc0FJbFJ5TkhJMkVnc0FVbHNBUWxSeU5ISTJHd0JpV3dCU1ZKc0FJbFliQUJSV01qSUZoaUd5RlpZN0FCUldKZ0l5NGpJQ0E4aWpnaklWa3RzRE1zc0FBV0lMQUpReUF1UnlOSEkyRWdZTEFnWUdhd2dHSWpJQ0E4aWpndHNEUXNJeUF1UnJBQ0pVWlNXQ0E4V1M2eEpBRVVLeTJ3TlN3aklDNUdzQUlsUmxCWUlEeFpMckVrQVJRckxiQTJMQ01nTGthd0FpVkdVbGdnUEZraklDNUdzQUlsUmxCWUlEeFpMckVrQVJRckxiQTNMTEF1S3lNZ0xrYXdBaVZHVWxnZ1BGa3VzU1FCRkNzdHNEZ3NzQzhyaWlBZ1BMQUVJMEtLT0NNZ0xrYXdBaVZHVWxnZ1BGa3VzU1FCRkN1d0JFTXVzQ1FyTGJBNUxMQUFGckFFSmJBRUppQXVSeU5ISTJHd0JrVXJJeUE4SUM0ak9MRWtBUlFyTGJBNkxMRUpCQ1ZDc0FBV3NBUWxzQVFsSUM1SEkwY2pZU0N3QkNOQ3NBWkZLeUN3WUZCWUlMQkFVVml6QWlBRElCdXpBaVlER2xsQ1FpTWdSN0FFUTdDQVltQWdzQUFySUlxS1lTQ3dBa05nWkNPd0EwTmhaRkJZc0FKRFlSdXdBME5nV2JBREpiQ0FZbUd3QWlWR1lUZ2pJRHdqT0JzaElDQkdJMGV3QUNzallUZ2hXYkVrQVJRckxiQTdMTEF1S3k2eEpBRVVLeTJ3UEN5d0x5c2hJeUFnUExBRUkwSWpPTEVrQVJRcnNBUkRMckFrS3kyd1BTeXdBQlVnUjdBQUkwS3lBQUVCRlJRVExyQXFLaTJ3UGl5d0FCVWdSN0FBSTBLeUFBRUJGUlFUTHJBcUtpMndQeXl4QUFFVUU3QXJLaTJ3UUN5d0xTb3RzRUVzc0FBV1JTTWdMaUJHaWlOaE9MRWtBUlFyTGJCQ0xMQUpJMEt3UVNzdHNFTXNzZ0FBT2lzdHNFUXNzZ0FCT2lzdHNFVXNzZ0VBT2lzdHNFWXNzZ0VCT2lzdHNFY3NzZ0FBT3lzdHNFZ3NzZ0FCT3lzdHNFa3NzZ0VBT3lzdHNFb3NzZ0VCT3lzdHNFc3NzZ0FBTnlzdHNFd3NzZ0FCTnlzdHNFMHNzZ0VBTnlzdHNFNHNzZ0VCTnlzdHNFOHNzZ0FBT1NzdHNGQXNzZ0FCT1NzdHNGRXNzZ0VBT1NzdHNGSXNzZ0VCT1NzdHNGTXNzZ0FBUENzdHNGUXNzZ0FCUENzdHNGVXNzZ0VBUENzdHNGWXNzZ0VCUENzdHNGY3NzZ0FBT0NzdHNGZ3NzZ0FCT0NzdHNGa3NzZ0VBT0NzdHNGb3NzZ0VCT0NzdHNGc3NzREFyTHJFa0FSUXJMYkJjTExBd0s3QTBLeTJ3WFN5d01DdXdOU3N0c0Y0c3NBQVdzREFyc0RZckxiQmZMTEF4S3k2eEpBRVVLeTJ3WUN5d01TdXdOQ3N0c0dFc3NERXJzRFVyTGJCaUxMQXhLN0EyS3kyd1l5eXdNaXN1c1NRQkZDc3RzR1Fzc0RJcnNEUXJMYkJsTExBeUs3QTFLeTJ3Wml5d01pdXdOaXN0c0djc3NETXJMckVrQVJRckxiQm9MTEF6SzdBMEt5MndhU3l3TXl1d05Tc3RzR29zc0RNcnNEWXJMYkJyTEN1d0NHV3dBeVJRZUxBQkZUQXRBQUJMdUFESVVsaXhBUUdPV2JrSUFBZ0FZeUN3QVNORUlMQURJM0N3RGtVZ0lFdTRBQTVSUzdBR1UxcFlzRFFic0NoWllHWWdpbFZZc0FJbFliQUJSV01qWXJBQ0kwU3pDZ2tGQkN1ekNnc0ZCQ3V6RGc4RkJDdFpzZ1FvQ1VWU1JMTUtEUVlFSzdFR0FVU3hKQUdJVVZpd1FJaFlzUVlEUkxFbUFZaFJXTGdFQUloWXNRWUJSRmxaV1ZtNEFmK0ZzQVNOc1FVQVJBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFNZ0F5QXhqLzRRTWcveUFER1AvaEF5RC9JQUFBQUNnQUtBQW9BV1FDQ2dPMEJZb0dEZ2FpQjRnSWdBaklDWFlKOEFwNkNyUUxHQXRzRFBnTjNBNTBEMXdSeWhJeUV6QVRuaFFhRkhJVXZCVkFGZUlYSEJkOEdFb1lrQmpXR1RJWmpCbm9HbUFhb2hzQ0cxUWJsQnZxSENnY2VoeWlIT0FkREIxcUhhUWQ2aDRJSGtZZW5oN1lIemdnbWlEa0lRd2hKQ0U4SVZ3aHZpSWNKR1lraUNUMEpZWW1BQ1o0SjNZbnRpakVLUTRwZWltNktzUXNFQ3crTEx3dFNDM2VMZll1RGk0bUxqNHVpQzdRTHhZdlhDOTRMNW93QmpDR0FBQUFBZ0FpQUFBQk1nS3FBQU1BQndBcFFDWUFBQUFEQWdBRFZ3QUNBUUVDU3dBQ0FnRlBCQUVCQWdGREFBQUhCZ1VFQUFNQUF4RUZEeXN6RVNFUkp6TVJJeUlCRU83TXpBS3EvVllpQW1ZQUFBQUZBQ3ovNFFPOEF4Z0FGZ0F3QURvQVVnQmVBWGRMc0JOUVdFQktBZ0VBRFE0TkFBNW1BQU1PQVE0RFhnQUJDQWdCWEJBQkNRZ0tCZ2xlRVFFTUJnUUdERjRBQ3dRTGFROEJDQUFHREFnR1dBQUtCd1VDQkFzS0JGa1NBUTRPRFZFQURRMEtEa0liUzdBWFVGaEFTd0lCQUEwT0RRQU9aZ0FERGdFT0ExNEFBUWdJQVZ3UUFRa0lDZ2dKQ21ZUkFRd0dCQVlNWGdBTEJBdHBEd0VJQUFZTUNBWllBQW9IQlFJRUN3b0VXUklCRGc0TlVRQU5EUW9PUWh0THNCaFFXRUJNQWdFQURRNE5BQTVtQUFNT0FRNERYZ0FCQ0FnQlhCQUJDUWdLQ0FrS1poRUJEQVlFQmd3RVpnQUxCQXRwRHdFSUFBWU1DQVpZQUFvSEJRSUVDd29FV1JJQkRnNE5VUUFORFFvT1FodEFUZ0lCQUEwT0RRQU9aZ0FERGdFT0F3Rm1BQUVJRGdFSVpCQUJDUWdLQ0FrS1poRUJEQVlFQmd3RVpnQUxCQXRwRHdFSUFBWU1DQVpZQUFvSEJRSUVDd29FV1JJQkRnNE5VUUFORFFvT1FsbFpXVUFvVTFNN096SXhGeGRUWGxOZVcxZzdVanRTUzBNM05URTZNam9YTUJjd1VSRXhHQkVvRlVBVEZpc0JCaXNCSWc0Q0hRRWhOVFFtTlRRdUFpc0JGU0VGRlJRV0ZBNENJd1ltS3dFbklRY3JBU0luSWk0Q1BRRVhJZ1lVRmpNeU5qUW1Gd1lIRGdNZUFUc0dNalluTGdFbkppY0JOVFErQWpzQk1oWWRBUUVaR3hwVEVpVWNFZ09RQVFvWUp4NkYva29Db2dFVkh5TU9EaDhPSUMzK1NTd2RJaFFaR1NBVENIY01FaElNRFJJU2pBZ0dCUXNFQWdRUERpVkRVVkJBSkJjV0NRVUpCUVVHL3FRRkR4b1Z2QjhwQWg4QkRCa25Ha3dwRUJ3RURTQWJFbUdJTkJjNk9pVVhDUUVCZ0lBQkV4c2dEcWMvRVJvUkVSb1JmQm9XRXlRT0VBMElHQm9OSXhFVEZBRjM1QXNZRXd3ZEp1TUFBQUlBWVArQUE2QUN3QUFIQUZjQVNFQkZTa2xET1RnMkp5WWNHUmNXREFRRFR3OENBUVFDUUFBRUF3RURCQUZtQUFBRkFRSURBQUpaQUFNRUFRTk5BQU1EQVZFQUFRTUJSUWtJVEVzd0xRaFhDVmNURUFZUUt3QWdCaEFXSURZUUpUSWVBaFVVQnlZbkxnRTFORGMxTmo4RFBnRTNOamMyTnpZdkFUVW1OelltSnlZbkl3WUhEZ0VYRmdjVUJ4VU9BUmNlQVJjV0Z4WVZNQlVVQmhRUEFSUWpEZ0VISmpVMFBnUUNyUDZvOVBRQldQVCtZRTJPWmp4WVVXa0VBZ0VCQVFJQ0FnRUNBZzBGRXdnSENBRUVDZ1FPRXloTkkwd29GQTRFQ2dRQkJBRUVCUTRJQkE0SUFRRUNBU2x3SEZrYk1VZFRZd0xBOVA2bzlQUUJXTkU4Wm81Tmltb2hId0VHRGdNREJnTURCZ1lHQXdVREhTSVdMQ01VQWdFVk9STTZHak1GQlRNYU9oTTVGUUVCQVFvVEdoa2dDU0VlRUNBSUF3VUNBUUVCRENnTWFvczBZMU5ITVJzQUFBQUFBd0RBLytBRFFBSmdBQUFBVXdEQUFUWkxzQXRRV0VBY2s1S0ZBQVFCQzU2YWxZUjZCUUFCcWFkelFrQS9FUW9JQ2dBRFFCdExzQXhRV0VBY2s1S0ZBQVFCQzU2YWxZUjZCUUFCcWFkelFrQS9FUW9JQndBRFFCdEFISk9TaFFBRUFRdWVtcFdFZWdVQUFhbW5jMEpBUHhFS0NBb0FBMEJaV1V1d0MxQllRRFVEQVFFTEFBc0JBR1lFQVFBS0N3QUtaQUFLQndzS0IyUUpDQUlIQmdzSEJtUUFBZ0FMQVFJTFdRd0JCZ1lGVUFBRkJRc0ZRaHRMc0F4UVdFQXZBd0VCQ3dBTEFRQm1CQUVBQndzQUIyUUtDUWdEQndZTEJ3WmtBQUlBQ3dFQ0Mxa01BUVlHQlZBQUJRVUxCVUliUURVREFRRUxBQXNCQUdZRUFRQUtDd0FLWkFBS0J3c0tCMlFKQ0FJSEJnc0hCbVFBQWdBTEFRSUxXUXdCQmdZRlVBQUZCUXNGUWxsWlFCNVZWSXVLWldSaVlWOWVYVnhVd0ZYQVRrMDVPQzh1SnlVZkhoTVNEUTRyQ1FFdUFTY21KeTRCUHdFMk56NEROVGN5UGdFM1BnRTFOQzRESXpjK0FUYzJKaU1pRGdFVkhnRWZBU0lIRkJZWEhnTVhNeFlYRmg4REJnY09BUWNPQkFjR0ZTRTBMZ01ISVRZM05qYytBVGN5TmpJK0FUSStBVEkzTmpjMkp6MENOQ1k5QXljdUFTY21Md0V1QWljbUp5WStBVGMxSmljbU56WXlGeFlIRGdJSE1RWVZIZ0VIQmdjVURnRVZCdzRDQnc0QkR3RWRBUVlkQVJRR0ZSUVhIZ0lYRmhjZUFSY1dGeDRDRndHVkFVSVFSQU1lQ2dNQkFRRU1CZ0lFQkFNQkFnVUpBd0VMQXdNREFnRURBZ1lCQVZCR0wwWWdBUVlDQXdzQkN3RUNCUVFGQVFJSEJ3TUZCd01CQVFJRkdBc0dFeEVURWdocEFvQVNGeUVVNHY3dEJRd1dJQWtaRVFFRkF3UURCQU1FQXdJcEVBd0JBUVVEQ2dNRkJ3RUJDQWtCQkFRQ0FnY0JDUUVCSFNCeUlCMEJBUVVEQVFFQkN3TUVCUWtKQVFJRUJRRURDZ01GQVFFTUJ4d1BCd2dZRVJrSklSVUVCUVVDQVkzK3V3WUxBUVlNQkNrU0V4TVJCUkFSRHdVRkFRd0xCeVlMQlFjRUFnRUpCaXdhTmxFb1BDTWFLZ2tJRXdza0NRWUtCUUlCTGhFSENROEZSQXNEQlFvREFRTURCQVFESlVNU0lSVVVDRVFIQ0JBTEJBVUNBUUVCQVFFQkNSUU9NZ2dKQndRRkFnTUNDQWNGRWdnT0tnY0VCUVFERXhJTUNBa0REQnN3S1IwaElSMHBGU1lOQXdVR0FoSU5FaE1EQkFVRUJ3a1dGUVFJRUFjSENBSURCQWtFREFZeURna09CUUVDQkFJRkJBc1FBd1FGQXdBQUJBREEvK0FEUUFKZ0FBc0FEQUJmQU13QmNrdXdDMUJZUUJ5Zm5wRU1CQWNFcXFhaGtJWUZCZ2UxczM5T1RFc2RGZ2dRQmdOQUcwdXdERkJZUUJ5Zm5wRU1CQWNFcXFhaGtJWUZCZ2UxczM5T1RFc2RGZ2dOQmdOQUcwQWNuNTZSREFRSEJLcW1vWkNHQlFZSHRiTi9Ua3hMSFJZSUVBWURRRmxaUzdBTFVGaEFSd2tCQndRR0JBY0daZ29CQmhBRUJoQmtBQkFOQkJBTlpBOE9BZzBNQkEwTVpBQUlBQkVCQ0JGWkFnRUFCUUVEQkFBRFZ3QUJBQVFIQVFSWEVnRU1EQXRRQUFzTEN3dENHMHV3REZCWVFFRUpBUWNFQmdRSEJtWUtBUVlOQkFZTlpCQVBEZ01OREFRTkRHUUFDQUFSQVFnUldRSUJBQVVCQXdRQUExY0FBUUFFQndFRVZ4SUJEQXdMVUFBTEN3c0xRaHRBUndrQkJ3UUdCQWNHWmdvQkJoQUVCaEJrQUJBTkJCQU5aQThPQWcwTUJBME1aQUFJQUJFQkNCRlpBZ0VBQlFFREJBQURWd0FCQUFRSEFRUlhFZ0VNREF0UUFBc0xDd3RDV1ZsQUpHRmdsNVp4Y0c1dGEycHBhR0RNWWN4YVdVVkVPem96TVNzcUh4NFJFUkVSRVJBVEZDc0JJelVqRlNNVk14VXpOVE1GQVM0Qkp5WW5MZ0UvQVRZM1BnTTFOekkrQVRjK0FUVTBMZ01qTno0Qk56WW1JeUlPQVJVZUFSOEJJZ2NVRmhjZUF4Y3pGaGNXSHdNR0J3NEJCdzRFQndZVklUUXVBd2NoTmpjMk56NEJOekkyTWo0Qk1qNEJNamMyTnpZblBRSTBKajBESnk0Qkp5WXZBUzRDSnlZbkpqNEJOelVtSnlZM05qSVhGZ2NPQWdjeEJoVWVBUWNHQnhRT0FSVUhEZ0lIRGdFUEFSMEJCaDBCRkFZVkZCY2VBaGNXRng0QkZ4WVhIZ0lYQTBBeUhESXlIREwrVlFGQ0VFUURIZ29EQVFFQkRBWUNCQVFEQVFJRkNRTUJDd01EQXdJQkF3SUdBUUZRUmk5R0lBRUdBZ01MQVFzQkFnVUVCUUVDQndjREJRY0RBUUVDQlJnTEJoTVJFeElJYVFLQUVoY2hGT0wrN1FVTUZpQUpHUkVCQlFNRUF3UURCQU1DS1JBTUFRRUZBd29EQlFjQkFRZ0pBUVFFQWdJSEFRa0JBUjBnY2lBZEFRRUZBd0VCQVFzREJBVUpDUUVDQkFVQkF3b0RCUUVCREFjY0R3Y0lHQkVaQ1NFVkJBVUZBZ0h1TWpJY01qSkYvcnNHQ3dFR0RBUXBFaE1URVFVUUVROEZCUUVNQ3djbUN3VUhCQUlCQ1FZc0dqWlJLRHdqR2lvSkNCTUxKQWtHQ2dVQ0FTNFJCd2tQQlVRTEF3VUtBd0VEQXdRRUF5VkRFaUVWRkFoRUJ3Z1FDd1FGQWdFQkFRRUJBUWtVRGpJSUNRY0VCUUlEQWdnSEJSSUlEaW9IQkFVRUF4TVNEQWdKQXd3Yk1Da2RJU0VkS1JVbURRTUZCZ0lTRFJJVEF3UUZCQWNKRmhVRUNCQUhCd2dDQXdRSkJBd0dNZzRKRGdVQkFnUUNCUVFMRUFNRUJRTUFBQUlBWVArQUE2QUN3QUFIQUVRQU1rQXZRUnNhQ3dRQ0F3RkFBQUFBQXdJQUExa0VBUUlCQVFKTkJBRUNBZ0ZSQUFFQ0FVVUpDQ2NrQ0VRSlJCTVFCUkFyQUNBR0VCWWdOaEFCSWlZblBnRTNQZ0UxTkNjbUp5WW5KajhCTlRZbUp5WStBamMyTnpNV0Z4NEJCd1lYTUJjZUFRY09BUWNPQlJVVUZoY1dGdzRDQXF6K3FQVDBBVmowL21CV21UVWNjQ2dFQWdnT0JCTUpCd2dCQWdRRUFnSUdEZ29vVENOTktCUU9CQW9FQVFRQkJBVVBCd0lHQndnRkJBSURhVkVqV20wQ3dQVCtxUFQwQVZqOTEwaEFEQ2dNQVFZT0lCQWVJUlV0SXhRQkFnY3hGZ2NaR2g4T013VUZNeG82RXprVkF3b1RHaGtnQ1FzWUZCQU9FUWdPQmdFZklTczlJUUFBQUFFQXdQL2dBMEFDWUFCU0FEZEFORUUvUGhBSkJRVUFBVUFEQVFFQ0FBSUJBR1lFQVFBRkFnQUZaQUFDQWdWUEFBVUZDd1ZDVFV3NE55NHRKaVFlSFJJUkJnNHJKUzRCSnlZbkxnRS9BVFkzUGdNMU56SStBVGMrQVRVMExnTWpOejRCTnpZbUl5SU9BUlVlQVI4QklnY1VGaGNlQXhjekZoY1dId01HQnc0QkJ3NEVCd1lWSVRRdUF3TFhFRVFESGdvREFRRUJEQVlDQkFRREFRSUZDUU1CQ3dNREF3SUJBd0lHQVFGUVJpOUdJQUVHQWdNTEFRc0JBZ1VFQlFFQ0J3Y0RCUWNEQVFFQ0JSZ0xCaE1SRXhJSWFRS0FFaGNoRkVnR0N3RUdEQVFwRWhNVEVRVVFFUThGQlFFTUN3Y21Dd1VIQkFJQkNRWXNHalpSS0R3akdpb0pDQk1MSkFrR0NnVUNBUzRSQndrUEJVUUxBd1VLQXdFREF3UUVBeVZERWlFVkZBZ0FBQUFBQWdEQS8rQURRQUpnQUFzQVhnREFRQXBOUzBvY0ZRVUxCZ0ZBUzdBTFVGaEFMZ0FJQVFBSVhBa0JCd1FHQUFkZUNnRUdDd1FHQzJRQ0FRQUZBUU1FQUFOWUFBRUFCQWNCQkZjQUN3c0xDMEliUzdBTVVGaEFMUUFJQVFob0NRRUhCQVlBQjE0S0FRWUxCQVlMWkFJQkFBVUJBd1FBQTFnQUFRQUVCd0VFVndBTEN3c0xRaHRBTGdBSUFRaG9DUUVIQkFZRUJ3Wm1DZ0VHQ3dRR0MyUUNBUUFGQVFNRUFBTllBQUVBQkFjQkJGY0FDd3NMQzBKWldVQVVXVmhFUXpvNU1qQXFLUjRkRVJFUkVSRVFEQlFyQVNNMUl4VWpGVE1WTXpVekF5NEJKeVluTGdFL0FUWTNQZ00xTnpJK0FUYytBVFUwTGdNak56NEJOelltSXlJT0FSVWVBUjhCSWdjVUZoY2VBeGN6RmhjV0h3TUdCdzRCQnc0RUJ3WVZJVFF1QXdOQU1od3lNaHd5YVJCRUF4NEtBd0VCQVF3R0FnUUVBd0VDQlFrREFRc0RBd01DQVFNQ0JnRUJVRVl2UmlBQkJnSURDd0VMQVFJRkJBVUJBZ2NIQXdVSEF3RUJBZ1VZQ3dZVEVSTVNDR2tDZ0JJWElSUUI3akl5SERJeS9uWUdDd0VHREFRcEVoTVRFUVVRRVE4RkJRRU1Dd2NtQ3dVSEJBSUJDUVlzR2paUktEd2pHaW9KQ0JNTEpBa0dDZ1VDQVM0UkJ3a1BCVVFMQXdVS0F3RURBd1FFQXlWREVpRVZGQWdBQUFJQW9QL0FBM2NDZ0FCSkFJd0FYRUJaWWdFR0IzbDNFaEFFQUFZQ1FBQURBZ2NDQXdkbUFBWUhBQWNHQUdZQUFnQUhCZ0lIV1FBQUFBa0JBQWxaQUFFQUNBVUJDRmtBQlFRRUJVMEFCUVVFVVFBRUJRUkZoWU9BZm1WallXQlBUVUpBTFN3cUtDUWlDaEFySlM0Qkl5SU9BUWNHSXlJbUx3RW1Md0VtTHdFdUF5OEJMZ0kxTkQ0Q056WW5KaThCSmlNaUJ3WWpCdzRDQnc0QkZCNEJGeDRCRng0QkZ4NEJNekkrQWpjMkp5WUhCZ2NHSXlJbkxnRW5MZ1kyTnpZM01EY3lOVFl6TWhZZkFSNEJCd1lYSGdJZkFSNEJGeFlYRmg4QkZoOEJGak15TmpjMk16SWVBaGNXQndZRFFCdG5KUVlNQ2dRd0NnUUtDd0lsRmdRQkFnUUdCZzBRREFFS0NBZ0NCZ2tISVI0UU1RSWRKaHdrQVFFQkRoY1BCQVFFQ0JRUUkwZ3pMRG8yTldFa0ZoWWpJQkkyS3dZZEpDWUtGVUJvTkRrckdTZ2xJU01UQkFNRUNTRUNBUjBUREJVTEFpNGpGU0FDQVFvTERBRVhGUXNCQWdNQkF4WW5BaHdSRFI4ZkJnb1BLeWtqQ2hzR0JJRWJPd0lFQWg4SENnSWZHQU1DQXdNR0J3MFREUUVMQ2d3RUF3Z0xEZ2tzUHlFN0F5UVhBUUVKRmhnTURSWWlKRE1kUUdFMUxqQW5KaW9DQ2hvV1FUY0dhU3NFQVVvbUx5MFpMekkxUHpNbUdBNGNGUUVCRWd3TkFqbEtIQ3dZQ1JNT0RnRVpGd3NCQXdJQkJCY2lBaGdQRkFRUkdCb0tHeFlSQUFBREFJQUFJQU9BQWlBQUF3QUdBQk1BUEVBNUVoRU9EUXdKQ0FRSUF3SUJRQVFCQVFBQ0F3RUNWd1VCQXdBQUEwc0ZBUU1EQUU4QUFBTUFRd2NIQUFBSEV3Y1RCZ1VBQXdBREVRWVBLeE1SSVJFQkpTRUJFUmNIRnpjWE54YzNKemNSZ0FNQS9vRCt1Z0tNL1ZybWlBU2VZR0NlQklqbUFpRCtBQUlBL3VqNC9rQUJySytiQkl0SlNZc0VtNi8rVkFBQ0FJRC80QU9BQW1BQUp3QlZBR3BBWnpReUlRTUVBQlFCQVFKS0FRZ0JUaGdDREFrL0FRY01CVUFBQkFBQ0FBUUNaZ1VEQWdJQkFBSUJaQXNLQWdnQkNRRUlDV1lBQ1F3QkNReGtBQVlBQUFRR0FGa0FBUUFNQndFTVdRQUhCd3NIUWxGUFRVdEpTRVpGUlVRK1BDa29FUklSSVNZUURSUXJBREllQVJVVUJ3WWpJaWNpSXljakppY2lCeU1IRGdFUEFUNEROVFFuSmljbUp5WTFORFlrSWc0QkZSUVhIZ0lYSmpVeEZoVVVCd1lXRnpNeVB3STJQd0V6SXpZM01oY1ZNeklWRmpNeVBnRTBKZ0dodnFOZVkyV1dWRGNCQWdFQ0R3NFJFQUVFQlFzQ1R3c0xCUUVOQWdFREFUVmVBV3JRc1djOUFRTUNBUUlISkFJSkNBWURCQU5sQVFvSkFRRUxDd3NLQWdFOVdtaXdabWNDUUVxQVMyOU1UeE1CQkFFR0FnRUVBU01oSkJNRkFoWVRBd0VFQVVOUFMzOXFVNDVVV2t3QkJBUUJBd0VMREFKeUJnd0NBUUVzQVFNRUF3RURBUUVVVFlxbmpnQUFBQUFEQUdEL2dBT2dBc0FBQ1FBUkFCZ0FuclVVQVFZRkFVQkxzQXBRV0VBNkFBRUFDQUFCQ0dZQUJnVUZCbDBBQWdBQUFRSUFWd3dCQ0FBTEJBZ0xWd0FFQUFNSkJBTlhDZ0VKQlFVSlN3b0JDUWtGVHdjQkJRa0ZReHRBT1FBQkFBZ0FBUWhtQUFZRkJta0FBZ0FBQVFJQVZ3d0JDQUFMQkFnTFZ3QUVBQU1KQkFOWENnRUpCUVVKU3dvQkNRa0ZUd2NCQlFrRlExbEFGZ29LR0JjV0ZSTVNDaEVLRVJFUkVoRVJFUkVRRFJZckV5RVZNelVoRVRNMUl6Y1JJUmN6TlRNUkF5TVZKeUVSSVlBQ0FDRDl3T0RBNEFGRmdCdGdJR0J1L3M0Q0FBS2d3T0QrUUNDZy9rQ0FnQUhBL21CdGJRR0FBQUFBQVFDZy84QURkd0tBQUVrQU5rQXpFaEFDQUFNQlFBQUNBd0pvQUFNQUEyZ0FBUUFFQUFFRVpnQUFBUVFBVFFBQUFBUlJBQVFBQkVWQ1FDMHNLaWdrSWdVUUt5VXVBU01pRGdFSEJpTWlKaThCSmk4QkppOEJMZ012QVM0Q05UUStBamMySnlZdkFTWWpJZ2NHSXdjT0FnY09BUlFlQVJjZUFSY2VBUmNlQVRNeVBnSTNOaWNtQTBBYlp5VUdEQW9FTUFvRUNnc0NKUllFQVFJRUJnWU5FQXdCQ2dnSUFnWUpCeUVlRURFQ0hTWWNKQUVCQVE0WER3UUVCQWdVRUNOSU15dzZOalZoSkJZV0l5QVNOaXNHZ1JzN0FnUUNId2NLQWg4WUF3SURBd1lIRFJNTkFRc0tEQVFEQ0FzT0NTdy9JVHNESkJjQkFRa1dHQXdORmlJa014MUFZVFV1TUNjbUtnSUtHaFpCTndZQUFBQUFBZ0NBQUNBRGdBSWdBQXdBRHdBclFDZ1BDd29IQmdVQ0FRZ0FBUUZBQUFFQUFBRkxBQUVCQUU4Q0FRQUJBRU1BQUE0TkFBd0FEQU1PS3lVUkJSY0hKd2NuQnljM0pSRUJJUUVEZ1A3NmlBU2VZR0NlQklqKytnTHYvU0VCY0NBQjVNZWJCSXRKU1lzRW04ZitIQUlBL3VnQUFBQUJBSUQvNEFPQUFtQUFMUUJCUUQ0aURBb0RBZ0FtQVFZREZ3RUJCZ05BQlFRQ0FnQURBQUlEWmdBREJnQURCbVFBQUFBR0FRQUdXUUFCQVFzQlFpa25KU01oSUI0ZEhSd1dGQkFIRHlzQUlnNEJGUlFYSGdJWEpqVXhGaFVVQndZV0Z6TXlQd0kyUHdFekl6WTNNaGNWTXpJVkZqTXlQZ0UwSmdKbzBMRm5QUUVEQWdFQ0J5UUNDUWdHQXdRRFpRRUtDUUVCQ3dzTENnSUJQVnBvc0dabkFtQlRqbFJhVEFFRUJBRURBUXNNQW5JR0RBSUJBU3dCQXdRREFRTUJBUlJOaXFlT0FBQUFBQUlBWVArQUE2QUN3QUFGQUEwQWJVdXdDbEJZUUNrQUFRWURCZ0VEWmdBRUF3TUVYUUFBQUFJR0FBSlhCd0VHQVFNR1N3Y0JCZ1lEVHdVQkF3WURReHRBS0FBQkJnTUdBUU5tQUFRREJHa0FBQUFDQmdBQ1Z3Y0JCZ0VEQmtzSEFRWUdBMDhGQVFNR0EwTlpRQTRHQmdZTkJnMFJFUklSRVJBSUZDc0JJUkV6TlNFRkVTRVhNelV6RVFLZy9jRGdBV0Qrd0FGRmdCdGdBc0QrUU9BZy9rQ0FnQUhBQUFBQUFBY0FzLy9oQXlnQ1p3QTNBRVlBV0FCbUFIRUFqd0M3QVFCQUlaa0JDd2taRkJNREFBZDJBUVFBQlFFTUEwd3BBZ0lNQlVCK0FRVWxBUTBDUDB1d0MxQllRRlFBQ1FnTENBa0xaZ0FLQ3dFTENnRm1BQUFIQkFFQVhnOEJCQTBIQkExa0FBMERCdzBEWkFBTUF3SUREQUptRGdFQ0FtY0FDQUFMQ2dnTFdRQUJCUU1CVFFZQkJRQUhBQVVIV1FBQkFRTlJBQU1CQTBVYlFGVUFDUWdMQ0FrTFpnQUtDd0VMQ2dGbUFBQUhCQWNBQkdZUEFRUU5Cd1FOWkFBTkF3Y05BMlFBREFNQ0F3d0NaZzRCQWdKbkFBZ0FDd29JQzFrQUFRVURBVTBHQVFVQUJ3QUZCMWtBQVFFRFVRQURBUU5GV1VBbWMzSTVPTFcwc3JHa282Q2ZtSmVVa29TRGdIOTlmSEtQYzQ5QlB6aEdPVVllSFJFUUVBNHJBUzRDTmo4Qk5pY3VBUTRCRHdFT0FTSW1KelVtUGdJM05DNENCZ2NPQkJVT0FSMEJIZ1FYRmo0Q056WW5KZ01HTGdJMU5EWTNOaFlWRkFjR0p3NERGeFVVSGdFWEZqWTNQZ0V1QVFjR0pqVTBOamMySGdJVkZBWTNCaVluSmpZM05oWVhGamN5UGdFM05UWXVCQThCSWdZVkZETTJIZ01PQVJVVUZ4WW5MZ0VHSWc0QkJ5TVBBUVlWRkI0Qk16WTNOakllQXhjV0J3NENGUlFXTWpZM016NEJMZ01DaFFjSUFRRUJBUmdkQ2lBZ0hRa0tCUWdHQXdFQkFRRUNBUU1NRlNVWkdUTW5JQkFYRndRaUx6ODZJU2RYVDBJUEpFQVE2eVZGTWg1dFRVOXNRalZZSFNnUUNBRUJEZzB2VWhvTUFoSXpQZzhVRXc0SURna0dGUzhGQ3dJREFnVUdDd0lHOUFRSEJRRUNCeEFWRmhJRkJnY0tFUkFXRGdZREFRRU9BZ3NKRXhFT0R3WUZBUUVCRWdjTEJ3RVZBdzRWR1JrWkNSTUxBUUVERGhVTUFRRUpBUkFaSVNJQkxnRUdCZ1lDQWpJbERBa0hDZ1VGQWdJQkF3UURDQWNNQkE0WEdnNEJDd3NyTHl3YkFTaFBGQlFzUlNzZkRnTUVFaWRDS21NMERmN21BaFVuT1NGQlh3VUVURUZLTnl2N0JTQW5KZzBOQlE0Z0NCNFlLUlE4TnlLMEFoTVBFQnNDQVFVSkRRZ1FHVUVGQVFZRkVBUUZBUVlOdEFVSUJnSWVMUmtSQkFFQkFRd0pGZ1lIQ1JZUEZBY0NFd0lCL2dNREFRTUNBUUVCQmhnSkRna0JCZ0VDQ3hBZUV6Y3lBZ1lRQncwUENoQXFTamN1SHhRQUFBWUFRUCtrQThBQ213QU9BQmtBUEFCSEFFOEFjd0NKUUlaU0FRUUxabDRDRFFCZk9qRURCZzBEUURrMEFnWTlDZ0VIQ0FzSUJ3dG1FUUVMQkFnTEJHUVFBZzhEQUFFTkFRQU5aZzRCRFFZQkRRWmtBQVlHWndBTUNRRUlCd3dJV1FVQkJBRUJCRTBGQVFRRUFWRURBUUVFQVVWUlVCQVBBUUJ0YW1sb1ZsUlFjMUZ6VFV4SlNFTkJQajB3TGlJZkhoMFdGUThaRUJrR0JBQU9BUTRTRGlzbElpWTBOak15SGdNVkZBNEJJeUl1QVRVME5qSVdGQVlGTkM0Qkp5WXJBU0lPQmhVVUZ4NEJNekkzRnpBWEhnRStBVFVuUGdFQUlpWTBOak15SGdFVkZEWXlGaFFHSWlZMEZ6SVhMZ0VqSWc0REZSUVdGd2NVQmhRZUFUOEJIZ0V6TURzQ0xnRTFORDRCQXc0UUZ4Y1FCZ3dLQndRTEVkTUtFZ3NYSUJjWEFXcEVkVWNHQlFrZE5qSXNKaDRWQ3dnWGxXRkJPajRCQWdVRUF4SXNNdjFVSUJjWEVBc1NDcjBoRmhZaEZ0b0dDeEcwZHpWaFR6c2hQVFlZQVFVSkNsZ2NPeUFEQkFNRUJGQ0k0UmNoRndRSUNRd0hDaElMQ3hJS0VSY1hJUmM0UDJ0Q0JBRUtFaG9oSnlvd0dSMGRUMmdaS2dFQkFRRUhCa0lpWGdGRUZ5QVhDaElMRURjWElCY1hJRUVCWm9nY00wVlZMVUJ2SjFrQkJBb0RBd1E5Q2dvUEhROUhlRVlBQUFnQVFQOWhBOEVDNGdBSEFCQUFGQUFZQUIwQUpnQXZBRGNBWmtCak1DQVRBd0lFTmlFQ0FRSTNIUXdCQkFBQkxSd0NBd0FzSnhvWEJBVURCVUFBQVFJQUFnRUFaZ0FBQXdJQUEyUUlBUVFHQVFJQkJBSlhCd0VEQlFVRFN3Y0JBd01GVVFBRkF3VkZIeDRWRlJFUktpZ2VKaDhtRlJnVkdCRVVFUlFTRlFrUUt5VUJCaFVVRnlFbUFTRVdGd0UrQVRVMEp5WW5Cd0VXRno4QkVUWTNKd01pQnhFQkxnTURGak15TmpjUkJnY0JEZ1FIRndGZC92Y1VHQUVQQmdKSS92RUZCUUVKQ2dvMVJJSy8vbTVFZ0wvYmYwQy8wMHBHQVJNUUh5RWlsRUJESmtnaUJRWCtweGd1S1NRZkRMNmNBUWxBUkVwR0JnRWJCUWIrOXg5Q0lrdUlnRURBL2xwL1A3N0Uvb05FZ2I4QnlSais4UUVUQlFjRkEveVRGQXdNQVE0RkJBSXZEU0FtS2k4WnZnQUFBQUFGQUFYL1FnUDdBd0FBSVFBMEFFQUFVQUJnQU1GQURnZ0JBZ1VXQVFFQ0FrQVFBUUU5UzdBTFVGaEFLUW9CQUFBREJBQURXUTBJREFZRUJBa0hBZ1VDQkFWWkN3RUNBUUVDVFFzQkFnSUJVUUFCQWdGRkcwdXdGbEJZUUNJTkNBd0dCQVFKQndJRkFnUUZXUXNCQWdBQkFnRlZBQU1EQUZFS0FRQUFDZ05DRzBBcENnRUFBQU1FQUFOWkRRZ01CZ1FFQ1FjQ0JRSUVCVmtMQVFJQkFRSk5Dd0VDQWdGUkFBRUNBVVZaV1VBbVVsRkNRU01pQVFCYldWRmdVbUJLU0VGUVFsQThPelkxTFNzaU5DTTBHaGdBSVFFaERnNHJBU0lPQWhVVUZoY1dEZ1FQQVQ0RU54NEJNekkrQWpVMExnRURJaTRCTlRRK0F6TXlIZ0lWRkE0QkFpSUdGUlFlQVRJK0FUVTBKU0lPQWhVVUZqTXlQZ0kxTkNZaElnWVZGQjRETXpJK0FUUXVBUUlGWjcyS1VtbGJBUWdPRXhJUUJRVUlIVkJHVUJnYU54eG51b1pQaHVlS2RNRjBLMUJvZ2tSVm0yOUNjTDVQUFNvVUlTY2lGUDdPRHhvVERDb2VEeHNVRENzQnNSOHBCdzBTRmd3VUlSUVVJUU1BUkhTZ1dHV3lQQmN0SkNFWUVRVUVBUVlURmlRVUJRVkVkS0JZZGNoei9QUlRtMkU2YmxsREpUcGhoVWxobWxRQnB5Y2ZGU01WRlNNVkh5Y0tFaHNQSUMwTUZSd1FIeWNuSHcwWEV3NElGU01xSUJFQUFBRUFWLzl1QTZrQzBRRjVBYUpCalFGaUFJWUFkQUJ5QUhFQWJnQnRBR3dBYXdCcUFHa0FZQUFoQUJRQUV3QVNBQkVBRUFBTUFBc0FDZ0FGQUFRQUF3QUNBQUVBQUFBYkFBc0FBQUZIQVVZQlJRQURBQUlBQ3dGZ0FWMEJYQUZiQVZvQldRRllBVW9BcUFDbkFKMEFrQUNQQUk0QWpRQ01BQkFBRFFBQ0FKc0FtZ0NaQUpRQWt3Q1NBQVlBQVFBTkFTNEJMUUVxQUxVQXRBQ3pBQVlBQ1FBQkFTY0JKZ0VsQVNRQkl3RWlBU0VCSUFFZkFSNEJIUUVjQVJzQkdnRVpBUmdCRmdFVkFSUUJFd0VTQVJFQkVBRVBBUTRCRFFFTUFPMEF6QURMQU1rQXlBREhBTVlBeEFEREFNSUF3UURBQUw4QXZnQzlBTHdBS3dBRkFBa0JDZ0RvQU9jQTB3QUVBQU1BQlFBSEFFQUJSQUNIQUFJQUN3Q2NBSkVBQWdBTkFRc0FBUUFGQUFNQVAwQkZEQUVMQUFJQUN3Sm1BQUlOQUFJTlpBQU5BUUFOQVdRQUFRa0FBUWxrQ2dFSkJRQUpCV1FFQVFNRkJ3VURCMllJQVFjSFp3QUFDd1VBU3dBQUFBVlBCZ0VGQUFWRFFSNEJWd0ZVQVVNQlFnRkJBVDhCTEFFckFTa0JLQUQ5QVBvQStBRDNBT3dBNndEcUFPa0Eyd0RhQU5rQTJBQ21BS1VBbUFDVkFEa0FOd0FPQUE0ckV5OENOVDhGTlQ4SE5UOGlPd0VmTVJVSEZROERIUUVmRVJVUERTc0NMd3dqRHd3ZkRSVVhCeDBCQnhVUER5TUhJeThOSXljakp3OEpJdzhCS3dJdkZEVTNOVGM5QVQ4UE16OEJNelV2RVNzQk5TTVBBUlVQRFNzQ0x3ZzFQeGZSQWdFQkFnRURBZ1FGQVFFQ0FnSUNBZ01CQWdNRUFnTURCQVFFQlFZREF3Y0hCd2tKQ1FzSUNBa0tDUXNMQ3dzTUN3ME5HUTBuRFEwT0RBME5EUTBNREF3TEN3a0ZCQWtJQndjR0J3VUZCZ1FIQkFNREFnSUNCQU1DQVFJQkFnVURBZ1FEQWdJQ0FRRUJBUU1DQWdNTUNRUUdCUVlHQndRREF3TUNBd0lEQVFFQkFnUUJBZ0lDQXdJREFnUURBZ01EQkFJQ0F3SUVCQVFEQkFVRkFRRUNBZ0lFQlFjR0JnY0hBd1VLQVFFRkZna0pDUWdFQWdNREFRSUJBUUlDQkFNREF3WUdCd2dKQkFRS0Nnc0xEQXNsRGd3TkRRNE9EUTBPRFFjR0JBUUxEQWNJQlFjS0N3Y0dFQWdJREFnSUNBb25GaFlMQ3dvS0Nna0pDQWdHQndJREFnSUNBUUlCQVFFQkFnRURBZ0VFQXdRQ0JRTUZCUVVHQmdjSEFnRUJCQW9HQ0FjSUNRUUVCQU1GQXdRREF3SUJBUUVEQVFFQkJRSUVBd1VFQlFVR0JnVUhCd0VDQVFJQ0FnSUJBUUlCQVFFQ0FRTURBd01FQlFVRkJ3Y0hCZ2NJQkFVR0J3c0lBVXNGQndRT0JnWUhCd2dIQlFVSEJ3a0RCQVFDRXdvTERRNEhDUWNJQ2dnSkNRVUVDZ29KQ2drS0NnY0dCd1VGQlFVRUF3UURBZ0lFQVFJQkF3TURCQVFGQmdVSEJ3WUVBd2NJQndnSUNBa0lDUWdSQ1FnSkNBY0pEdzBNQ2hBQ0F3Z0ZCZ1lIQ0FnSUJBWUVCQVlGQ2dVR0FnRUZFUTBJQ2dvTERBNEpDQWtJQ1FnUEVBNFRCd3dMQ2dRRUJBUUNCQU1DQVFJREFRRURBZ1FHQmdVR0Nnc0JBZ01EQ3c4UkNRb0tDZ1VGQ2dFQkF3c0ZCUWNHQXdRRUJBUUVCQVFEQXdNREFnTUZCUU1DQlFNRUF3UUJBUU1DQWdJQ0FRRUNBUUlFQWdRRkJBSUNBZ0VCQVFVRUJRWURBd1lDQWdNQkFRSUNBZ0VDQXdJRUF3UUVCUUlEQWdNREF3WURBd01FQkFNSEJBVUVCUUlEQlFJQ0F3RUNBZ0lDQVFFQkFRRUNBZ2dGQndjS0NnWUdCd2NIQ0FrSkNBc0JBUUlDQWdNSUJRUUZCZ1FGQlFNRUFnSURBUVlFQkFVRkN3Y1dFQWdKQ1FnS0Nna0tDUXNKQ3drS0NBZ0lCQVVHQlFvR0FBQUFCQUJlQUNBRG9nSWdBQk1BS0FBc0FERUFOMEEwTVRBdkxpd3JLaWtJQWdNQlFBUUJBQUFEQWdBRFdRQUNBUUVDVFFBQ0FnRlJBQUVDQVVVQ0FDWWpHUllMQ0FBVEFoTUZEaXNCSVNJT0FSVVJGQll6SVRJMk5SRTBMZ01URkFZaklTSXVCVFVSTkRZekJUSVdGUmNWRnhFSEVTYzFOd0pmL2tZU0lSUXJIQUc2SENjSERCQVVGUk1PL2tZRUNBY0hCUVFDRmc4QnVnNFRYc1FpZ0lBQ0lCRWVFdjZJSENzcUhRRjRDeFFRREFiK1J3OFdBZ1FGQndjSUJBRjREUklCRVExcHEyc0JnRHorOTBPRVF3QUFBQVlBZ0FBQUE0QUNRQUFmQUVrQVVRQlpBRjBBWlFEZlM3QW9VRmhBVWdBUEN3NEhEMTRBRUE0U0RoQVNaZ0FCQ1FFSUF3RUlXUUFEQUFjRFN3UUNFd01BQ2dFSEN3QUhXUUFMQUE0UUN3NVpBQklBRVEwU0VWa0FEUUFNQmcwTVdRQUdCUVVHVFFBR0JnVlNBQVVHQlVZYlFGTUFEd3NPQ3c4T1pnQVFEaElPRUJKbUFBRUpBUWdEQVFoWkFBTUFCd05MQkFJVEF3QUtBUWNMQUFkWkFBc0FEaEFMRGxrQUVnQVJEUklSV1FBTkFBd0dEUXhaQUFZRkJRWk5BQVlHQlZJQUJRWUZSbGxBTEFFQVpXUmhZRjFjVzFwWFZsTlNUMDVMU2taRU9qZzNOaTh0SmlNYUZ4SVFEdzROREFnRkFCOEJIeFFPS3dFakppY3VBU3NCSWdZSEJnY2pOU01WSXlJR0ZSRVVGak1oTWpZMUVUUW1FeFFPQVNNaElpWTFFVFErQWpzQk56NEJOelkvQVRNd093RWVBaGNlQXg4Qk16SWVBUlVrSWdZVUZqSTJOQVlpSmpRMk1oWVVOek1WSXdRVUZqSTJOQ1lpQTBON0F3WXdKQkN4RUNNdUNBUWJSQnNiS0NrYUFvQWFJeU1EQnc0SS9ZQU5GZ1lKRFFlSUNRUVBBeVlORExFQkFRRURCUU1GRHhnU0NnbUtDUTBIL3VlT1pHU09aSEYwVVZGMFVUVWlJdjhBSlRZbEpUWUI0QU1ITlNFZk5BZ0ZJQ0FrR2Y2Z0d5Z29Hd0ZnR2lQK1l3b1BDaFlOQVdBR0N3Y0ZCZ1VUQkNvTUNBRUNBd01GRVJ3VUN3WUhEZ2dDWkk1a1pJN1NVWFJSVVhUZ0ltazJKU1UySlFBREFRRC9ZQU1BQXVBQUN3QVhBREVBVFVCS0RBc0NCUU1DQXdVQ1pnQUFBQU1GQUFOWkFBSUFBUVFDQVZrQUJBb0JCZ2NFQmxrSkFRY0lDQWRMQ1FFSEJ3aFBBQWdIQ0VNWUdCZ3hHREV1TFN3ckVSRVRFeWNWRnhVUURSY3JBQ0lHRlJFVUZqSTJOUkUwQXhRR0lpWTFFVFEyTWhZVkZ4VVVEZ0VqSWlZOUFTTVZGQllYRlNNVklUVWpOVDRCUFFFQ1FZSmRYWUpkSUVwb1NrcG9TbUE3Wmp0YWdpYUxaWklCUW9wamh3TGdZa1greTBWaVlrVUJOVVgraGpoUFR6Z0JOVGhQVHppWm56eGtPNEJibjU5bGt3ZCtKQ1IrQjVObG53QUFCQUQwLzJBRERBTGdBQklBSkFBc0FEa0FSa0JERmhRVERBb0dCZ01FQVVBWUNBSURQUUFBQUFFQ0FBRlpBQUlBQlFRQ0JWa0dBUVFEQXdSTkJnRUVCQU5SQUFNRUEwVXVMVFF6TFRrdU9Tb3BKaVVoSUJBSER5c0FJZ1lWRkI4Q0d3RTNOajhCUGdJMU5BY1ZCZzhCQ3dFbUp5NEJOVFEyTWhZVkZDWWlCaFFXTWpZMEJ5SW1OVFErQVRJZUFSUU9BUUp2M3AwVEFRUDE5UUVCQVFFR0NRUXlBUUVDMXRnQkFRZ0tpc1NLdDJwTFMycExnQ2MzR1N3eUxCa1pMQUxnbTI0ek1nTUcvZmNDQ1FJREFRTVFJU0lSYjhnQkFRTUUvamtCeXdNQkZpNFhZWWlJWVM2M1MycExTMnFUTnljWkxCa1pMRElzR1FBQ0FRRC9ZQU1BQXVBQUN3QWxBRUZBUGdvSkFnTUJBQUVEQUdZQUFRQUFBZ0VBV1FBQ0NBRUVCUUlFV1FjQkJRWUdCVXNIQVFVRkJrOEFCZ1VHUXd3TURDVU1KUkVSRVJFVEV5a1ZFQXNYS3lReU5qVVJOQ1lpQmhVUkZDVVZGQTRCSXlJbVBRRWpGUlFXRnhVakZTRTFJelUrQVQwQkFiK0NYVjJDWFFGOE8yWTdXb0ltaTJXU0FVS0tZNGRkWWtVQk5VVmlZa1greTBYaG56eGtPNEJibjU5bGt3ZCtKQ1IrQjVObG53QUFBQUlBOVA5Z0F3d0M0QUFTQUI4QUswQW9EQW9JQmdRQlBRTUJBUUlCYVFBQUFnSUFUUUFBQUFKUkFBSUFBa1VVRXhvWkV4OFVIeEFFRHlzQUlnWVZGQjhDR3dFM05qOEJQZ0kxTkFVaUpqVTBQZ0V5SGdFVURnRUNiOTZkRXdFRDlmVUJBUUVCQmdrRS92UW5OeGtzTWl3WkdTd0M0SnR1TXpJREJ2MzNBZ2tDQXdFREVDRWlFVy9ETnljWkxCa1pMRElzR1FBRkFRRC9ZQU13QXVBQUF3QUtBQlVBSFFBMUFGOUFYQWNCQWdFY0d4UUdCQUFDSVFFRUFDQUJBd1FFUUFVQkFnRUFBUUlBWmdBQkNnRUFCQUVBV1FBRUJnRURCd1FEV1FrQkJ3Z0lCMHNKQVFjSENFOEFDQWNJUXdVRU5UUXpNakV3THk0cktpUWlIeDRZRnhBT0JBb0ZDZ3NPS3dFM0FRY2xNamNERlJRV054RTBKaU1pRGdFSEFUWTNOU01WRkFjWE5nYzJOeWNHSXlJdUF6MEJJeFVVRmhjVkl4VWhOU01CRVJ3Q0F4eis3Q1VnNDEzZlhFSVpMeVlQQVJJSllpSWlGRERxTWkwVExUTWpRellwRnlhTFpaSUJRb29DMEJEOGtCRDlFUUdCNjBWaXB3RTFSV0lRSFJQK0xSb2FuNTlBTlNKRHF3TVhJQllXS1RWREk2Q2ZaWk1IZmlRa0FBQURBRUQvb0FQQUFxQUFCd0FYQURvQWtFQUxNUUVCQnpvd0FnTUZBa0JMc0JoUVdFQXdBQVlCQUFFR0FHWUFCQUFGQlFSZUNBRUNBQWNCQWdkWkFBRUFBQVFCQUZrQUJRTURCVTBBQlFVRFVnQURCUU5HRzBBeEFBWUJBQUVHQUdZQUJBQUZBQVFGWmdnQkFnQUhBUUlIV1FBQkFBQUVBUUJaQUFVREF3Vk5BQVVGQTFJQUF3VURSbGxBRkFvSU5qTXVMQ1VqR3hrU0R3Z1hDaGNURUFrUUt3QXlOalFtSWdZVUFTRWlCaFVSRkJZeklUSTJOUkUwSmdNbUl5SUdEd0VPQkNNaUp5NENMd0VtSXlJSEF4RStBVE1oTWg0QkZSTUN1RkE0T0ZBNEFRajg4QmNoSVJjREVCY2hJZVVMRHdjTEJ5WUNCQVVFQlFNTkNRRURBd0ZzRFJRVUR2MENEZ29DekFZTUJ3RUJZRGhRT0RoUUFRZ2hHUDF5R0NFaEdBS09HQ0grZFF3R0JTQUNBZ01CQVFnQkFnUUJkQThQL3M4Q0NRb05CZ3NIL2ZjQUFBQUlBRmIvUFFPM0Fza0FLUUEyQUZVQVl3QnhBSUFBa1FDZEFMSkFyM0lCQnd4TkFRWUhjQUVMQ1RnM0lCTUVBZ1ZNUlVRWkJBQUNLZ0VCQUFaQVZWUk9Bd1FNUGdBR0J3a0hCZ2xtQUFVT0FnNEZBbVlBQWdBT0FnQmtBQUFCRGdBQlpBQUJBV2NBREFBTEJBd0xXUUFKQUFvRENRcFpBQVFBQXcwRUExa1NBUTBBRUFnTkVGa1JBUWNBQ0E4SENGa0FEdzRPRDAwQUR3OE9VUUFPRHc1RmdvRlhWcGlXazVLS2lJR1JncEYvZm5kMmJXeGxaRjFjVm1OWFkxRlFTVWhBUGpJd0l5SWRIQmNWRXc0ckFTY1BBU2NtRHdFT0FSVVJGQjRETmo4QkZ4WXpNajhCRmhjV01qYzJOeGNXTWpZM05qVVJOQUV1QVRVMFBnRXpNaFlWRkFZM0p6NEJOVFF1QVNNaUJoVVVGd2NuTGdFakJnOEJFVGNYRmpJMlB3RVhCU0lHRlJFVUZqSTJOUkUwTGdFWElnNENIUUVVRmpJMlBRRW1OeFVVSGdFeVBnRTlBVFF1QVNNR0F5SU9BaFVVRmpNeVBnSTFOQzRCQmlJbU5EWXpNaDRDRlJRRHFiY0wyOGtIQjlNR0JnSUVCQVlHQTgzS0F3UUVBeDR2UXdVVUJXUXNUZ01HQlFJSC92dzJYQ2RES0QxV1hha3pCZ1V4VkRKTWF5WVd5UUlEQWdRRHVzSEtBZ1VGQXR5aS9hb0lDd3NQQ3dVSXpBUUhCUU1MRHdzRHhBVUlDZ2tGQlFrRkR6QU9HUklMS0J3T0dSTUxFeDhHR2hNVERRY0xDUVVDbnlvQlpGUURBMUlDQ1FiOXZBTUdCUU1DQVFGUVZRRUNEVjVtQ0FpWGJoSUJBZ0lHQ0FKRkR2elZWYlVxSjBRblZqd3F0Wm9NRVJ3TU1WVXhiRXNwVWdwVUFRRUJBVWdDSEV4VkFRRUJaQ1UxQ3dmK2tBZ0xDd2dCY0FVSUJVY0RCUWNEalFjTEN3ZU5EMUs2QlFrRUJBa0Z1Z1VJQlFQK25Rc1NHUTRjS0FvVEdRNFNJQkprRXhvVEJRa01CZzBBQUFBQUF3Q2cvK0FEZ0FLZ0FBa0FFZ0FqQUVGQVBoNFNFUTBNQlFJR0Rna0lBd1FCQWtBQUJRWUZhQUFHQWdab0FBUUJBQUVFQUdZQUFnQUJCQUlCVndBQUFBTlBBQU1EQ3dOQ0VpY1lFUkVSRUFjVkt5a0JFU0UzSVJFaEVRY0ZKd0VuQVJVekFTYzNKeTRDSXlJUEFUTWZBVGMrQVRVMEF1RDk0QUdnSVA0Z0FtQWcvdnNUQVZZVy9waEFBV2tYUmhrQ0J3Y0VDd2daQVJZcUdBUUVBZ0FnL2NBQndDQ1lFd0ZYRi82WVFRRm9GMEFaQXdNQ0NCZ1hLaGtFQ2dVTUFBQUFCZ0RnLzZBRElBS2dBQ0FBTHdCQ0FFWUFTZ0JPQUxoQUMwQTVPREFlRUFZSUN3RkFTN0FVVUZoQVFRQUtBd3dEQ2w0T0FRd05Bd3dOWkE4QkRRc0REUXRrQUFzSUNBdGNBQUVBQmdBQkJsa0hBZ0lBQ1FVQ0F3b0FBMWNBQ0FRRUNFMEFDQWdFVWdBRUNBUkdHMEJEQUFvRERBTUtER1lPQVF3TkF3d05aQThCRFFzRERRdGtBQXNJQXdzSVpBQUJBQVlBQVFaWkJ3SUNBQWtGQWdNS0FBTlhBQWdFQkFoTkFBZ0lCRklBQkFnRVJsbEFHVTVOVEV0S1NVaEhSa1ZFUTBKQk5CWTFHak1SRlRNUUVCY3JBU00xTkNZckFTSU9BaDBCSXhVekV4UVdNeUV5UGdjMUV6TWxORDRDT3dFeUhnTWRBU01CRlJRR0l5RWlKaThCTGdROUFRTWhCek1SSXhNakF6TURJeE16QXlDZ0lobUxDeFlRQ2FBcUx5TVlBUm9GQ3drSkNBWUZCQUl1S2Y1OUJRZ0xCWXNGQ1FjR0E4WUJEaEVNL3VZREJnTUVBd1FEQWdFd0FiUG9IQnlPSFJZZXpoMFZIZ0k5S0JraUNSQVdEQ2dkL2JzWklnSURCZ1lJQ0FvS0JnSkZSUVlMQ0FVREJnY0pCU2o5bndFTkVRRUNBZ0lFQlFVR0F3RUNSRUQrSGdIaS9oNEI0djRlQUFBQUFBSUF3UCtnQTBBQzRBQUxBQlFBUDBBOEZCRVFEdzROREFjRFBnQUdBQUVBQmdGbUJ3VUNBd0lCQUFZREFGY0FBUVFFQVVzQUFRRUVVQUFFQVFSRUFBQVRFZ0FMQUFzUkVSRVJFUWdUS3dFVk14RWhFVE0xSVJFaEVTVW5OeGNISnhFakVRSkE0UDNBNFA4QUFvRCtRaGVWbFJkdUlBSUFJUDNnQWlBZy9hQUNZRFFYbFpVWGJmNGFBZVlBQWdEQS82QURRQUtnQUFzQUZBQStRRHNVRVJBUERnME1Cd0VBQVVBQUJnTUdhQWNGQWdNQ0FRQUJBd0JYQUFFRUJBRkxBQUVCQkZBQUJBRUVSQUFBRXhJQUN3QUxFUkVSRVJFSUV5c0JGVE1SSVJFek5TRVJJUkVGQnhjM0p3Y1JJeEVDUU9EOXdPRC9BQUtBL2tJWGxaVVhiaUFDQUNEOTRBSWdJUDJnQW1EWkY1V1ZGMjBCNXY0YUFBQURBRkgvY1FPdkFzQUFEZ0FkQUNrQUowQWtLU2duSmlVa0l5SWhJQjhlREFFOUFBQUJBUUJOQUFBQUFWRUFBUUFCUlJrWUVnSVBLd0V1QVNJR0J3NEJIZ0krQWlZRERnRXVBalkzUGdFeUZoY1dFQU1ISndjWEJ4YzNGemNuTndNbVBKdWVtenhRT1RtZzF0YWdPVGxvU2NYRmtqUTBTVGVQa0k4M2I5V29xQmlvcUJpb3FCaXBxUUpHUEQ0K1BGRFcxcUE1T2FEVzF2NGNTVFEwa3NYRlNUWTVPVFp3L3NRQlhxaW5GNmlvRjZlb0dLaW9BQUFBQWdCK0FBQURnQUpnQUJNQUlnQkJRRDRXQ2dJREJCc1hFaEFKQlFBQkFrQVZDd0lDUGdBQUFRQnBBQUlGQVFRREFnUlpBQU1CQVFOTkFBTURBVkVBQVFNQlJSUVVGQ0lVSWhzVUZoQUdFaXM3QVRjMk56NENOeFVKQVJVR0J3WVhNQlV3QVRVTkFUVWlCZ2NtUGdXQUZTWktUaHdyUUNZQmdQNkF0MmhqQWdHZ0FTaisySXl2UlFFQkRCZzRUNE0rZHlNTUR3d0JvQUVBQVFDaENHaGtwUVlCWUlIQndvSmNkd2NaUmtCT09DY0FBQUFBQWdDQUFBQURnQUpnQUI4QUtnQTZRRGNsREFJREJDUWdEUUFFQWdFQ1FDWUxBZ0ErQUFJQkFta0FBQUFFQXdBRVdRQURBUUVEVFFBREF3RlJBQUVEQVVVVUhCWVVHUVVUS3lVd05UUXVBaWN1QVNjMUNRRTFIZ0VYSGdFZkFUTXdQUWNuTGdFakZTMEJGU0FYRmdPQUF4QXNJeldMWHY2QUFZQTNUQ29yU2lNbUZTQkZyNHorMkFFb0FRUlpJMEFHR2lwUlVTTTFOd1NoL3dEL0FLQUNFeE1VVGpnK0J3Y0lCd2NJQmdnVGQxeUN3c0dCdEVrQUFBTUFZUCtBQTZBQ3dBQVZBQjBBTGdCZFFGb05BUUlJQ3dFRUFRSkFEQUVCQVQ4SkFRUUJBQUVFQUdZQUJRQUlBZ1VJV1FBQ0FBRUVBZ0ZaQUFBQUF3Y0FBMWtLQVFjR0JnZE5DZ0VIQndaUkFBWUhCa1VmSGdBQUp5WWVMaDh1R3hvWEZnQVZBQlVURkJVaUN4SXJBUlFHSXlJdUFUUStBVE1WTnljVklnWVVGakkyTlFJZ0JoQVdJRFlRQVNJdUFUVTBQZ0l5SGdJVURnSUMySDVhTzJNNk9tTTd3TUJxbHBiVWxsVCtxUFQwQVZqMC9tQm5zR1k4Wm82YWptWThQR2FPQVNCYWZqcGpkbU02YjIrQVdKYlVscFZyQWFEMC9xajA5QUZZL2RkbXNHZE5qbVk4UEdhT21vNW1QQUFBQUFJQVFQK0FBOEFDd0FBSkFCTUFMa0FyRUFJQ0FENFREUXdMQ2drSUJ3WUZDZ0k5QVFFQUFnSUFTd0VCQUFBQ1R3TUJBZ0FDUXhJYUVoQUVFaXNCSVFzQklRVURKUVVERnljSE55Y2hOeGNoQndQQS9xbHBhZjZwQVJodEFSVUJGVzR1MWRWVjJBRUdVbElCQnRnQmdnRSsvc0xFL3NMRnhRRSs2SmlZOVpYMzk1VUFBQU1BWVArQUE2QUN3QUFIQUJvQUpnQkhRRVFBQUFBREJBQURXUWtCQlFnQkJnY0ZCbGNBQkFBSEFnUUhWd29CQWdFQkFrMEtBUUlDQVZFQUFRSUJSUWtJSmlVa0l5SWhJQjhlSFJ3YkVBNElHZ2thRXhBTEVDc0FJQVlRRmlBMkVBRWlMZ0UwUGdFek1oNEVGUlFPQWdNakZTTVZNeFV6TlRNMUl3S3MvcWowOUFGWTlQNWdaN0JtWnJCbk5HTlRSekViUEdhT1BTSHY3eUh3OEFMQTlQNm85UFFCV1AzWFpyRE9zR1liTVVkVFl6Uk5qbVk4QW4zd0llL3ZJUUFBQUFNQVlQK0FBNkFDd0FBSEFCZ0FIQUE4UURrQUJBTUZBd1FGWmdBRkFnTUZBbVFBQUFBREJBQURXUVlCQWdFQkFrMEdBUUlDQVZJQUFRSUJSZ2tJSEJzYUdSRVFDQmdKR0JNUUJ4QXJBQ0FHRUJZZ05oQUJJaTRCTlRRK0FqSWVBaFFPQWdFaEZTRUNyUDZvOVBRQldQVCtZR2V3Wmp4bWpwcU9aanc4Wm83K3N3SUEvZ0FDd1BUK3FQVDBBVmo5MTJhd1owMk9aanc4Wm82YWptWThBWTBpQUFBQUFnQmcvNEFEb0FMQUFBY0FHQUFwUUNZQUFBQURBZ0FEV1FRQkFnRUJBazBFQVFJQ0FWRUFBUUlCUlFrSUVSQUlHQWtZRXhBRkVDc0FJQVlRRmlBMkVBRWlMZ0UxTkQ0Q01oNENGQTRDQXF6K3FQVDBBVmowL21CbnNHWThabzZham1ZOFBHYU9Bc0QwL3FqMDlBRlkvZGRtc0dkTmptWThQR2FPbW81bVBBQUNBRDcvWGdQQ0F1SUFFUUFyQUNwQUp3UUJBQUFEQWdBRFdRQUNBUUVDVFFBQ0FnRlJBQUVDQVVVQ0FDWWpHUllNQ1FBUkFoRUZEaXNCSVNJT0FoVVJGQll6SVRJMk5SRTBKaE1VRGdJaklTSXVCVFVSTkRZeklUSWVBeFVEVy8xS0ZTWWNFRHdyQXJZclBEd1BDQTRUQ3YwOEJnc0tDUWNGQXg0VkFzUUlFQXdLQlFMaUVCd21GZjFLS3p3OEt3SzJLeno4M0FvVERnZ0RCUWNKQ2dzR0FzUVZIZ1VLREJBSUFBQUFBZ0JSLzNFRHJ3TEFBQTRBR2dBWlFCWWFHUmdYRmhVVUV4SVJFQThNQUQwQUFBQmZFZ0VQS3dFdUFTSUdCdzRCSGdJK0FpWURCeWNISnpjbk54YzNGd2NESmp5Ym5wczhVRGs1b05iV29EazV0aGlvcUJpb3FCaW9xQmlwQWtZOFBqNDhVTmJXb0RrNW9OYlcvb0lZcUtjWHFLZ1hwNmdZcUFBQUFBSUFZUCtBQTZBQ3dBQUhBQndBUTBCQURnRURBQkFCQmdRQ1FBOEJCQUUvQUFZRUJRUUdCV1lBQUFBREJBQURXUUFFQUFVQ0JBVlpBQUlCQVFKTkFBSUNBVkVBQVFJQlJSSVZGQk1URXhBSEZTc0FJQVlRRmlBMkVBQWlKalEyTXpVWEJ6VWlEZ0VWRkJZeU5qVXpGQUtzL3FqMDlBRlk5UDdLMUphV2FzREFPMk02ZjdOK0tBTEE5UDZvOVBRQldQNVVsdFNXV0lCdmJ6cGpPMWwvZmxwcUFBQUFBUUJBLzRBRHdBTEFBQWtBR0VBVkFnRUFQZ2tJQndZRkJRQTlBUUVBQUY4U0VBSVFLd0VoQ3dFaEJRTWxCUU1Ed1A2cGFXbitxUUVZYlFFVkFSVnVBWUlCUHY3Q3hQN0N4Y1VCUGdBQUFBQUNBR0QvZ0FPZ0FzQUFCd0FUQURaQU13Y0JCUVlDQmdVQ1pnUUJBZ01HQWdOa0FBQUFCZ1VBQmxjQUF3RUJBMHNBQXdNQlVnQUJBd0ZHRVJFUkVSRVRFeEFJRmlzQUlBWVFGaUEyRUFjakZTTTFJelV6TlRNVk13S3MvcWowOUFGWTlLRHdJdTd1SXZBQ3dQVCtxUFQwQVZpKzd1NGk4UEFBQUFBQUFnQmcvNEFEb0FMQUFBY0FDd0FoUUI0QUFBQURBZ0FEVndBQ0FRRUNTd0FDQWdGUkFBRUNBVVVSRXhNUUJCSXJBQ0FHRUJZZ05oQUhJVFVoQXF6K3FQVDBBVmowb1A0QUFnQUN3UFQrcVBUMEFWaStJZ0FBQUFNQU5QOVRBODBDN0FBSEFCZ0FLZ0E1UURZQUFRUUFCQUVBWmdBQUJRUUFCV1FBQXdZQkJBRURCRmtBQlFJQ0JVMEFCUVVDVWdBQ0JRSkdHaGtqSVJrcUdpb1hGUk1TQnhJckFCUVdNalkwSmlJRkZBNENJaTRDTkQ0Q01oNENBU0lPQWhVVUhnRXpNajRDTlRRdUFRRXVmSzU3ZTY0Q0kwaDhxcnlyZTBsSmU2dThxbnhJL2pSUmxHdEFhN2h0VVpSclAydTRBWGV2ZTN1dmU5TmRxM3RKU1h1cnU2dDdTVWw3cXdFeVFHcVVVbXk0YXo5cmxGRnR1R3NBQWdCZy80QURvQUxBQUFjQUVnQW5RQ1FTRVJBUERnVUNBQUZBQUFBQ0FHZ0FBZ0VCQWswQUFnSUJVZ0FCQWdGR0pCTVFBeEVyQUNBR0VCWWdOaEFCQmlNaUppOEJOeGMzRndLcy9xajA5QUZZOVA0Z0NRa0VDZ1J3SkY3Nkl3TEE5UDZvOVBRQldQN0JDUVVFY0NOZSt5UUFBQUFDQUQ3L1hnUENBdUlBRkFBY0FDcEFKeHdiR2hrWUZnWUJBQUZBQWdFQUFRRUFUUUlCQUFBQlVRQUJBQUZGQWdBS0J3QVVBaFFERGlzQklTSUdGUkVVRmpNaE1qWTFFVFF1QlFFbkJ5YzNGd0VYQTF2OVNpczhQQ3NDdGlzOEJRc09FaFFYL2tRRkJjb2dyd0ZqSUFMaVBDdjlTaXM4UENzQ3Rnd1hGUkVPQ3dYOWJ3VUZ5aUN2QVdNZ0FBRUJRQUJnQXNBQjRBQUxBQWF6Q0FBQkppc0JCeWNIRndjWE54YzNKemNDcUtpb0dLaW9HS2lvR0ttcEFlQ3BxQmVvcUJlbnFCZXBxQUFBQUFFQkFBQWdBd0FDZUFBVUFEbEFOZ2dCQkFJQlFBY0JBZ0UvQmdFQlBnQUVBZ01DQkFObUFBRUFBZ1FCQWxrQUF3QUFBMDBBQXdNQVVRQUFBd0JGRWhVVUV4QUZFeXNrSWlZME5qTTFGd2MxSWc0QkZSUVdNalkxTXhRQ2F0U1dsbXJBd0R0ak9uK3pmaWdnbHRTV1dJQnZienBqTzFsL2ZscHFBQUFCQUlEL29BUUFBcUFBSmdBNFFEVWJHZ29KQ0FjR0JRUUpBZ0VCUUFRQkFBQUJBZ0FCV1FBQ0F3TUNUUUFDQWdOUkFBTUNBMFVCQUI4ZEZ4VVFEZ0FtQVNZRkRpc0JNaDRCRlRjWEJ5YzNGelF1QWlNaURnRVVIZ0V6TWo0Qk54Y09BU01pTGdFMU5ENENBZ0Jvc1dkdUVvMkZFbVk1WUlSSllhVmdZS1ZoVFl0akdCa255SDFvc1djOVo0NENvR2F4YUdrU2lJZ1NhVW1FWURoZ3BjS2xZRDV1UndkMGttZXhhRTZPWnowQUFBSUFRUCtBQThBQ3dBQUpBQThBS2tBbkNnY0NBRDRQRGcwRUF3SUJBQWdDUFFFQkFBSUNBRXNCQVFBQUFrOEFBZ0FDUXhJU0ZRTVJLeVVESlFVREpTRUxBU0VsRnlFSEZ5Y0JXRzBCRlFFVmJRRVkvcWxwYWY2cEFjQlNBUWJZVmRXKy9zTEZ4UUUreEFFKy9zTFU5cFgxbHdBQUFnQUEveUFFQUFNZ0FCUUFLd0E4UURrQUJRRUNBUVVDWmdBQ0JBRUNCR1FBQkFjQkF3UURWUUFCQVFCUkJnRUFBQW9CUWhZVkFRQW1KU0VmRlNzV0t3OE9DZ2dBRkFFVUNBNHJBU0lPQWdjK0FqTXlFaFVVRmpJMk5UUXVBUU15UGdNM0RnTWpJZ0kxTkNZaUJoVVVIZ0VDQUdlN2lWSURBM0MrYjZ6ME9GQTRpZXlMVXB0OFh6WUNBa1J2bUZPczlEaFFPSW5zQXlCUGhybG1kOGwwL3ZxNktEZzRLSXZzaWZ3QU1sMTZtVkpab25SRkFRYTZLRGc0S0l2c2lRQUFEQUFsLzBRRDJ3TDZBQThBSFFBdUFEd0FUZ0JmQUhBQWdBQ1ZBS2NBdEFEREFHMUFhcFdCY0FNQkFFNDlBZ1lCTGg0Q0JRYTFBUWtLbGdFQ0NRVkFBQW9GQ1FVS0NXWUFDUUlGQ1FKa0N3RUFBQUVHQUFGWkNBRUdCd0VGQ2dZRldRUUJBZ01EQWswRUFRSUNBMUVBQXdJRFJRRUF1TGVZbHpzNE5ERXJLQ01nSFJ3WEZoRVFDZ2tBRHdFUERBNHJBVEllQXgwQkZBWWlKajBCTkRZVE1oWWRBUlFHSWlZOUFUUTJNd0VVQmlzQklpNEJOVFEyT3dFeUhnRVZJUlFHS3dFaUpqVTBOanNCTWhZbEZoUUdEd0VHSmljbU5qOEJQZ0VlQVJjQkZnWVBBUTRCTGdFbkpqWS9BVFlXRndFZUFROEJEZ0VuTGdFL0FUNENGaGNCSGdFUEFRNEJKeTRCTmo4QlBnRVhBejRCSGdFZkFSWUdCd1ltTHdFdUFUNEROd0UyTWhZZkFSWUdCdzRCTGdFdkFTWTJOd0UrQVI4QkhnRU9BUzhCTGdFQlBnRXlId0VlQVE0Qkx3RXVBVGNDQUFVSkJ3WURFaGdTRWd3TUVoSVlFaElNQWRzU0RINElEZ2dTREg0SURnajlCQklNZmd3U0VneCtEQklDdkFRSUIyMEtHQWNHQndwdEJnd0tDZ1A5YWdZR0MyMEZEQXNKQXdjSEMyd0xHQVlCNkFzR0JqOEdHQW9MQndjL0F3a0xEQVgrZ2dzR0JqOEdHQXNIQ0FFRFB3Y1lDbDBHREFzSkF6OEdCZ3NLR0FjL0FnSUJBZ01HQXdGL0J3OE9CRDhHQmdzRkRBc0pBejhIQnd2OTFBWVlDbTBMQmd3WUMyd0xCd0tjQlE0UEIyMExCZ3dZQzIwS0J3WUMrZ01GQ0FrRmZRMFJFUTE5RFJIOUJCRU5mZ3dTRWd4K0RSRUJJUXdSQ0EwSURSRUlEUWtNRVJFTURSRVI0UWdQRGdRL0JnWUxDeGdHUHdNQkF3Y0Yvb0lMR0FZL0F3RURCd1VMR0FZL0JnY0tBaXdHR0F0dEN3WUdCaGdMYlFVSEF3RUQvV29HR0F0dEN3WUdCQTRRQjIwTEJnWUNsZ01CQXdjRmJRc1lCZ1lHQzIwRENBZ0hCd1lDL1dvRUNBZHRDeGdHQXdFREJ3VnRDeGdHQWVnTEJnWS9CaGdXQmdZL0JoaitqUWNJQkQ4R0dCWUdCajhHR0FzQUFnQ0IvNkFEZ1FLZ0FBOEFJQUF0UUNvT0FRSURBZ0ZBRHdBQ0FUMEFBQUFDQXdBQ1dRQURBUUVEVFFBREF3RlJBQUVEQVVVb0dDTW1CQklyQlNjMk5UUXVBU01pQmhRV016STNGd0V1QVRVME5qSVdGUlFPQkNNaUE0SGpRMUtNVW42eXNuNXJWT0w5bmlZcG4rR2dFeU0wUFVVa2NUSGlWR3RTalZHeS9MTkU0d0VQSm1RMmNhQ2ZjU1ZGUFRRakV3QUFBQUVCQUFBZ0F3QUNJQUFMQUNWQUlnQUVBd0VFU3dVQkF3SUJBQUVEQUZjQUJBUUJUd0FCQkFGREVSRVJFUkVRQmhRckFTTVZJelVqTlRNMU14VXpBd0R3SXU3dUl2QUJEdTd1SXZEd0FBQUFBUUZBLytBQ3dBSmdBQVVBQnJNREFRRW1Ld0UzQ1FFbkFRRkFRUUUvL3NGQkFQOENIMEgrd1A3QVFRRC9BQUFBQVFGQS8rQUN3QUpnQUFVQUJyTURBUUVtS3dFbkNRRTNBd0xBUWY3QkFUOUIvd0lmUWY3QS9zQkJBUDhBQUFBQUFRRXNBSVFDeXdHOUFBb0FFa0FQQ2drSUJ3WUZBRDRBQUFCZklRRVBLeVVHSXlJbUx3RTNGemNYQWNBSkNRUUtCSEFrWHZvampRa0ZCSEFqWHZza0FBUUFnUCtnQTRBQ29BQUlBQkVBR3dBZkFFeEFTUjBjR3hvWUZ4WVRFUkFQQ0FFTkJBY0JRQUFCQndFL0dSSUNCajRBQmdBSEJBWUhWd0FFQUFFREJBRlhCUUVEQUFBRFN3VUJBd01BVHdJQkFBTUFReGtXRVJFU0VSRVNDQllyQ1FFUk14RXpFVE1SQXlNUklSRWpFU1VGQVFjMUl4VUhGUWtCTlNVSE5UTUNBUDdBNE1EZ0lLRC9BS0FCSUFFZy91REFnRUFCZ0FHQS9hQkFRQUpBL3dEK1lBRUEvd0FCb1A2QUFRRC9BQUZ4NXVZQmI1cGF3RE1wQVRQK3pTbUFNNFlBQUFBREFHRC9nQU9nQXNBQUdRQWhBQ1VBUGtBN0lnRUVBQ1VCQVFRQ1FBQUVBQUVBQkFGbUFBSUZBUUFFQWdCWkFBRURBd0ZOQUFFQkExRUFBd0VEUlFFQUpDTWZIaHNhRUE0QUdRRVpCZzRyQVRJZUFSY2VBUlFHQnc0RUl5SXVBU2N1QVRRK0F5QUdFQllnTmhBbkJTRVJBZ0F6WVZja05qbzZOaFl4TlRrN0h6TmhWeVEyT2pwdGkvbitxUFQwQVZqMDRQNUJBUDhDbnhveUpEZUxtb3MzRlNRYkV3a2FNaVEzaTVxTWJEb2g5UDZvOVBRQldCVEEvd0FBQUFRQWdQK2dBNEFDb0FBU0FCNEFwZ0UzQVc1THNDWlFXRUJoQUFjQUhRVUhIVmtKQVFVZkd3SWFCZ1VhV1FnQkJoNEJIQUFHSEZraEFRQUFBd1FBQTFrS0lnSUVJQUVaRWdRWldSZ0JFaEVCQ3dJU0Mxa0FBZ0FCRkFJQldSWUJGQThCRFJNVURWa0FGUUFPRlE1VkZ3RVRFd3hSRUFFTURBc01RaHRBWndBSEFCMEZCeDFaQ1FFRkh4c0NHZ1lGR2xrSUFRWWVBUndBQmh4WklRRUFBQU1FQUFOWkNpSUNCQ0FCR1JJRUdWa1lBUklSQVFzQ0VndFpBQUlBQVJRQ0FWa1dBUlFQQVEwVEZBMVpGd0VURUFFTUZSTU1XUUFWRGc0VlRRQVZGUTVSQUE0VkRrVlpRVXdBSVFBZkFBRUFBQUUyQVRNQkl3RWlBUjRCSEFFUUFRMEJCZ0VFQVA4QS9RRDhBUHNBN3dEc0FPY0E1QURaQU5jQTB3RFJBTXNBeUFEQkFMOEF2QUM2QUt3QXFRQ2ZBSndBa2dDUkFJNEFqQUNIQUlRQWZ3QjlBSGtBZHdCcUFHY0FXZ0JYQUV3QVNnQkdBRVFBUEFBNUFEUUFNZ0F0QUNzQUh3Q21BQ0VBcGdBYUFCa0FGQUFUQUEwQURBQUFBQklBQVFBU0FDTUFEaXNCSWc0Q0J3WVZGQjRCRnhZeU5qVTBKeVlDSWlZMU5ENEJNaDRCRlJRM0l5SW1OVFEvQVRZMEx3RW1JeUlQQVE0Q0l5SW1QUUUwSmlzQklnWWRBUlFPQXlNaUppOEJKaU1pRHdFR0ZCOEJGaFVVRGdFckFTSU9BZzhCRGdNZEFSUVdPd0V5SGdFVkZBNEJEd0VHRkI4QkZqTXlQd0UrQVRNeUZoMEJGQlk3QVRJMlBRRTBOak15SHdFV01qOEJOalF2QVNZMU5EWTdBVEkyUFFJMExnRVhGUlFyQVNJSERnSVZGQjRCSHdFV0R3RUdJeUl2QVNZaklnWWRBUlFPQWlzQklpWTlBVFFuSmlNaUJnOEJCaU1pTHdFbU5EOEJOalUwSnlZckFTSW1QUUUwTmpzQk1qYzJOVFFtTHdFbU5EOEJOak13TXpJZUFSOEJGak15UGdFM05qMEJORHNCTWg0QkhRRVVId0VlQkRNeVB3RStBVElXSHdFZUFSVVVEd0VHRlJRZUFSY1dPd0V5RlFJQ0ZDVWlJQTA0RFJrU09KOXhPVGdOaFYwcVNsZEtLNjhlRXhzUEZBNE9MUTRWRlE0VEJBc05CaE1kSEJROEZSMEZDQXdPQ0FrUkJ4TU9GUlVPTFE0T0V3OE1GUXdmQkFrSUNBTUdBd1FEQWg0VUh3d1ZEQU1IQlJNT0RpME5GaFFQRXdZUkNoTWNIUlE5RkI0YkV4UU9FdzRxRGkwT0RoUVBHeE1lRkJzTUZnSVBIaUFYQndvR0Jnc0lFdzBOTEFVSUNBUVRHQ0VmTHdNRkJnUThCd3NYR0I4UUhnc1NCUWdJQkMwRkJSSWFGeFloSHdjTEN3Y2ZJQmNXRFF3U0JRVXNCUWdEQWdNREFSTVhJUXNURWdjWUVUMEVDQVFZQ0FRSkNRb0tCaUVZRWdJSEJ3Y0NMUUlEQlJNWkJRb0lGaUVlRHdIZ0J3OFZEVGhRR2pBc0VqaHdVRTg1T1A2Z1hrSXJTaXNyU2l0Q2toc1RGQTBURHlrT0xBNE9FZ1VIQkJzVEhoUWVIaFFmQnc0TENBVUlCeE1PRGl3T0tROFNEaFFNRmd3Q0F3UURCZ01IQ0FrRlBCVWREQllNQnd3S0JSSVBLUTRzRGc0VEJ3Z2JFeDRWSFIwVkhoTWJFQk1PRGkwT0tROFREUlFUSEJ3VUh4NE9GdzFRSGhBWUJ4SVVDd29WRWdjVERBd3RCUVVTR2kwaEhnUUhCQU1LQ0I0Z0Z4Y05EQk1GQlMwRkRnVVNHQ0VnRnhjTEJqMEhDeGNYSUJBZUN4SUZEZ1V0QkFFQ0FSTVpCUW9IRnlBZkVnVUlCUjhmR0FZREJRUURBUmtTQXdJQ0FpMENCZ1FIQlJNWElRc1RFUWdYRWdBQUF3REEvK0FEUUFKZ0FBTUFCZ0FKQUFxM0NBY0dCUU1DQXlZckV4OEJDUUlERXdFbndPbHpBU1QraUFFNDV1TCt0cVlCTFdmbUFvRCtid0ZNL2c4QjlmN0dTUUFFQUdEL2dBT2dBc0FBQndBUkFCa0FLZ0JSUUU0QUJ3QUtBUWNLV1FBQkFBQUNBUUJaQUFJQUF3UUNBMWNMQmdJRUFBVUpCQVZYREFFSkNBZ0pUUXdCQ1FrSVVRQUlDUWhGR3hvSUNDTWlHaW9iS2hjV0V4SUlFUWdSRVJFUkVoTVNEUlFyQUJRV01qWTBKaUlURVNNVk14VWpGVE0xRWlBR0VCWWdOaEFCSWk0Qk5UUStBakllQWhRT0FnSFBGeUlYRnlJNllDQWdnR3orcVBUMEFWajAvbUJuc0dZOFpvNmFqbVk4UEdhT0Fka2lGeGNpRi82QUFRQVE4QkFRQWxEMC9xajA5QUZZL2RkbXNHZE5qbVk4UEdhT21vNW1QQUFFQUdEL2dBT2dBc0FBQndBWUFETUFRQUJlUUZzQUJRWUhCZ1VIWmdBSENBWUhDR1FBQUFBREJBQURXUXNCQkFBR0JRUUdXUXdCQ0FBSkFnZ0pXUW9CQWdFQkFrMEtBUUlDQVZFQUFRSUJSVFUwR2hrSkNEazRORUExUUNzcUlSOGVIUmt6R2pNUkVBZ1lDUmdURUEwUUt3QWdCaEFXSURZUUFTSXVBVFUwUGdJeUhnSVVEZ0lESWc0QkZUTW1NeklXRlJRR0J3NENCek0rQVRjK0FUVTBKZ01pQmhRV01qWTFOQzREQXF6K3FQVDBBVmowL21CbnNHWThabzZham1ZOFBHYU9SaXM4SUNZQ1lTUXlGUklYR1FzQkpnRU5JQm9hUmpFUEV4UWNGQVFHQ0FzQ3dQVCtxUFQwQVZqOTEyYXdaMDJPWmp3OFpvNmFqbVk4QWxrYk9DbGRMU01XSlJFVkppa2RLaUVmR0M0Zk1qditpeE1jRkJRT0JRc0lCZ01BQUFBQUJRREEvNEFEUUFMQUFBc0FFd0FYQUNrQU1RQllRRlVuSUFJSkNnRkFBQUFBQkFFQUJGa0ZEQU1EQVFBSENBRUhWd0FJQUFzS0NBdFpBQW9BQ1FZS0NWa0FCZ0lDQmtzQUJnWUNUd0FDQmdKREFBQXZMaXNxSkNNYkdoY1dGUlFURWc4T0FBc0FDeEVURXcwUkt3RTFOQ1lpQmgwQkl4RWhFU1UwTmpJV0hRRWhBU0VSSVFjMEppSUdGUlFXRnhVVUZqSTJQUUUrQVFZaUpqUTJNaFlVQXRCNnJIcHdBb0QrRUdlU1ovNmdBZEQ5d0FKQTRDVTJKUnNWQ1E0SkZSc3pHaE1UR2hNQllKQldlbnBXa1A0Z0FlQ1FTV2RuU1pEK1FBR2dvQnNsSlJzV0l3VlNCd2tKQjFJRkl3b1RHaE1UR2dBQUFBWUF3UURnQTBBQllBQUhBQThBSGdBbkFDOEFOd0JGUUVJS0RRWURBZ2dNQkFNQUFRSUFXUWtGQWdFREF3Rk5DUVVDQVFFRFVRc0hBZ01CQTBVZ0h4RVFOVFF4TUMwc0tTZ2tJeDhuSUNjWUZoQWVFUjRURXhNUURoSXJBRElXRkFZaUpqUTJJZ1lVRmpJMk5DVXlIZ0VWRkFZaklpNENOVFEyTnlJR0ZCWXlOalFtQkRJV0ZBWWlKalEySWdZVUZqSTJOQUh4SGhVVkhoVS9OaVVsTmlYK3dRb1FDaFVQQnc0SkJoVVBHeVVsTlNZbUFkWWVGUlVlRlQ4MkpTVTJKUUZFRlI0VkZSNHhKVFlsSlRZSkNoQUtEeFVHQ1E0SER4VWNKVFlsSlRZbEhCVWVGUlVlTVNVMkpTVTJBQUFBQUFJQkFQL2dBd0FDWUFBd0FFc0JJVXV3QzFCWVFCNHZGd0lKQTBzK0Fnb0JQUUVGQ0RFQkJ3VXRLZ0lHQndWQUd3RUhBVDhiUzdBTVVGaEFIaThYQWdrRFN6NENDZ0k5QVFVSU1RRUhCUzBxQWdZSEJVQWJBUWNCUHh0QUhpOFhBZ2tEU3o0Q0NnRTlBUVVJTVFFSEJTMHFBZ1lIQlVBYkFRY0JQMWxaUzdBTFVGaEFMd0FBQ1FFSkFBRm1BQU1BQ1FBRENWa0NBUUVBQ2dnQkNsa0FDQUFGQndnRldRQUhBQVlFQndaWkFBUUVDd1JDRzB1d0RGQllRQzhCQVFBSkFna0FBbVlBQXdBSkFBTUpXUUFDQUFvSUFncFpBQWdBQlFjSUJWa0FCd0FHQkFjR1dRQUVCQXNFUWh0QUx3QUFDUUVKQUFGbUFBTUFDUUFEQ1ZrQ0FRRUFDZ2dCQ2xrQUNBQUZCd2dGV1FBSEFBWUVCd1paQUFRRUN3UkNXVmxBRDBwSVFrQWtMRFFqRmlreEVoQUxGeXNCSWc0RUl5SXVBUzhCSmljdUFpTWlEZ0VQQVJrQk14RStBVE15SGdFWEZqTXlQZ00zUGdFM0VUVUdBd1lqSWljdUFpTWlEZ0VIRVQ0Qk16SVhIZ1F6TWpjQzRBSVNDQkVNRHdjT0doNEpHeElISENFekZpcEFFZ1VISUEwektCTXFOUTVhTVFnUkVnc1VBd29QQnd3VU54WXVWdzAzTFJVWUtoc0xEVE1vTFZNR0p4SWdIQTRYT0FKQUF3RUJBUUVDQlFJR0JBRUdCd1lMQ0FNRi9yZis1QUVmQlFnSUR3TVRBUUlCQWdFQkFnRUJPaUVDL3NNSEVnTVBDUVFGQXdFVEJRZ1NBUWtEQmdJSEFBQUNBSUQvb0FPQUFxQUFDQUFTQURWQU1oSVJEdzROQ2dnQkFBa0JBd0ZBRUFrQ0F6NEFBUU1BQXdFQVpnQURBUUFEU3dBREF3QlBBZ0VBQXdCREZCRVJFZ1FTS3drQkVUTVJNeEV6RVFFSE5TTVZCeFVKQVRVQ0FQN0E0TURnL3NEQWdFQUJnQUdBQWtEL0FQNWdBUUQvQUFHZ0FXQ2FXc0F6S1FFei9zMHBBQUlBZ1ArZ0E0QUNvQUNCQUk0QXBMYUlod0lIQUFGQVM3QW1VRmhBTVFBREFBOEFBdzlaQmhBQ0FBMEJCdzRBQjFrRUFRSUxBUWtJQWdsWkFBNEFDZzRLVlFVQkFRRUlVUXdCQ0FnTENFSWJRRGNBQXdBUEFBTVBXUVlRQWdBTkFRY09BQWRaQUE0SkNnNU5CQUVDQ3dFSkNBSUpXUVVCQVF3QkNBb0JDRmtBRGc0S1VRQUtEZ3BGV1VBbUFnQ01pNFdFZTNocmFtZGxYMXhYVlZGUFJVSThPU3dxSlNNYkdCTVJEUXdBZ1FLQkVRNHJBU01pSmpVMFB3RTJOQzhCSmlJUEFRNEJJeUltUFFFMEppc0JJZzRCSFFFVURnSWpJaTRCTHdFbUl5SVBBUVlVSHdFZUF4VVVCaXNCSWc0QkhRRVVGanNCTWhZVkZBOEJCaFFmQVJZek1qOEJQZ0V6TWhZZEFSUVdPd0V5TmowQk5ENEJNeklmQVJZeVB3RStBVFFtTHdFbU5UUStBVHNCTWpZOUFqWW1CeFFHSWlZMU1UUStBVEllQVFOUkhoTWJEeFFPRGkwT0tnNFRCeEVLRXh3ZEZEME5GZzBJRFJFSkJ3d0tCUk1PRlJVT0xRNE9Fd1FGQkFJYkVoOE5GdzRlRkI4U0d3OFREZzR0RFJZVUR4TUdFZ2tUSEIwVVBSUWREUlVORXc4VERpa1BMQWNJQ0FjVER3d1ZEQjhVR2dFYncxNkZYU3BLVjBvckFXOGNFeE1PRXc0cER5d09EaE1IQ0JzU0h4UWVEaGNOSHdrUURRY0RCd1VURGc0c0Rpa1BFZ1FJQ0FrRkV4d05GZzQ4RlJ3Y0V4UU9FZzhwRGl3T0RoTUhDQnNUSGhRZUhSVWVEQlVORUJJT0Rpd0hFeElUQnhNTkZBMFZEUndVSHg0VkhFOUNYbDVDSzBvckswb0FBQU1BWVArQUE2QUN3QUFIQUJFQUd3QTNRRFFBQUFBQ0F3QUNXUUFEQUFjR0F3ZFhBQVlJQVFVRUJnVlhBQVFCQVFSTEFBUUVBVkVBQVFRQlJSRVJFUkVVRkJNVEVBa1hLd0FnQmhBV0lEWVFKRElXRlJRR0lpWTFOQk1qTlRNMUl6VXpFVE1DclA2bzlQUUJXUFQrUmlJWEZ5SVhjWUFnSUdBZ0FzRDAvcWowOUFGWUpCY1JFQmdZRUJIK2h4RHdFUDhBQUFBREFHRC9nQU9nQXNBQUJ3QVVBQzRBU0VCRkFBVUhCZ2NGQm1ZQUJnUUhCZ1JrQUFBQUJ3VUFCMWtBQkFBREFnUURXZ2dCQWdFQkFrMElBUUlDQVZJQUFRSUJSZ2tJS2lnbkppVWpHUmdOREFnVUNSUVRFQWtRS3dBZ0JoQVdJRFlRQVNJbU5EWXlGaFVVRGdNM0RnRUhJelErQWpjK0FUVTBKaU1pRnlNMk16SVdGUlFHQXF6K3FQVDBBVmowL21rUEV4TWRGQVFHQ0FzK0lBMEJKZ2NPRmhFU0ZUSWtZUUltQVlZelJob0N3UFQrcVBUMEFWaitlQlFjRXhNT0Jnb0lCd1BuSUNFcUZpRWZHeEFSSmhVakxWMThPekllTHdBREFNRUE0QU5BQVdBQUJ3QVFBQmdBSzBBb0JBWUNBd0FCQVFCTkJBWUNBd0FBQVZFRkF3SUJBQUZGQ1FnV0ZSSVJEUXdJRUFrUUV4QUhFQ3NBSWdZVUZqSTJOQ1VpQmhRV01qWTBKaUFpQmhRV01qWTBBaHMySlNVMkpmN0JHeVVsTlNZbUFnQTJKU1UySlFGZ0pUWWxKVFlsSlRZbEpUWWxKVFlsSlRZQUFBd0FRUC9RQThBQ2NBQUhBQThBRndBZkFDY0FMd0ExQURzQVF3QkxBRk1BV3dFRVM3QWhVRmhBWWdBQ0FBSm9BQU1CQ2dFRENtWUFDZ2dCQ2doa0FBc0pCZ2tMQm1ZQUJnUUpCZ1JrQUFjRkIya1lGd0lVRmdFVkFSUVZWd0FBQUFFREFBRlpEd0VNRGdFTkNRd05XQUFJQUFrTENBbFpFd0VRRWdFUkJSQVJXQUFFQkFWUkFBVUZDd1ZDRzBCbkFBSUFBbWdBQXdFS0FRTUtaZ0FLQ0FFS0NHUUFDd2tHQ1FzR1pnQUdCQWtHQkdRQUJ3VUhhUmdYQWhRV0FSVUJGQlZYQUFBQUFRTUFBVmtQQVF3T0FRMEpEQTFZQUFnQUNRc0lDVmtBQkJBRkJFMFRBUkFTQVJFRkVCRllBQVFFQlZFQUJRUUZSVmxBTFZSVVZGdFVXMXBaVDA1TlRFcEpTRWMvUGowOE96bzVPRE15TVRBdExDa29KU1FURXhNVEV4TVRFeEFaRnlzQU1oWVVCaUltTkRZaUJoUVdNalkwQWpJV0ZBWWlKalEySWdZVUZqSTJOQUF5RmhRR0lpWTBOaUlHRkJZeU5qUVhJUlVoTmpRaUZCY2pOVE1CTXhVak5qVTBKZ2NVRmhVaE5TRUdFek1WSXpZMU5DWW5CaFVVRmhVaE5RS3pHaE1UR2hNNk5DWW1OQ1pOR2hNVEdoTTZOQ1ltTkNiK014b1RFeG9UT2pRbUpqUW1Id0loL2Q4QndBR2hvUUkrb2FFQkFiOEIvZDhDSVFHL29hRUJBYjRCQWYzZkFsQVRHaE1UR2pNbU5DWW1OUDNtRXhvVEV4b3pKalFtSmpRQkZoTWFFeE1hTXlZMEppWTBDaUFJRUJBSUlQN3dJQWdJQkFnTUJBZ0VJQWdDS0NBSUNBUUlCQWdJQkFnRUlBQUpBRVFBSUFPOEFzc0FGUUFuQURNQVJBQlFBRjBBY1FCK0FJd0JFa3V3Q2xCWVFGNFhBUXdMQXdvTVhnQU5BZ29MRFY0QUJ3QUlBUWNJV1FBQkVnRUFDUUVBV1FBSkZRRUdDd2tHV1FBREV3RUNEUU1DV1FBTEZnRUtEd3NLV1FBUEdRRVFCUThRV1FBRkZBRUVFUVVFV1FBUkRnNFJUUUFSRVE1UkdBRU9FUTVGRzBCZ0Z3RU1Dd01MREFObUFBMENDZ0lOQ21ZQUJ3QUlBUWNJV1FBQkVnRUFDUUVBV1FBSkZRRUdDd2tHV1FBREV3RUNEUU1DV1FBTEZnRUtEd3NLV1FBUEdRRVFCUThRV1FBRkZBRUVFUVVFV1FBUkRnNFJUUUFSRVE1UkdBRU9FUTVGV1VCR2dIOXpjbDllVWxFMU5Db29HQllDQUlTRGY0eUFqSGw0Y241emZtbG5YbkZmY1ZoWFVWMVNYVXhMUmtVOU96UkVOVVF3TFNnektqTWhIaFluR0NjT0N3QVZBaFVhRGlzQklTSXVCVFUwTmpNaE1oNERGUlFHQnlFaUxnSTFORFl6SVRJZUFoVVVCZ2NoSWlZME5qTWhNaFlVQmdFaUpqVTBQZ0l6TWg0QkZSUU9BaVlpRGdFVUhnRXlQZ0UwSmdNaUpqVTBQZ0V5SGdFVURnRW5JZzRCRlJRZUF6TXlQZ0UxTkM0REF5SW1OVFErQVRJZUFSUU9BU2NpQmhRV01qWTFOQzRFQTVyOTNRUUhCd1lGQXdJVURnSWpCUXNJQmdRVUR2M2RCZzBKQmhRT0FpTUhEQWtHRkE3OTNRNFVGQTRDSXc0VUZQMERLendSR3lZVkd6QWJFQndtQ3hNUENRa1BFeEFKQ1JrclBCd3ZOekFiR3pBYkNnOEpBd1lKQ2dZSkVBa0VCZ2dMQlNzOEhDODNNQnNiTUJzT0ZCUWNGQU1FQmdnSkFrSUNBd1VHQndjRURoUURCZ2tLQmc0VTd3WUpEQWNPRkFVSkRRY09GTzhVSFJRVUhSUUJtandxRlNZYkVSd3ZIQlVsSEJDSUNROFRFQWtKRUJNUC9wSThLaHd2SEJ3dk56QWJpQWtQQ2dVTENBWUVDUkFKQmdvSkJnUCtpVHdxSEM4Y0hDODNNQnVKRkIwVUZBNEZDUWNIQkFNQUF3QkEvK0VEdndKbkFBTUFCd0FMQUNaQUl3QUNBQU1BQWdOWEFBQUFBUVFBQVZjQUJBUUZUd0FGQlFzRlFoRVJFUkVSRUFZVUt4TWhGU0VSSVJVaEVTRVZJVUFEZi95QkEzLzhnUU4vL0lFQlBEQUJXekQ5MlM4QUFBQUVBQmYvaUFQcEFyZ0FCUUFpQURrQVB3QTlRRG8vUGowOE96bzVMU3dqSWlFZkhoUVRCZ1VFQXdJQkFCY0NBUUZBQUFBQUFRSUFBVmtBQWdNREFrMEFBZ0lEVVFBREFnTkZMeDRYTFFRU0t3RUhKd2NYTnljd1BRRXVBeU1pRGdJSEZ6NEJNaDRCRnhVVUJnY1hOalV4Qnc0QklpNEJOVFEyTnljR0hRTWVBak15TmpjQkJ4YzNGemNEMDFOVkZXcHBVUUZCYlpkU04ybGNUUnNjTXJETXJHVUJBUUVnQWxBeXNNeXRaUUVCSUFJQ2I3cHRic0EyL1J4cEZsTlRGZ0VnVTFNV2Fta1lBUUpUbFd4QUhUWk5NQkJaWjJTc1pnNEdEZ2NFRlJhNFdXZGtyV1lLRkFvRUZSWUNCQU5zdUd0d1lBRklhUmRUVXhjQUFBQUJBVi8vbndLZ0FxQUFTUUJMUUVnNkFRQUZSeDhLQXdJREFrQUFCUUFGYUFjQkFBTUFhQUFEQWdOb0FBSUFCQUVDQkZrQUFRWUdBVTBBQVFFR1VnQUdBUVpHQVFCRFFUYzJMU3NsSXgwYkNBY0FTUUZKQ0E0ckFTSU9BUlVSRkFZaUpqY3dFVFEyTnpZWEhnRVZFUlFPQWdjR0l5SW1OVEFSTkNZaklnNEJGUU1VRmpNV056NENOUk0wSnlZaUJ3WUhNQjBEQmhZekZqYzJOUkUySmdLSkJnc0dSVnRGQVJJUUl5TVFFUUlDQkFJR0NBa05EUWtIQ2dZQktSd2RGQVlKQkFFNEd6OGFPQUVCWUVCRExpOEJEUUhxQmdzRy9ubzlRVU05QWRZWEl3a1ZGUW9qRi80L0Jnb0lDQU1IRmhNQldnb05CZ3NHL3FjcUx3RVpDQlFYRFFIQlN5SVFEeUZMZUkxOVZGRmVBUzh3VHdHRkNnNEFBd0FULy9ZRDdRSkpBQmNBSXdBeEFKcExzQTlRV0VBaUJ3RUVBZ1VDQkY0QUJRTURCVndBQVFZQkFnUUJBbGtBQXdNQVVnQUFBQXNBUWh0THNCaFFXRUFrQndFRUFnVUNCQVZtQUFVREFnVURaQUFCQmdFQ0JBRUNXUUFEQXdCU0FBQUFDd0JDRzBBcEJ3RUVBZ1VDQkFWbUFBVURBZ1VEWkFBQkJnRUNCQUVDV1FBREFBQURUUUFEQXdCU0FBQURBRVpaV1VBVUpTUVpHQ3NxSkRFbE1TQWZHQ01aSXlrbUNCQXJBUlFPQkNNaUxnTTBQZ016TWhjV0Z4WWxJZzRDRlJRV01qWTBKZ2NpRGdFVkZCWXlOalUwTGdJRDdTRThXbXFHUmxHZGRWc3ZMMXQybkZISW5XTWRDUDRUTUZoQUpZdkZpNHRqS1VZb1dINVlHQ2c0QVNBWVBrTS9NeDhyUkZCTlBFMVFSQ3B3UjBzVzRpWkNXakZsam83S2psZ3BTQ3BBVzF0QUlEa3FHQUFBQVFEQUFHQURRQUhnQUFVQUJyTUNBQUVtS3lVM0NRRVhBUU1aSi83QS9zQW5BUmxnS1FGWC9xa3BBUzBBQUFBQUFRREFBR0FEUUFIZ0FBVUFCck1DQUFFbUt3RVhDUUUzQVFNWkovN0Evc0FuQVJrQjRDbitxUUZYS2Y3VEFBQUFBUUZBLytBQ3dBSmdBQVVBQnJNREFRRW1Ld0VuQ1FFM0FRTEFLZjZwQVZjcC90TUNPU2Yrd1A3QUp3RVpBQUFBQVFGQS8rQUN3QUpnQUFVQUJyTURBUUVtS3dFM0NRRW5BUUZBS1FGWC9xa3BBUzBDT1NmK3dQN0FKd0VaQUFBQUFRRkEvK0FDd0FKZ0FDRUFKVUFpR1JnVEN3UUZBQUlCUUFBQUFnRUNBQUZtQUFJQ0FWRUFBUUVMQVVJc0ZSRURFU3NCQmlJdkFSRVVCaUltTlJFSEJpY21ORGMyTnpZek1oWWZBUjRCSHdFZUFSVVVBcnNFRFFXVkNRNEpsUXdLQlFXdUFnWUZBd1VCQWdGWUxDc0RBZ0drQkFTRi9jY0hDUWtIQWptRUN3b0ZEZ1NmQVFVQ0FRSUJVQ2duQWdZREJ3QUFBQUVCUVAvZ0FzQUNZQUFnQUNSQUlSZ1RDd1FFQWdBQlFBQUFBUUlCQUFKbUFBRUJBbEVBQWdJTEFrSXNGUkVERVNzbEppSVBBUkUwSmlJR0ZSRW5KZ2NHRkJjV0Z4WXpNalkzUGdFL0FUNEJOVFFDdXdRTkJaVUpEZ21WREFvRkJhNENCZ1VFQmdFQldDd3JBd0tjQkFTRkFqa0hDUWtIL2NlRUN3b0ZEZ1NmQVFVREFnRlFLQ2NDQmdNSEFBQUFBQUVBd0FCZ0EwQUI0QUFkQUNwQUp4WVNBZ0FCQVVBQUFnRUNhQUFEQUFOcEFBRUFBQUZOQUFFQkFGSUFBQUVBUmh3VUl5TUVFaXNsTmk4QklUSTJOQ1lqSVRjMkp5WWlCd1lIQmhVVUZ4NEJId0VXTXpZQmZBb0toUUk1QndrSkIvM0hoQXNLQlE0RW53RUZCUUZRS0NjRUJ3ZGxDZ3lWQ1E0SmxRd0tCUVd1QWdZRkJ3UUJXQ3dyQlFFQUFRREFBR0FEUUFIaEFCNEFKVUFpRnhNQ0FBRUJRQUFDQUFKcEFBRUFBQUZOQUFFQkFGRUFBQUVBUlIwY0l5TURFQ3NsSmo4QklTSW1ORFl6SVNjbU56NEJGaGNXRnhZVkZBY09BUThCQmlNbUFvUUtDb1g5eHdjSkNRY0NPWVFMQ2dNSkNBT2ZBUVVGQVZBb0p3UUhCMlVLREpVSkRnbVZEQW9EQXdJRXJnSUdCUWNFQVZnc0t3VUJBQUFCQVI3L3B3TGFBbjhBQmdBV1FCTUFBUUE5QUFFQUFXZ0NBUUFBWHhFUkVRTVJLd1VUSXhFakVTTUIvTjZSbTVCWkFTZ0JzUDVRQUFFQVgvOTdBNkVDdlFBTEFBQUpBZ2NKQVJjSkFUY0pBUU50L3BMK2xEUUJiZjZUTkFGc0FXNDAvcEVCYndLOS9wSUJiRFArbFA2VU13RnMvcEl6QVc0QmJRQUFCQUJWLzNFRHFnTElBQk1BSndBK0FFUUFBQVVHTGdFME56NEJOQ1luSmpRK0FSY2VBUlFHSnc0QkpqUTNQZ0UwSmljbU5EWVdGeDRCRkFZREp5TWlKaWNSUGdFM016YytBUjRCRlJFVURnRW1KemNSQnlNUk13TXdDQmdRQ1RJMk5USUpFQmdKT2o0L3JBZ1lFUWdZR1JnWENCRVlDQjhnSXVISXB4Y2hBUUVoRjZmRkRoOGVFQkFiSHc0ZjFMcTRGQWtCRWhnSk5JYVhoVFFKR0JJQkNUeWNzSnhTQ0FFU0Z3a1pQa1UrR1FrWEVRRUlJVk5jVS83Z2dpRVlBYmtYSVFHVENnTVBHeEQ5SEJBYUR3RUlNQUxrbi81SEFBQUFCUUJBLzN3RHdBSzhBQXNBSHdBekFFZ0FYUUFBSlNFaUpqUTJNeUV5RmhRR0F5TWlKalEyT3dFeU5qMEJORFl5RmgwQkRnRUZJeTRCSnpVME5qSVdIUUVVRmpzQk1oWVVCZ01pSmowQlBnRTNNeklXRkFZckFTSUdIUUVVQmlFaUpqMEJOQ1lyQVNJbU5EWTdBUjRCRnhVVUJnT2cvTUFPRWhJT0EwQU9FaEp1d0E0U0VnN0FEaElTSEJJQk52MzNvQ2syQVJJY0VoSU9vQTRTRXU0T0VnRTJLYUFPRWhJT29BNFNFZ0x5RGhJU0RzQU9FaElPd0NrMkFSTDhFaHdTRWh3Uy9vQVNIQklTRHFBT0VoSU9vQ2syQVFFMkthQU9FaElPb0E0U0Vod1NBaUFTRHFBcE5nRVNIQklTRHFBT0VoSU9vQTRTRWh3U0FUWXBvQTRTQUFBQURBQ1dBQUVBQUFBQUFBRUFDQUFTQUFFQUFBQUFBQUlBQUFBaEFBRUFBQUFBQUFNQUZnQlVBQUVBQUFBQUFBUUFDUUNEQUFFQUFBQUFBQVVBTUFEdkFBRUFBQUFBQUFZQUNRRTBBQU1BQVFRSkFBRUFFQUFBQUFNQUFRUUpBQUlBQkFBYkFBTUFBUVFKQUFNQU1BQWlBQU1BQVFRSkFBUUFGZ0JyQUFNQUFRUUpBQVVBWUFDTkFBTUFBUVFKQUFZQUVnRWdBSFVBYmdCcEFHa0FZd0J2QUc0QWN3QUFkVzVwYVdOdmJuTUFYamlKeEFBQUFBQjFBRzRBYVFCcEFHTUFid0J1QUhNQUlGNDRpY1FBT2dCV0FHVUFjZ0J6QUdrQWJ3QnVBQ0FBTVFBdUFEQUFNQUFBZFc1cGFXTnZibk1nT2xabGNuTnBiMjRnTVM0d01BQUFkUUJ1QUdrQWFRQmpBRzhBYmdCekFDQmVPSW5FQUFCMWJtbHBZMjl1Y3lBQUFGWUFaUUJ5QUhNQWFRQnZBRzRBSUFBeEFDNEFNQUF3QUNBQVV3QmxBSEFBZEFCbEFHMEFZZ0JsQUhJQUlBQXlBREFBTEFBZ0FESUFNQUF4QURrQUxBQWdBR2tBYmdCcEFIUUFhUUJoQUd3QUlBQnlBR1VBYkFCbEFHRUFjd0JsQUFCV1pYSnphVzl1SURFdU1EQWdVMlZ3ZEdWdFltVnlJREl3TENBeU1ERTVMQ0JwYm1sMGFXRnNJSEpsYkdWaGMyVUFBSFVBYmdCcEFHa0FZd0J2QUc0QWN3QXRBQUIxYm1scFkyOXVjeTBBQUFJQUFBQUFBQUQvSHdBeUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFZQUFBQUFFQUFnQmJBUUlCQXdFRUFRVUJCZ0VIQVFnQkNRRUtBUXNCREFFTkFRNEJEd0VRQVJFQkVnRVRBUlFCRlFFV0FSY0JHQUVaQVJvQkd3RWNBUjBCSGdFZkFTQUJJUUVpQVNNQkpBRWxBU1lCSndFb0FTa0JLZ0VyQVN3QkxRRXVBUzhCTUFFeEFUSUJNd0UwQVRVQk5nRTNBVGdCT1FFNkFUc0JQQUU5QVQ0QlB3RkFBVUVCUWdGREFVUUJSUUZHQVVjQlNBRkpBVW9CU3dGTUFVMEJUZ0ZQQVZBQlVRRlNBVk1CVkFGVkFWWUJWd0ZZQVZrQldnRmJBVndCWFFkMWJtbEZNVEF3QjNWdWFVVXhNREVIZFc1cFJURXdNZ2QxYm1sRk1UTXdCM1Z1YVVVeE16RUhkVzVwUlRFek1nZDFibWxGTWpBd0IzVnVhVVV5TURFSGRXNXBSVEl3TWdkMWJtbEZNakF6QjNWdWFVVXlNekFIZFc1cFJUSXpNUWQxYm1sRk1qTXlCM1Z1YVVVeU16TUhkVzVwUlRJMk1BZDFibWxGTWpZeEIzVnVhVVV5TmpJSGRXNXBSVEkyTXdkMWJtbEZNalkwQjNWdWFVVXpNREFIZFc1cFJUTXdNUWQxYm1sRk16QXlCM1Z1YVVVek1ETUhkVzVwUlRNek1nZDFibWxGTXpNekIzVnVhVVV6TmpBSGRXNXBSVE0yTXdkMWJtbEZNelkwQjNWdWFVVTBNREFIZFc1cFJUUXdNUWQxYm1sRk5EQXlCM1Z1YVVVME1ETUhkVzVwUlRRd05BZDFibWxGTkRBMUIzVnVhVVUwTURZSGRXNXBSVFF3TndkMWJtbEZOREE0QjNWdWFVVTBNRGtIZFc1cFJUUXhNQWQxYm1sRk5ERXhCM1Z1YVVVME1UTUhkVzVwUlRRek5BZDFibWxGTkRNM0IzVnVhVVUwTXpnSGRXNXBSVFF6T1FkMWJtbEZORFF3QjNWdWFVVTBOREVIZFc1cFJUUTBNZ2QxYm1sRk5EUXpCM1Z1YVVVME5qQUhkVzVwUlRRMk1RZDFibWxGTkRZeUIzVnVhVVUwTmpNSGRXNXBSVFEyTkFkMWJtbEZORFkxQjNWdWFVVTBOallIZFc1cFJUUTJPQWQxYm1sRk5EY3dCM1Z1YVVVME56RUhkVzVwUlRRM01nZDFibWxGTlRBd0IzVnVhVVUxTURFSGRXNXBSVFV3TWdkMWJtbEZOVEF6QjNWdWFVVTFNRFFIZFc1cFJUVXdOUWQxYm1sRk5UQTJCM1Z1YVVVMU1EY0hkVzVwUlRVd09BZDFibWxGTlRNd0IzVnVhVVUxTXpJSGRXNXBSVFV6TkFkMWJtbEZOVE0xQjNWdWFVVTFNemNIZFc1cFJUVTJNQWQxYm1sRk5UWXlCM1Z1YVVVMU5qTUhkVzVwUlRVMk5RZDFibWxGTlRZM0IzVnVhVVUxTmpnSGRXNXBSVFU0TUFkMWJtbEZOVGd4QjNWdWFVVTFPRElIZFc1cFJUVTRNd2QxYm1sRk5UZzBCM1Z1YVVVMU9EVUhkVzVwUlRVNE5nZDFibWxGTlRnM0IzVnVhVVUxT0RnSGRXNXBSVFU0T1FSRmRYSnZCM1Z1YVVVMk1USUFBQUVBQWYvL0FBOEFBUUFBQUF3QUFBQVdBQUFBQWdBQkFBRUFYd0FCQUFRQUFBQUNBQUFBQUFBQUFBRUFBQUFBMWFRbkNBQUFBQURacWx1NUFBQUFBTm1xWEFrPScpIGZvcm1hdCgndHJ1ZXR5cGUnKTtcclxuXHR9XHJcblxyXG5cdC8qICNlbmRpZiAqL1xyXG5cclxuXHQudW5pLWljb25zIHtcclxuXHRcdGZvbnQtZmFtaWx5OiB1bmlpY29ucztcclxuXHRcdHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuXHRcdHRleHQtYWxpZ246IGNlbnRlcjtcclxuXHR9XHJcbjwvc3R5bGU+Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///53\n");

/***/ }),

/***/ 55:
/*!*******************************************************************************************************************************************!*\
  !*** D:/LiJiaqiFiles/codes/MYGITHUB/bruceLee/components/uni-icons/uni-icons.vue?vue&type=style&index=0&id=e080e622&scoped=true&lang=css& ***!
  \*******************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_oneOf_1_1_C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_css_loader_index_js_ref_6_oneOf_1_2_C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_stylePostLoader_js_C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_3_C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_uni_icons_vue_vue_type_style_index_0_id_e080e622_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!./node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--6-oneOf-1-1!./node_modules/css-loader??ref--6-oneOf-1-2!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/src??ref--6-oneOf-1-3!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-custom-block-loader??ref--0-1!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./uni-icons.vue?vue&type=style&index=0&id=e080e622&scoped=true&lang=css& */ 56);\n/* harmony import */ var _C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_oneOf_1_1_C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_css_loader_index_js_ref_6_oneOf_1_2_C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_stylePostLoader_js_C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_3_C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_uni_icons_vue_vue_type_style_index_0_id_e080e622_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_oneOf_1_1_C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_css_loader_index_js_ref_6_oneOf_1_2_C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_stylePostLoader_js_C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_3_C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_uni_icons_vue_vue_type_style_index_0_id_e080e622_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__);\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_oneOf_1_1_C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_css_loader_index_js_ref_6_oneOf_1_2_C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_stylePostLoader_js_C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_3_C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_uni_icons_vue_vue_type_style_index_0_id_e080e622_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_oneOf_1_1_C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_css_loader_index_js_ref_6_oneOf_1_2_C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_stylePostLoader_js_C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_3_C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_uni_icons_vue_vue_type_style_index_0_id_e080e622_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));\n /* harmony default export */ __webpack_exports__[\"default\"] = (_C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_oneOf_1_1_C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_css_loader_index_js_ref_6_oneOf_1_2_C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_loaders_stylePostLoader_js_C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_3_C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_vue_loader_lib_index_js_vue_loader_options_C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_custom_block_loader_index_js_ref_0_1_C_Program_Files_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_webpack_uni_mp_loader_lib_style_js_uni_icons_vue_vue_type_style_index_0_id_e080e622_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0___default.a); //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQTBqQyxDQUFnQiwraUNBQUcsRUFBQyIsImZpbGUiOiI1NS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb2QgZnJvbSBcIi0hQzpcXFxcUHJvZ3JhbSBGaWxlc1xcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxcXFxkaXN0XFxcXGxvYWRlci5qcz8/cmVmLS02LW9uZU9mLTEtMCFDOlxcXFxQcm9ncmFtIEZpbGVzXFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXEBkY2xvdWRpb1xcXFx2dWUtY2xpLXBsdWdpbi11bmlcXFxccGFja2FnZXNcXFxcd2VicGFjay1wcmVwcm9jZXNzLWxvYWRlclxcXFxpbmRleC5qcz8/cmVmLS02LW9uZU9mLTEtMSFDOlxcXFxQcm9ncmFtIEZpbGVzXFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXGNzcy1sb2FkZXJcXFxcaW5kZXguanM/P3JlZi0tNi1vbmVPZi0xLTIhQzpcXFxcUHJvZ3JhbSBGaWxlc1xcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFx2dWUtbG9hZGVyXFxcXGxpYlxcXFxsb2FkZXJzXFxcXHN0eWxlUG9zdExvYWRlci5qcyFDOlxcXFxQcm9ncmFtIEZpbGVzXFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXHBvc3Rjc3MtbG9hZGVyXFxcXHNyY1xcXFxpbmRleC5qcz8/cmVmLS02LW9uZU9mLTEtMyFDOlxcXFxQcm9ncmFtIEZpbGVzXFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXHZ1ZS1sb2FkZXJcXFxcbGliXFxcXGluZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhQzpcXFxcUHJvZ3JhbSBGaWxlc1xcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcdnVlLWNsaS1wbHVnaW4tdW5pXFxcXHBhY2thZ2VzXFxcXHdlYnBhY2stY3VzdG9tLWJsb2NrLWxvYWRlclxcXFxpbmRleC5qcz8/cmVmLS0wLTEhQzpcXFxcUHJvZ3JhbSBGaWxlc1xcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcd2VicGFjay11bmktbXAtbG9hZGVyXFxcXGxpYlxcXFxzdHlsZS5qcyEuL3VuaS1pY29ucy52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZpZD1lMDgwZTYyMiZzY29wZWQ9dHJ1ZSZsYW5nPWNzcyZcIjsgZXhwb3J0IGRlZmF1bHQgbW9kOyBleHBvcnQgKiBmcm9tIFwiLSFDOlxcXFxQcm9ncmFtIEZpbGVzXFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXFxcXGRpc3RcXFxcbG9hZGVyLmpzPz9yZWYtLTYtb25lT2YtMS0wIUM6XFxcXFByb2dyYW0gRmlsZXNcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcQGRjbG91ZGlvXFxcXHZ1ZS1jbGktcGx1Z2luLXVuaVxcXFxwYWNrYWdlc1xcXFx3ZWJwYWNrLXByZXByb2Nlc3MtbG9hZGVyXFxcXGluZGV4LmpzPz9yZWYtLTYtb25lT2YtMS0xIUM6XFxcXFByb2dyYW0gRmlsZXNcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcY3NzLWxvYWRlclxcXFxpbmRleC5qcz8/cmVmLS02LW9uZU9mLTEtMiFDOlxcXFxQcm9ncmFtIEZpbGVzXFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXHZ1ZS1sb2FkZXJcXFxcbGliXFxcXGxvYWRlcnNcXFxcc3R5bGVQb3N0TG9hZGVyLmpzIUM6XFxcXFByb2dyYW0gRmlsZXNcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxccG9zdGNzcy1sb2FkZXJcXFxcc3JjXFxcXGluZGV4LmpzPz9yZWYtLTYtb25lT2YtMS0zIUM6XFxcXFByb2dyYW0gRmlsZXNcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcdnVlLWxvYWRlclxcXFxsaWJcXFxcaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyFDOlxcXFxQcm9ncmFtIEZpbGVzXFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXEBkY2xvdWRpb1xcXFx2dWUtY2xpLXBsdWdpbi11bmlcXFxccGFja2FnZXNcXFxcd2VicGFjay1jdXN0b20tYmxvY2stbG9hZGVyXFxcXGluZGV4LmpzPz9yZWYtLTAtMSFDOlxcXFxQcm9ncmFtIEZpbGVzXFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXEBkY2xvdWRpb1xcXFx3ZWJwYWNrLXVuaS1tcC1sb2FkZXJcXFxcbGliXFxcXHN0eWxlLmpzIS4vdW5pLWljb25zLnZ1ZT92dWUmdHlwZT1zdHlsZSZpbmRleD0wJmlkPWUwODBlNjIyJnNjb3BlZD10cnVlJmxhbmc9Y3NzJlwiIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///55\n");

/***/ }),

/***/ 56:

  !*** ./node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--6-oneOf-1-1!./node_modules/css-loader??ref--6-oneOf-1-2!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/src??ref--6-oneOf-1-3!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-custom-block-loader??ref--0-1!./node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!D:/LiJiaqiFiles/codes/MYGITHUB/bruceLee/components/uni-icons/uni-icons.vue?vue&type=style&index=0&id=e080e622&scoped=true&lang=css& ***!

/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6IjU2LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///56\n");

/***/ })

}]);
;(global["webpackJsonp"] = global["webpackJsonp"] || []).push([
    'components/uni-icons/uni-icons-create-component',
    {
        'components/uni-icons/uni-icons-create-component':(function(module, exports, __webpack_require__){
            __webpack_require__('1')['createComponent'](__webpack_require__(49))
        })
    },
    [['components/uni-icons/uni-icons-create-component']]
]);                
